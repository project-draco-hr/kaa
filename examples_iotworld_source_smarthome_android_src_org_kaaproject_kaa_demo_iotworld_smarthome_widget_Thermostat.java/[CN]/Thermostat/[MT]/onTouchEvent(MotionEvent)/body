{
  if (!isEnabled()) {
    return true;
  }
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
    mHandler.removeMessages(CHECK_PRESSED_MESSAGE);
  setPressed(true);
if (!onControlDown(event)) {
  onStartTrackingTouch();
  updateOnTouch(event,false);
}
 else {
  mHandler.sendEmptyMessageDelayed(UPDATE_ON_CONTROL_MESSAGE,500);
}
break;
case MotionEvent.ACTION_MOVE:
if (!mControlUpPressed && !mControlDownPressed) {
updateOnTouch(event,false);
}
break;
case MotionEvent.ACTION_UP:
if (!mControlUpPressed && !mControlDownPressed) {
updateOnTouch(event,true);
onStopTrackingTouch();
}
 else if (onControlUp(event)) {
updateOnControl();
}
mHandler.sendEmptyMessageDelayed(CHECK_PRESSED_MESSAGE,1000);
mHandler.removeMessages(UPDATE_ON_CONTROL_MESSAGE);
mControlUpPressed=false;
mControlDownPressed=false;
break;
case MotionEvent.ACTION_CANCEL:
onStopTrackingTouch();
setPressed(false);
break;
}
return true;
}
