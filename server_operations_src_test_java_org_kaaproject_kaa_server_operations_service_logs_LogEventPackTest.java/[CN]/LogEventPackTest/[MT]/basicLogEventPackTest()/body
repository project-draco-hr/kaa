{
  LogEventPack logEventPack1=new LogEventPack(ENDPOINT_KEY,DATE_CREATED,LOG_SCHEMA,EVENTS);
  logEventPack1.setLogSchemaVersion(VERSION);
  LogEventPack logEventPack2=new LogEventPack();
  Assert.assertEquals(ENDPOINT_KEY,logEventPack1.getEndpointKey());
  Assert.assertEquals(DATE_CREATED,logEventPack1.getDateCreated());
  Assert.assertEquals(LOG_SCHEMA,logEventPack1.getLogSchema());
  Assert.assertEquals(VERSION,logEventPack1.getLogSchemaVersion());
  Assert.assertEquals(EVENTS,logEventPack1.getEvents());
  Assert.assertNull(logEventPack2.getEndpointKey());
  Assert.assertEquals(0L,logEventPack2.getDateCreated());
  Assert.assertNull(logEventPack2.getLogSchema());
  Assert.assertEquals(0,logEventPack2.getLogSchemaVersion());
  Assert.assertNull(logEventPack2.getEvents());
  logEventPack2.setEndpointKey(ENDPOINT_KEY);
  logEventPack2.setDateCreated(DATE_CREATED);
  logEventPack2.setLogSchema(LOG_SCHEMA);
  logEventPack2.setLogSchemaVersion(VERSION);
  logEventPack2.setEvents(EVENTS);
  Assert.assertEquals(logEventPack1.getEndpointKey(),logEventPack2.getEndpointKey());
  Assert.assertEquals(logEventPack1.getDateCreated(),logEventPack2.getDateCreated());
  Assert.assertEquals(logEventPack1.getLogSchema(),logEventPack2.getLogSchema());
  Assert.assertEquals(logEventPack1.getLogSchemaVersion(),logEventPack2.getLogSchemaVersion());
  Assert.assertEquals(logEventPack1.getEvents(),logEventPack2.getEvents());
}
