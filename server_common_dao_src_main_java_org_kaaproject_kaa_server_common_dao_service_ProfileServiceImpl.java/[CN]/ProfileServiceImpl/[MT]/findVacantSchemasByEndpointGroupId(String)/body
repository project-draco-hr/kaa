{
  validateSqlId(endpointGroupId,"Can't find vacant schemas. Invalid endpoint group id: " + endpointGroupId);
  EndpointGroup group=endpointGroupDao.findById(endpointGroupId);
  List<ProfileFilter> profileFilters=profileFilterDao.findActualByEndpointGroupId(endpointGroupId);
  String appId=group.getApplicationId();
  List<ServerProfileSchemaDto> serverSchemas=serverProfileService.findServerProfileSchemasByAppId(appId);
  Collections.sort(serverSchemas);
  List<EndpointProfileSchemaDto> endpointProfileSchemas=findProfileSchemasByAppId(appId);
  Collections.sort(endpointProfileSchemas);
  Collection<ProfileVersionPairDto> pairVersionSet=new HashSet<>();
  for (int i=0; i < endpointProfileSchemas.size(); i++) {
    EndpointProfileSchemaDto endSchema=endpointProfileSchemas.get(i);
    for (    ServerProfileSchemaDto serverSchema : serverSchemas) {
      if (i == 0) {
        pairVersionSet.add(new ProfileVersionPairDto(serverSchema.getId(),serverSchema.getVersion()));
      }
      pairVersionSet.add(new ProfileVersionPairDto(endSchema.getId(),endSchema.getVersion(),serverSchema.getId(),serverSchema.getVersion()));
    }
    pairVersionSet.add(new ProfileVersionPairDto(endSchema.getVersion(),endSchema.getId()));
  }
  for (  ProfileFilter pf : profileFilters) {
    pairVersionSet.remove(new ProfileVersionPairDto(pf.getEndpointProfileSchemaId(),pf.getEndpointProfileSchemaVersion(),pf.getServerProfileSchemaId(),pf.getServerProfileSchemaVersion()));
  }
  return new ArrayList<>(pairVersionSet);
}
