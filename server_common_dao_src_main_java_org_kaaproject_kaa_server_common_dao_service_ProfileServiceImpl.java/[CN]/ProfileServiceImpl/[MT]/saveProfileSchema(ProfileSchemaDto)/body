{
  validateObject(profileSchemaDto,"Can't save profile schema. Invalid profile schema object.");
  String appId=profileSchemaDto.getApplicationId();
  if (ObjectId.isValid(appId)) {
    String id=profileSchemaDto.getId();
    if (StringUtils.isBlank(id)) {
      ProfileSchema profileSchema=profileSchemaDao.findLatestByAppId(appId);
      int majorVersion=0;
      if (profileSchema != null) {
        majorVersion=profileSchema.getMajorVersion();
      }
      profileSchemaDto.setMinorVersion(0);
      profileSchemaDto.setId(null);
      profileSchemaDto.setMajorVersion(++majorVersion);
      profileSchemaDto.setCreatedTime(System.currentTimeMillis());
    }
 else {
      ProfileSchemaDto oldProfileSchemaDto=getDto(profileSchemaDao.findById(id));
      if (oldProfileSchemaDto != null) {
        oldProfileSchemaDto.editFields(profileSchemaDto);
        profileSchemaDto=oldProfileSchemaDto;
        return getDto(profileSchemaDao.save(new ProfileSchema(profileSchemaDto)));
      }
 else {
        LOG.error("Can't find profile schema with given id [{}].",id);
        throw new IncorrectParameterException("Invalid profile schema id: " + id);
      }
    }
    ProfileSchemaDto profileSchema=getDto(profileSchemaDao.save(new ProfileSchema(profileSchemaDto)));
    if (profileSchema != null) {
      EndpointGroup group=endpointGroupDao.findByAppIdAndWeight(profileSchemaDto.getApplicationId(),0);
      ProfileFilterDto filter=new ProfileFilterDto();
      filter.setBody(DEFAULT_FILTER_BODY);
      filter.setEndpointGroupId(group.getId());
      filter.setSchemaId(profileSchema.getId());
      filter=saveProfileFilter(filter);
      if (filter != null) {
        activateProfileFilter(filter.getId(),profileSchema.getCreatedUsername());
      }
 else {
        LOG.warn("Can't activate profile filter {}",filter);
        throw new IncorrectParameterException("Can't save profile filter.");
      }
    }
 else {
      LOG.warn("Can't save profile schema {}",profileSchemaDto);
      throw new IncorrectParameterException("Can't save profile schema.");
    }
    return profileSchema;
  }
 else {
    throw new IncorrectParameterException("Invalid profile schema object. Incorrect application id" + appId);
  }
}
