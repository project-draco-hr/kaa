{
  Label authorLabel=new Label(Utils.constants.author());
  createdUsername=new KaaAdminSizedTextBox(-1,false);
  createdUsername.setWidth("100%");
  detailsTable.setWidget(0,0,authorLabel);
  detailsTable.setWidget(0,1,createdUsername);
  authorLabel.setVisible(!create);
  createdUsername.setVisible(!create);
  Label dateTimeCreatedLabel=new Label(Utils.constants.dateTimeCreated());
  createdDateTime=new KaaAdminSizedTextBox(-1,false);
  createdDateTime.setWidth("100%");
  detailsTable.setWidget(1,0,dateTimeCreatedLabel);
  detailsTable.setWidget(1,1,createdDateTime);
  dateTimeCreatedLabel.setVisible(!create);
  createdDateTime.setVisible(!create);
  Label nameLabel=new Label(Utils.constants.name());
  nameLabel.addStyleName("required");
  name=new KaaAdminSizedTextBox(DEFAULT_TEXTBOX_SIZE);
  name.setWidth("100%");
  detailsTable.setWidget(2,0,nameLabel);
  detailsTable.setWidget(2,1,name);
  name.addInputHandler(this);
  Label namespaceLabel=new Label(Utils.constants.namespace());
  Label classNameLabel=new Label(Utils.constants.className());
  if (create) {
    namespaceLabel.addStyleName("required");
    classNameLabel.addStyleName("required");
    namespace=new KaaAdminSizedTextBox(DEFAULT_TEXTBOX_SIZE);
    namespace.addInputHandler(this);
    className=new KaaAdminSizedTextBox(DEFAULT_TEXTBOX_SIZE);
    className.addInputHandler(this);
  }
 else {
    namespace=new KaaAdminSizedTextBox(-1,false);
    className=new KaaAdminSizedTextBox(-1,false);
  }
  namespace.setWidth("100%");
  className.setWidth("100%");
  detailsTable.setWidget(3,0,namespaceLabel);
  detailsTable.setWidget(3,1,namespace);
  detailsTable.setWidget(4,0,classNameLabel);
  detailsTable.setWidget(4,1,className);
  description=new KaaAdminSizedTextArea(1024);
  description.setWidth("100%");
  description.getTextArea().getElement().getStyle().setPropertyPx("minHeight",100);
  Label descriptionLabel=new Label(Utils.constants.description());
  detailsTable.setWidget(5,0,descriptionLabel);
  detailsTable.setWidget(5,1,description);
  description.addInputHandler(this);
  detailsTable.getCellFormatter().setVerticalAlignment(5,0,HasVerticalAlignment.ALIGN_TOP);
  ecfSchemasGrid=new EcfSchemasGrid();
  ecfSchemasGrid.setSize("700px","200px");
  Label ecfSchemasLabel=new Label(Utils.constants.schemas());
  ecfSchemasLabel.addStyleName("b-app-content-title-label");
  addEcfSchemaButton=new Button(Utils.constants.addSchema());
  addEcfSchemaButton.addStyleName("b-app-button-small");
  detailsTable.setWidget(6,0,ecfSchemasLabel);
  ecfSchemasLabel.getElement().getParentElement().getStyle().setPropertyPx("paddingBottom",10);
  detailsTable.setWidget(7,0,ecfSchemasGrid);
  detailsTable.getFlexCellFormatter().setColSpan(7,0,3);
  detailsTable.setWidget(8,2,addEcfSchemaButton);
  addEcfSchemaButton.getElement().getParentElement().getStyle().setPropertyPx("paddingTop",15);
  detailsTable.getCellFormatter().setHorizontalAlignment(8,2,HasHorizontalAlignment.ALIGN_RIGHT);
  ecfSchemasLabel.setVisible(!create);
  ecfSchemasGrid.setVisible(!create);
  addEcfSchemaButton.setVisible(!create);
  name.setFocus(true);
}
