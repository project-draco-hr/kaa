{
  Kaa kaa;
  try {
    kaa=new KaaAndroid(context);
    client=kaa.getClient();
    client.getProfileManager().setProfileContainer(new AbstractProfileContainer(){
      @Override public Profile getProfile(){
        return new Profile();
      }
    }
);
    try {
      kaa.start();
      Log.i("KAA","Kaa SDK client started!");
      client.getNotificationManager().addTopicListListener(new NotificationTopicListListener(){
        @Override public void onListUpdated(        List<Topic> topicList){
          Log.i("KAA","Topic list updated" + topicList.toString());
          TopicInfoHolder.holder.updateTopics(topicList);
          final Activity activity=((KaaNotificationApp)context.getApplicationContext()).getCurrentActivity();
          if (null != activity && activity.getClass() == TopicListActivity.class) {
            Log.i("KAA","listActivity");
            activity.runOnUiThread(new Runnable(){
              @Override public void run(){
                ((ListActivity)activity).setListAdapter(new TopicArrayAdapter(activity,TopicInfoHolder.holder.getTopicModelList()));
              }
            }
);
          }
        }
      }
);
      client.getNotificationManager().addNotificationListener(new AbstractNotificationListener(){
        @Override public void onNotification(        final String topicId,        Notification notification){
          Log.i("KAA","NOTIFICATION RECEIVED: " + notification.toString());
          final String message=notification.getMessage();
          final String imageUrl=notification.getImage();
          final Activity activity=((KaaNotificationApp)context.getApplicationContext()).getCurrentActivity();
          TopicInfoHolder.holder.addNotification(topicId,notification);
          if (null != activity) {
            activity.runOnUiThread(new Runnable(){
              @Override public void run(){
                ((TextView)popup.findViewById(R.id.popup_notification)).setText(message);
                ((TextView)popup.findViewById(R.id.popup_topic)).setText(TopicInfoHolder.holder.getTopicName(topicId));
                ((ImageView)popup.findViewById(R.id.popup_image)).setImageBitmap(ImageCache.cache.getImage(imageUrl));
                Activity activity=((KaaNotificationApp)context.getApplicationContext()).getCurrentActivity();
                if (null != activity) {
                  if (activity.getClass() == TopicListActivity.class) {
                    ((TopicListActivity)activity).setListAdapter(new TopicArrayAdapter(activity,TopicInfoHolder.holder.getTopicModelList()));
                  }
 else                   if (activity.getClass() == NotificationListActivity.class) {
                    NotificationListActivity notificationListActivity=(NotificationListActivity)activity;
                    int pos=notificationListActivity.getIntent().getExtras().getInt("position");
                    List<Notification> list=TopicInfoHolder.holder.getTopicModelList().get(pos).getNotifications();
                    notificationListActivity.setListAdapter(new NotificationArrayAdapter(activity,list));
                  }
                }
                View view=activity.getCurrentFocus();
                if (null != view)                 popupWindow.showAtLocation(view,Gravity.CENTER,0,0);
              }
            }
);
          }
        }
      }
);
    }
 catch (    IOException|TransportException e) {
      Log.e("KAA-ERR",e.getMessage());
    }
  }
 catch (  Exception e) {
    Log.i("KAA-ERR",e.getMessage());
  }
}
