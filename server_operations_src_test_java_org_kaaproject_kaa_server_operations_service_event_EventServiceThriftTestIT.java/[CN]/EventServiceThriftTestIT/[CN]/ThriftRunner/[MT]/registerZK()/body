{
  LOG.info("Registring Operations Server in ZK {}:{}",thriftHost,thriftPort);
  OperationsNodeInfo nodeInfo=new OperationsNodeInfo();
  ByteBuffer keyData=ByteBuffer.wrap(new byte[]{45,45,45,45,45});
  ConnectionInfo connectionInfo=new ConnectionInfo(thriftHost,thriftPort,keyData);
  nodeInfo.setConnectionInfo(connectionInfo);
  SupportedChannel channel=new SupportedChannel();
  ZkHttpComunicationParameters httpCommunicationParameters=new ZkHttpComunicationParameters(new IpComunicationParameters(thriftHost,1000));
  BaseStatistics statistics=new BaseStatistics(2,3,1,System.currentTimeMillis());
  ZkHttpStatistics httpChannelStatistics=new ZkHttpStatistics(statistics);
  channel.setZkChannel(new ZkSupportedChannel(ZkChannelType.HTTP,true,httpCommunicationParameters,httpChannelStatistics));
  nodeInfo.setSupportedChannelsArray(Arrays.asList(channel));
  String zkHostPortList="localhost:" + ZK_PORT;
  operationsNode=new OperationsNode(nodeInfo,zkHostPortList,new RetryUntilElapsed(3000,1000));
  try {
    operationsNode.start();
    eventService.getConfig().setZkNode(operationsNode);
    eventService.setZkNode(operationsNode);
    LOG.info("Operations Server {}:{} Zk node set in Config",thriftHost,thriftPort);
  }
 catch (  Exception e) {
    LOG.error("Exception: ",e);
  }
}
