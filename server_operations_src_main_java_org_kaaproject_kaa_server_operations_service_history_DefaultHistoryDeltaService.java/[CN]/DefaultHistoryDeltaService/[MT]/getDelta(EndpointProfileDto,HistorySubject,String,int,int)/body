{
  String endpointId=Base64Util.encode(profile.getEndpointKeyHash());
  HistoryDelta historyDelta=new HistoryDelta();
  if (oldAppSeqNumber == curAppSeqNumber) {
    historyDelta.setEndpointGroupStates(new ArrayList<EndpointGroupStateDto>());
    return historyDelta;
  }
  HistoryKey historyKey=new HistoryKey(applicationToken,subject,oldAppSeqNumber,curAppSeqNumber,profile.getConfigurationVersion(),profile.getProfileVersion());
  ConfigurationIdKey confIdKey=new ConfigurationIdKey(applicationToken,curAppSeqNumber,profile.getConfigurationVersion());
  List<EndpointGroupStateDto> endpointGroups;
  LOG.debug("[{}] Fetching changes from history. From seq number: {} to {}",endpointId,historyKey.getOldSeqNumber(),historyKey.getNewSeqNumber());
  Map<String,EndpointGroupStateDto> groupsMap=getOldGroupMap(profile,subject);
  List<HistoryDto> updates=cacheService.getHistory(historyKey);
  for (  HistoryDto update : updates) {
    ChangeDto change=update.getChange();
    ChangeType changeType=change.getType();
    String groupId=update.getChange().getEndpointGroupId();
    if (changeType == ChangeType.REMOVE_GROUP) {
      if (groupsMap.remove(groupId) != null) {
        historyDelta.setConfigurationChanged(true);
        historyDelta.setTopicListChanged(true);
      }
      continue;
    }
    EndpointGroupStateDto egs=groupsMap.get(groupId);
    if (egs != null) {
      if (changeType == ChangeType.REMOVE_TOPIC || changeType == ChangeType.ADD_TOPIC) {
        LOG.trace("[{}] Detected {} for {} on group {} which means topic list change",endpointId,changeType,change.getTopicId(),change.getEndpointGroupId());
        historyDelta.setTopicListChanged(true);
        continue;
      }
 else       if (changeType == ChangeType.REMOVE_CONF || changeType == ChangeType.ADD_CONF) {
        LOG.trace("[{}] Detected {} for {} on group {} which means configuration change",endpointId,changeType,change.getConfigurationId(),change.getEndpointGroupId());
        if (changeType == ChangeType.ADD_CONF) {
          egs.setConfigurationId(change.getConfigurationId());
        }
 else {
          egs.setConfigurationId(null);
        }
        historyDelta.setConfigurationChanged(true);
      }
 else       if (changeType == ChangeType.REMOVE_PROF) {
        LOG.trace("[{}] Detected {} for {} on group {} which means configuration/topic list change",endpointId,changeType,change.getProfileFilterId(),change.getEndpointGroupId());
        groupsMap.remove(egs.getEndpointGroupId());
        historyDelta.setAllChanged();
      }
 else       if (changeType == ChangeType.ADD_PROF) {
        LOG.trace("[{}] Detected {} for {} on group {}",endpointId,changeType,change.getProfileFilterId(),change.getEndpointGroupId());
        if (!filterService.matches(historyKey.getAppToken(),change.getProfileFilterId(),profile.getProfile().toString())) {
          LOG.trace("[{}] Detected {} does not match current profile body which means configuration/topic list change",endpointId,change.getProfileFilterId());
          groupsMap.remove(egs.getEndpointGroupId());
          historyDelta.setAllChanged();
        }
 else {
          egs.setProfileFilterId(change.getProfileFilterId());
        }
      }
    }
 else {
      if (changeType == ChangeType.ADD_PROF) {
        LOG.trace("[{}] Detected {} for {} on group {}",endpointId,changeType,change.getProfileFilterId(),change.getEndpointGroupId());
        if (filterService.matches(historyKey.getAppToken(),change.getProfileFilterId(),profile.getProfile().toString())) {
          LOG.trace("[{}] Detected {} match current profile body which means possible configuration/topic list change",endpointId,change.getProfileFilterId());
          egs=new EndpointGroupStateDto(groupId,change.getProfileFilterId(),null);
          groupsMap.put(groupId,egs);
          historyDelta.setAllChanged();
        }
      }
    }
  }
  endpointGroups=new ArrayList<EndpointGroupStateDto>(groupsMap.values().size());
  for (  Entry<String,EndpointGroupStateDto> entry : groupsMap.entrySet()) {
    if (entry.getValue().getConfigurationId() == null) {
      LOG.debug("[{}] Attempt to fetch configuration id for {}",endpointId,entry.getKey());
      String confId=cacheService.getConfIdByKey(confIdKey.copyWithNewEGId(entry.getKey()));
      if (confId != null) {
        entry.getValue().setConfigurationId(confId);
      }
 else {
        LOG.debug("[{}] Attempt failed. This is possibly group with topic list but without configuration",endpointId,entry.getKey());
      }
    }
    endpointGroups.add(entry.getValue());
  }
  historyDelta.setEndpointGroupStates(endpointGroups);
  return historyDelta;
}
