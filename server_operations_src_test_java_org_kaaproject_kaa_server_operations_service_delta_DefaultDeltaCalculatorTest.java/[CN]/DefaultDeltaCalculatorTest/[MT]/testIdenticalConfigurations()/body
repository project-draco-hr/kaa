{
  URL protocolSchemaUrl=Thread.currentThread().getContextClassLoader().getResource(COMPLEX_PROTOCOL_SCHEMA);
  URL schemaUrl=Thread.currentThread().getContextClassLoader().getResource(COMPLEX_SCHEMA);
  Schema protocolSchema=new Schema.Parser().parse(new File(protocolSchemaUrl.getPath()));
  Schema schema=new Schema.Parser().parse(new File(schemaUrl.getPath()));
  DeltaCalculator calculator=new DefaultDeltaCalculator(protocolSchema,schema);
  ByteArrayOutputStream baosOld=new ByteArrayOutputStream();
  URL oldConfigUrl=Thread.currentThread().getContextClassLoader().getResource(OLD_COMPLEX_CONFIG);
  IOUtils.copy(new FileInputStream(oldConfigUrl.getPath()),baosOld,1024);
  String oldStr=new String(baosOld.toByteArray(),"UTF-8");
  ConfigurationDto newConfig=new ConfigurationDto();
  ByteArrayOutputStream baosNew=new ByteArrayOutputStream();
  URL newConfigUrl=Thread.currentThread().getContextClassLoader().getResource(OLD_COMPLEX_CONFIG);
  IOUtils.copy(new FileInputStream(newConfigUrl.getPath()),baosNew,1024);
  String newStr=new String(baosNew.toByteArray(),"UTF-8");
  newConfig.setBinaryBody(newStr.getBytes());
  RawBinaryDelta deltaResult=calculator.calculate(oldStr,new String(newConfig.getBody()));
  assertFalse(deltaResult.hasChanges());
  assertNull(deltaResult.getData());
  assertFalse(deltaResult.hasChanges());
}
