{
  LOG.debug("Merging: endpointGroups={}; configurations={}; configurationSchema={}",endpointGroups,configurations,overrideDataSchema);
  if (endpointGroups.isEmpty() || configurations.isEmpty()) {
    LOG.debug("empty endpoint groups or configurations - returning empty result");
    return null;
  }
  if (configurations.size() == 1) {
    return configurations.get(0).getBinaryBody();
  }
  NavigableMap<EndpointGroupDto,ConfigurationDto> endpointGroupsConfigurations=new TreeMap<>(ENDPOINT_GROUP_COMPARATOR);
  for (  EndpointGroupDto endpointGroup : endpointGroups) {
    endpointGroupsConfigurations.put(endpointGroup,null);
  }
  for (  ConfigurationDto configuration : configurations) {
    boolean endpointGroupFound=false;
    for (    EndpointGroupDto endpointGroup : endpointGroupsConfigurations.keySet()) {
      if (configuration.getEndpointGroupId().equals(endpointGroup.getId())) {
        endpointGroupsConfigurations.put(endpointGroup,configuration);
        endpointGroupFound=true;
        break;
      }
    }
    if (!endpointGroupFound) {
      throw new MergeException("No Endpoint Group found for Configuration; Endpoint Group Id: " + configuration.getEndpointGroupId());
    }
  }
  try {
    confGenerator=new DefaultConfigurationProcessor(overrideDataSchema.getBaseSchema());
  }
 catch (  ConfigurationProcessingException e) {
    throw new MergeException(e);
  }
  baseSchemaParser=new Schema.Parser();
  Schema baseAvroSchema=baseSchemaParser.parse(overrideDataSchema.getBaseSchema());
  Schema.Parser overrideSchemaParser=new Schema.Parser();
  Schema overrideAvroSchema=overrideSchemaParser.parse(overrideDataSchema.getOverrideSchema());
  LOG.info("converter: {}",baseAvroSchema.toString());
  GenericAvroConverter<GenericRecord> baseConverter=new GenericAvroConverter(baseAvroSchema);
  GenericAvroConverter<GenericRecord> overrideConverter=new GenericAvroConverter(overrideAvroSchema);
  GenericRecord mergedConfiguration=null;
  try {
    ArrayMergeStrategyResolver arrayMergeStrategyResolver=new ArrayMergeStrategyResolver(overrideDataSchema.getBaseSchema());
    for (    Map.Entry<EndpointGroupDto,ConfigurationDto> entry : endpointGroupsConfigurations.entrySet()) {
      if (entry.getValue() == null) {
        LOG.debug("No Configuration found for Endpoint Group; Endpoint Group Id: " + entry.getKey().getId());
        continue;
      }
      byte[] configurationToApply=entry.getValue().getBinaryBody();
      int groupWeight=entry.getKey().getWeight();
      GenericAvroConverter<GenericRecord> converter=groupWeight == 0 ? baseConverter : overrideConverter;
      LOG.info("weight {} configurationToApply: {}",groupWeight,new String(configurationToApply));
      if (configurationToApply != null) {
        if (mergedConfiguration == null) {
          mergedConfiguration=converter.decodeJson(configurationToApply);
        }
 else {
          LOG.debug("Override schema {}",overrideDataSchema.getOverrideSchema());
          GenericRecord nodeToApply=converter.decodeJson(configurationToApply);
          applyNode(mergedConfiguration,nodeToApply,arrayMergeStrategyResolver);
        }
      }
    }
    return baseConverter.encodeToJsonBytes(mergedConfiguration);
  }
 catch (  IOException|ConfigurationProcessingException e) {
    throw new MergeException(e);
  }
}
