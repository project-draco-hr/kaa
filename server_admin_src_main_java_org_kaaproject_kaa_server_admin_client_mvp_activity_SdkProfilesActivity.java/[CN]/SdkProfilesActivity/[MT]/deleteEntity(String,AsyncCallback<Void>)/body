{
  SdkProfilesActivity.this.getView().clearError();
  BusyPopup.showPopup();
  KaaAdmin.getDataSource().getSdkProfile(id,new AsyncCallback<SdkPropertiesDto>(){
    @Override public void onFailure(    Throwable cause){
      BusyPopup.hidePopup();
      Utils.handleException(cause,SdkProfilesActivity.this.getView());
    }
    @Override public void onSuccess(    final SdkPropertiesDto profile){
      KaaAdmin.getDataSource().checkSdkProfileUsage(profile.getToken(),new AsyncCallback<Boolean>(){
        @Override public void onFailure(        Throwable cause){
          BusyPopup.hidePopup();
          Utils.handleException(cause,SdkProfilesActivity.this.getView());
        }
        @Override public void onSuccess(        Boolean used){
          BusyPopup.hidePopup();
          if (!used) {
            KaaAdmin.getDataSource().deleteSdkProfile(id,callback);
          }
 else {
            StringBuilder message=new StringBuilder();
            message.append("Failed to delete SDK profile ");
            message.append("\"").append(profile.getToken()).append("\": ");
            message.append("an associated endpoint profile has been found.");
            Exception cause=new IllegalArgumentException(message.toString());
            Utils.handleException(cause,SdkProfilesActivity.this.getView());
          }
        }
      }
);
    }
  }
);
}
