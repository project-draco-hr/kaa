{
  listView.clearError();
  registrations.add(listView.getResetButton().addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent clickEvent){
      reset();
    }
  }
));
  registrations.add(listView.getRowActionsSource().addRowActionHandler(new RowActionEventHandler<String>(){
    @Override public void onRowAction(    RowActionEvent<String> event){
      String id=event.getClickedId();
      if (event.getAction() == RowActionEvent.CLICK) {
        goTo(new EndpointProfilePlace(applicationId,id,gridLoaded));
      }
 else       if (event.getAction() == RowActionEvent.DELETE) {
        deleteEntity(id,new BusyAsyncCallback<Void>(){
          @Override public void onFailureImpl(          Throwable caught){
            Utils.handleException(caught,listView);
          }
          @Override public void onSuccessImpl(          Void result){
          }
        }
);
        dataProvider.update();
      }
    }
  }
));
  registrations.add(listView.getEndpointGroupsInfo().addValueChangeHandler(new ValueChangeHandler<EndpointGroupDto>(){
    @Override public void onValueChange(    ValueChangeEvent<EndpointGroupDto> valueChangeEvent){
      findByEndpointGroup();
    }
  }
));
  registrations.add(listView.getFindEndpointButton().addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent clickEvent){
      findByEndpointKeyHash();
    }
  }
));
  final Place previousPlace=place.getPreviousPlace();
  if (previousPlace != null) {
    listView.setBackEnabled(true);
    registrations.add(listView.getBackButton().addClickHandler(new ClickHandler(){
      public void onClick(      ClickEvent event){
        goTo(previousPlace);
      }
    }
));
  }
  registrations.add(listView.getEndpointGroupButton().addValueChangeHandler(new ValueChangeHandler<Boolean>(){
    @Override public void onValueChange(    ValueChangeEvent<Boolean> event){
      findByEndpointGroup();
    }
  }
));
  registrations.add(listView.getEndpointKeyHashButton().addValueChangeHandler(new ValueChangeHandler<Boolean>(){
    @Override public void onValueChange(    ValueChangeEvent<Boolean> event){
      findByEndpointKeyHash();
    }
  }
));
  reset();
}
