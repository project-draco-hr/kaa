{
  LOG.trace("Server {} failed",connectionInfo);
  if (connectionInfo == null) {
    LOG.warn("Server connection info is null, can't resolve");
    return;
  }
  long currentResolutionTime=-1;
  AccessPointIdResolution currentAccessPointIdResolution=resolutionProgressMap.get(connectionInfo.getServerType());
  if (currentAccessPointIdResolution != null) {
    currentResolutionTime=currentAccessPointIdResolution.getResolutionTime();
    if (currentAccessPointIdResolution.getAccessPointId() == connectionInfo.getAccessPointId() && currentAccessPointIdResolution.getCurResolution() != null && System.currentTimeMillis() < currentResolutionTime) {
      LOG.debug("Resolution is in progress for {} server",connectionInfo);
      return;
    }
 else {
      if (currentAccessPointIdResolution.getCurResolution() != null) {
        LOG.trace("Cancelling old resolution: {}",currentAccessPointIdResolution.getCurResolution());
        cancelCurrentFailResolution(currentAccessPointIdResolution);
      }
    }
  }
  LOG.trace("Next fail resolution will be available in {} {}",failureResolutionTimeout,timeUnit.toString());
  Future<?> currentResolution=context.getScheduledExecutor().schedule(new Runnable(){
    @Override public void run(){
      LOG.debug("Removing server {} from resolution map for type: {}",connectionInfo,connectionInfo.getServerType());
      resolutionProgressMap.remove(connectionInfo.getServerType());
    }
  }
,failureResolutionTimeout,timeUnit);
  channelManager.onServerFailed(connectionInfo);
  long updatedResolutionTime=currentAccessPointIdResolution != null ? currentAccessPointIdResolution.getResolutionTime() : currentResolutionTime;
  AccessPointIdResolution newAccessPointIdResolution=new AccessPointIdResolution(connectionInfo.getAccessPointId(),currentResolution);
  if (updatedResolutionTime != currentResolutionTime) {
    newAccessPointIdResolution.setResolutionTime(updatedResolutionTime);
  }
  resolutionProgressMap.put(connectionInfo.getServerType(),newAccessPointIdResolution);
}
