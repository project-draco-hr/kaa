{
  TestingCluster zkCluster=null;
  TTransport transport=null;
  Thread kaaNodeServerLauncherThread=null;
  KaaNodeThriftService.Client client=null;
  try {
    zkCluster=new TestingCluster(new InstanceSpec(null,2185,-1,-1,true,-1,-1,-1));
    zkCluster.start();
    kaaNodeServerLauncherThread=new Thread(new Runnable(){
      @SuppressWarnings("static-access") @Override public void run(){
        LOG.info("Starting Kaa Node Server ...");
        new KaaNodeApplication(new String[]{},new String[]{}).main(new String[]{"common-test-context.xml","kaa-node-test.properties"});
        LOG.info("Kaa Node Server Stopped");
      }
    }
);
    kaaNodeServerLauncherThread.start();
    Thread.sleep(15000);
    transport=new TSocket(HOST,PORT);
    TProtocol protocol=new TBinaryProtocol(transport);
    TMultiplexedProtocol mp=new TMultiplexedProtocol(protocol,KaaThriftService.KAA_NODE_SERVICE.getServiceName());
    client=new KaaNodeThriftService.Client(mp);
    transport.open();
    client.shutdown();
  }
  finally {
    if (transport != null && transport.isOpen()) {
      try {
        transport.close();
      }
 catch (      Exception e) {
      }
    }
    if (kaaNodeServerLauncherThread != null) {
      kaaNodeServerLauncherThread.join(10000);
      if (kaaNodeServerLauncherThread.isAlive()) {
        throw new TimeoutException("Timeout (10 sec) occured while waiting kaa node server shutdown thread!");
      }
    }
    if (zkCluster != null) {
      zkCluster.close();
    }
  }
}
