{
  final String dnsName=getNameFromConnectionInfo(nodeInfo.getConnectionInfo());
  LOG.debug("Update bootstrap service: {}",dnsName);
  try {
    ThriftClient<BootstrapThriftService.Client> client=new ThriftClient<BootstrapThriftService.Client>(nodeInfo.getConnectionInfo().getThriftHost().toString(),nodeInfo.getConnectionInfo().getThriftPort(),KaaThriftService.BOOTSTRAP_SERVICE,BootstrapThriftService.Client.class);
    client.setThriftActivity(new ThriftActivity<BootstrapThriftService.Client>(){
      @Override public void isSuccess(      boolean activitySuccess){
        lastBootstrapServersUpdateFailed=!activitySuccess;
        LOG.info("Bootstrap {}: Operations services list updated {}",dnsName,activitySuccess ? "successfully" : "unsuccessfully");
      }
      @Override public void doInTemplate(      Client t){
        try {
          List<ThriftOperationsServer> operationsServersList=new ArrayList<>();
          for (          Integer accessPointId : opsServersMap.keySet()) {
            operationsServersList.add(opsServersMap.get(accessPointId).opsServer);
            LOG.trace("Bootstrap {} server: {}",dnsName,opsServersMap.get(accessPointId).opsServer.toString());
          }
          LOG.trace("Bootstrap {} Operations servers list size {} ready to updates",dnsName,operationsServersList.size());
          t.onOperationsServerListUpdate(operationsServersList);
          LOG.info("Bootstrap {} Operations servers list updated.",dnsName);
        }
 catch (        TException e) {
          lastBootstrapServersUpdateFailed=true;
          LOG.error(MessageFormat.format("Bootstrap  Operations servers list updated failed",dnsName),e);
        }
      }
    }
);
    ThriftExecutor.execute(client);
  }
 catch (  NoSuchMethodException|SecurityException|InstantiationException|IllegalAccessException|IllegalArgumentException|InvocationTargetException e) {
    lastBootstrapServersUpdateFailed=true;
    LOG.error(MessageFormat.format("Bootstrap {0} Operations services list execute updated failed",dnsName),e);
  }
}
