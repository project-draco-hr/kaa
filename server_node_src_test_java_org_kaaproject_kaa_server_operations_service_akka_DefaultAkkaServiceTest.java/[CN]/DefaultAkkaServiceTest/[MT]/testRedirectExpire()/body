{
  ChannelContext channelContextMock=Mockito.mock(ChannelContext.class);
  MessageEncoderDecoder crypt=new MessageEncoderDecoder(clientPair.getPrivate(),clientPair.getPublic(),serverPair.getPublic());
  akkaService.onRedirectionRule(new RedirectionRule("testDNS".hashCode(),123,1.0,1.0,1000));
  Thread.sleep(2000);
  SyncRequest request=new SyncRequest();
  request.setRequestId(32);
  request.setSyncRequestMetaData(buildSyncRequestMetaData());
  MessageBuilder responseBuilder=Mockito.mock(MessageBuilder.class);
  ErrorBuilder errorBuilder=Mockito.mock(ErrorBuilder.class);
  SessionInitMessage message=toSignedRequest(UUID.randomUUID(),ChannelType.SYNC_WITH_TIMEOUT,channelContextMock,request,responseBuilder,errorBuilder,crypt);
  whenSync(noDeltaResponseWithTopicState);
  akkaService.process(message);
  SyncResponse response=new SyncResponse();
  response.setRequestId(request.getRequestId());
  response.setStatus(SyncResponseResultType.REDIRECT);
  response.setRedirectSyncResponse(new RedirectSyncResponse("testDNS".hashCode()));
  Mockito.verify(operationsService,Mockito.timeout(TIMEOUT / 2).atLeastOnce()).syncProfile(Mockito.any(SyncContext.class),Mockito.any(ProfileClientSync.class));
}
