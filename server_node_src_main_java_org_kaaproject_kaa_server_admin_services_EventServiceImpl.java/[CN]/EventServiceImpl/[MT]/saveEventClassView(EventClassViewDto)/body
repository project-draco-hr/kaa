{
  checkAuthority(KaaAuthorityDto.TENANT_ADMIN);
  try {
    EventClassDto eventClassDto=eventClassViewDto.getSchema();
    String ctlSchemaId=eventClassDto.getCtlSchemaId();
    CtlSchemaFormDto ctlSchemaForm=null;
    if (isEmpty(ctlSchemaId)) {
      if (eventClassViewDto.useExistingCtlSchema()) {
        CtlSchemaReferenceDto metaInfo=eventClassViewDto.getExistingMetaInfo();
        CTLSchemaDto schema=controlService.getCTLSchemaByFqnVersionTenantIdAndApplicationId(metaInfo.getMetaInfo().getFqn(),metaInfo.getVersion(),metaInfo.getMetaInfo().getTenantId(),metaInfo.getMetaInfo().getApplicationId());
        eventClassDto.setCtlSchemaId(schema.getId());
      }
 else {
        ctlSchemaForm=ctlService.saveCTLSchemaForm(eventClassViewDto.getCtlSchemaForm(),ConverterType.FORM_AVRO_CONVERTER);
        eventClassDto.setCtlSchemaId(ctlSchemaForm.getId());
      }
    }
    return getEventClassViewByCtlSchemaId(eventClassDto);
  }
 catch (  Exception e) {
    throw Utils.handleException(e);
  }
}
