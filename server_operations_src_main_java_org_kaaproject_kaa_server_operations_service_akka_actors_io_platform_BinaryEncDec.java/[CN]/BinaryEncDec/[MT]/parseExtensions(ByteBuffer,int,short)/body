{
  ClientSync sync=new ClientSync();
  for (short extPos=0; extPos < extensionsCount; extPos++) {
    if (buf.remaining() < MIN_SIZE_OF_EXTENSION_HEADER) {
      throw new PlatformEncDecException(MessageFormat.format("Extension header is to small. Available {}, current possition is {}!",buf.remaining(),buf.position()));
    }
    int extMetaData=buf.getInt();
    int type=extMetaData & 0xF000 >> 16;
    int options=extMetaData & 0x0FFF;
    int payloadLength=buf.getInt();
    if (buf.remaining() < payloadLength) {
      throw new PlatformEncDecException(MessageFormat.format("Extension payload is to small. Available {}, expected {} current possition is {}!",buf.remaining(),payloadLength,buf.position()));
    }
switch (type) {
case META_DATA_EXTENSION_ID:
      parseClientSyncMetaData(sync,buf,options,payloadLength);
    break;
case PROFILE_EXTENSION_ID:
  parseProfileClientSync(sync,buf,options,payloadLength);
break;
case USER_EXTENSION_ID:
parseUserClientSync(sync,buf,options,payloadLength);
break;
case LOGGING_EXTENSION_ID:
parseLogClientSync(sync,buf,options,payloadLength);
break;
default :
break;
}
}
return validate(sync);
}
