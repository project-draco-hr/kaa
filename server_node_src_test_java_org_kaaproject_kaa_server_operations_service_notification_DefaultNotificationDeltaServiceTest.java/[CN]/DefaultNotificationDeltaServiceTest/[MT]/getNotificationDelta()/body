{
  EndpointProfileDto profile=new EndpointProfileDto();
  profile.setEndpointKeyHash(ENDPOINT_KEY_HASH_BYTES);
  List<String> subscriptions=new ArrayList<>();
  subscriptions.add(T1);
  subscriptions.add(T3);
  profile.setSubscriptions(subscriptions);
  List<SubscriptionCommand> subscriptionCommands=new ArrayList<>();
  subscriptionCommands.add(new SubscriptionCommand(T1,SubscriptionCommandType.ADD));
  subscriptionCommands.add(new SubscriptionCommand(T2,SubscriptionCommandType.ADD));
  subscriptionCommands.add(new SubscriptionCommand(T3,SubscriptionCommandType.REMOVE));
  subscriptionCommands.add(new SubscriptionCommand(T4,SubscriptionCommandType.REMOVE));
  List<String> acceptedUnicastNotifications=new ArrayList<>();
  acceptedUnicastNotifications.add(PNF_ID_1);
  List<TopicState> topicStates=new ArrayList<>();
  topicStates.add(new TopicState(T1,42));
  topicStates.add(new TopicState(T3,1));
  List<EndpointGroupStateDto> history=new ArrayList<>();
  history.add(new EndpointGroupStateDto(EG1,PF1,CF1));
  history.add(new EndpointGroupStateDto(EG2,PF2,null));
  history.add(new EndpointGroupStateDto(EG3,PF2,null));
  profile.setGroupState(history);
  profile.setSimpleTopicHash(130150);
  profile.setTopicHash(SHA1HashUtils.hashToBytes(T1 + "|" + T3+ "|"+ T5));
  NotificationDto t1Nf43=new NotificationDto();
  t1Nf43.setId(T1NF43);
  t1Nf43.setSecNum(43);
  t1Nf43.setExpiredAt(new Date(System.currentTimeMillis() + TimeUnit.DAYS.toMillis(7)));
  Mockito.when(notificationService.findNotificationsByTopicIdAndVersionAndStartSecNum(T1,42,0,0)).thenReturn(Collections.singletonList(t1Nf43));
  EndpointNotificationDto pnf2=new EndpointNotificationDto();
  NotificationDto nfDto=new NotificationDto();
  pnf2.setId(PNF_ID_2);
  pnf2.setNotificationDto(nfDto);
  nfDto.setExpiredAt(new Date(System.currentTimeMillis() + TimeUnit.DAYS.toMillis(7)));
  Mockito.when(notificationService.findUnicastNotificationsByKeyHash(ENDPOINT_KEY_HASH_BYTES)).thenReturn(Collections.singletonList(pnf2));
  GetNotificationRequest request=new GetNotificationRequest(130150,profile,subscriptionCommands,acceptedUnicastNotifications,topicStates);
  GetNotificationResponse response=notificationDeltaService.getNotificationDelta(request);
  Mockito.verify(notificationService).findNotificationsByTopicIdAndVersionAndStartSecNum(T1,42,0,0);
  Mockito.verify(notificationService).findNotificationsByTopicIdAndVersionAndStartSecNum(T2,0,0,0);
  Mockito.verify(notificationService).removeUnicastNotificationById(PNF_ID_1);
  Assert.assertNotNull(response);
  Assert.assertNotNull(response.getNotifications());
  Assert.assertEquals(2,response.getNotifications().size());
  Assert.assertEquals(T1NF43,response.getNotifications().get(0).getId());
  Assert.assertEquals(PNF_ID_2,response.getNotifications().get(1).getId());
  Assert.assertNotNull(response.getSubscriptionStates());
  Assert.assertEquals(2,response.getSubscriptionStates().size());
  Assert.assertEquals(new Integer(43),response.getSubscriptionStates().get(T1));
  Assert.assertEquals(new Integer(0),response.getSubscriptionStates().get(T2));
  Assert.assertNull(response.getTopicList());
}
