{
  BootstrapThriftServiceImpl b=new BootstrapThriftServiceImpl();
  assertNotNull(b);
  b.setConfig(confMock);
  ByteBuffer pk=ByteBuffer.wrap(new byte[]{1,2,3});
  List<ThriftSupportedChannel> scl1=new ArrayList<>();
  ThriftIpParameters ip1=new ThriftIpParameters("host1",123);
  ThriftCommunicationParameters com11=new ThriftCommunicationParameters();
  com11.setHttpParams(ip1);
  ThriftSupportedChannel sc11=new ThriftSupportedChannel(ThriftChannelType.HTTP,com11);
  scl1.add(sc11);
  ThriftOperationsServer s1=new ThriftOperationsServer("host1",10,pk,scl1);
  List<ThriftSupportedChannel> scl2=new ArrayList<>();
  ThriftIpParameters ip2=new ThriftIpParameters("host2",123);
  ThriftCommunicationParameters com12=new ThriftCommunicationParameters();
  com12.setHttpParams(ip2);
  ThriftSupportedChannel sc12=new ThriftSupportedChannel(ThriftChannelType.HTTP,com12);
  scl2.add(sc12);
  ThriftOperationsServer s2=new ThriftOperationsServer("host2",10,pk,scl2);
  List<ThriftSupportedChannel> scl3=new ArrayList<>();
  ThriftIpParameters ip3=new ThriftIpParameters("host3",123);
  ThriftCommunicationParameters com13=new ThriftCommunicationParameters();
  com13.setHttpParams(ip3);
  ThriftSupportedChannel sc13=new ThriftSupportedChannel(ThriftChannelType.HTTP,com13);
  scl3.add(sc13);
  ThriftOperationsServer s3=new ThriftOperationsServer("host3",10,pk,scl3);
  List<ThriftOperationsServer> operationsServersList=new ArrayList<>();
  operationsServersList.add(s1);
  operationsServersList.add(s2);
  operationsServersList.add(s3);
  try {
    b.onOperationsServerListUpdate(operationsServersList);
    verify(endpointListMock,times(1)).updateList(operationsServersList);
  }
 catch (  TException e) {
    fail(e.toString());
  }
}
