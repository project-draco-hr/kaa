{
  try {
    perThreadRequest.set(getThreadLocalRequest());
    Object handler=getBean(getThreadLocalRequest());
    RPCRequest rpcRequest=RPC.decodeRequest(payload,handler.getClass(),this);
    onAfterRequestDeserialized(rpcRequest);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Invoking " + handler.getClass().getName() + "."+ rpcRequest.getMethod().getName());
    }
    return RPCHelper.invokeAndEncodeResponse(handler,rpcRequest.getMethod(),rpcRequest.getParameters(),rpcRequest.getSerializationPolicy());
  }
 catch (  IncompatibleRemoteServiceException ex) {
    log("An IncompatibleRemoteServiceException was thrown while processing this call.",ex);
    return RPC.encodeResponseForFailure(null,ex);
  }
catch (  SerializationException ex) {
    LOG.error("An SerializationException was thrown while processing this call.",ex);
    throw ex;
  }
 finally {
    perThreadRequest.set(null);
  }
}
