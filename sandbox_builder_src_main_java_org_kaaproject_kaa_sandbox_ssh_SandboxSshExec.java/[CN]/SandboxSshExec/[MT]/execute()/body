{
  if (getHost() == null) {
    throw new BuildException("Host is required.");
  }
  if (getUserInfo().getName() == null) {
    throw new BuildException("Username is required.");
  }
  if (getUserInfo().getKeyfile() == null && getUserInfo().getPassword() == null) {
    throw new BuildException("Password or Keyfile is required.");
  }
  if (command == null && commandResource == null) {
    throw new BuildException("Command or commandResource is required.");
  }
  int numberOfInputs=(inputFile != null ? 1 : 0) + (inputProperty != null ? 1 : 0) + (inputString != null ? 1 : 0);
  if (numberOfInputs > 1) {
    throw new BuildException("You can't specify more than one of" + " inputFile, inputProperty and" + " inputString.");
  }
  if (inputFile != null && !inputFile.exists()) {
    throw new BuildException("The input file " + inputFile.getAbsolutePath() + " does not exist.");
  }
  Session session=null;
  StringBuffer output=new StringBuffer();
  try {
    session=openSession();
    if (command != null) {
      log("cmd : " + command,Project.MSG_INFO);
      executeCommand(session,command,output);
    }
 else {
      try {
        BufferedReader br=new BufferedReader(new InputStreamReader(commandResource.getInputStream()));
        String cmd;
        while ((cmd=br.readLine()) != null) {
          log("cmd : " + cmd,Project.MSG_INFO);
          output.append(cmd).append(" : ");
          executeCommand(session,cmd,output);
          output.append("\n");
        }
        FileUtils.close(br);
      }
 catch (      IOException e) {
        if (getFailonerror()) {
          throw new BuildException(e);
        }
 else {
          log("Caught exception: " + e.getMessage(),Project.MSG_ERR);
        }
      }
    }
  }
 catch (  JSchException e) {
    if (getFailonerror()) {
      throw new BuildException(e);
    }
 else {
      log("Caught exception: " + e.getMessage(),Project.MSG_ERR);
    }
  }
 finally {
    if (outputProperty != null) {
      getProject().setProperty(outputProperty,output.toString());
    }
    if (session != null && session.isConnected()) {
      session.disconnect();
    }
  }
}
