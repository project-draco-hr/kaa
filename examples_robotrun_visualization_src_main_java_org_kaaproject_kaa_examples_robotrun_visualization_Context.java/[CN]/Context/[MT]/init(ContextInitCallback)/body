{
  Runtime.getRuntime().addShutdownHook(new Thread(new Runnable(){
    @Override public void run(){
      stopRun();
      if (kaa != null) {
        kaa.stop();
      }
    }
  }
));
  this.callback=callback;
  emulatorManager=new EmulatorManager(this,true);
  try {
    kaa=new KaaDesktop();
  }
 catch (  Exception e) {
    LOG.error("Failed to create instance of desktop Kaa!",e);
    showErrorDialog("Failed to create instance of desktop Kaa!",true);
  }
  KaaClient client=kaa.getClient();
  String appToken=null;
  try {
    Field propertiesField=AbstractKaaClient.class.getDeclaredField("properties");
    propertiesField.setAccessible(true);
    KaaClientProperties props=(KaaClientProperties)propertiesField.get(client);
    appToken=props.getApplicationToken();
  }
 catch (  Exception e) {
    LOG.error("Failed to get client properties!",e);
    showErrorDialog("Failed to get client properties!",true);
  }
  client.getProfileManager().setProfileContainer(new BasicProfileContainer());
  client.getLogCollector().setUploadStrategy(new BorderLogUploadStrategy());
  client.getConfigurationManager().subscribeForConfigurationUpdates(this);
  labyrinthConverter=new BasicLabyrinthConverter();
  emulatorRobots=new HashMap<>();
  CommonRecord configurationRecord=client.getConfigurationManager().getConfiguration();
  labyrinth=labyrinthConverter.convert(null,configurationRecord);
  eventManager=new DefaultEventManager(client,EntityType.DESKTOP,new DefaultEventManager.EventManagerDataProvider(){
    @Override public Cell getCurrentCell(){
      return null;
    }
    @Override public Labyrinth getLabyrinth(){
      return labyrinth;
    }
    @Override public String getEntityName(){
      return "visualizator";
    }
  }
);
  try {
    client.getSchemaPersistenceManager().setSchemaStorage(new BasicSchemaStorage());
  }
 catch (  Exception e) {
    LOG.error("Failed to set schema storage!",e);
    showErrorDialog("Failed to set schema storage!",true);
  }
  try {
    client.getConfigurationPersistenceManager().setConfigurationStorage(new BasicConfigurationStorage());
  }
 catch (  Exception e) {
    LOG.error("Failed to set configuration storage!",e);
    showErrorDialog("Failed to set configuration storage!",true);
  }
  eventManager.addListener(this);
  robotPositions=eventManager.getRobotPositions();
  try {
    kaa.start();
  }
 catch (  IOException|TransportException e) {
    LOG.error("Failed to start Kaa!",e);
    showErrorDialog("Failed to start Kaa!",true);
  }
  restEngine=new RestEngine(appToken);
  try {
    restEngine.init();
  }
 catch (  Exception e) {
    LOG.error("Failed to init rest engine!",e);
    showErrorDialog("Failed to init rest engine!",true);
  }
  eventManager.init();
}
