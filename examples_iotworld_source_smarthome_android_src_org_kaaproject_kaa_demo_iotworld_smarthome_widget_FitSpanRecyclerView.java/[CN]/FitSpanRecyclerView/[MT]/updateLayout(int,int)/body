{
  LayoutManager layoutManager=getLayoutManager();
  if (layoutManager instanceof GridLayoutManager) {
    final GridLayoutManager gridLayoutManager=(GridLayoutManager)layoutManager;
    int recyclerViewWidth=getMeasuredWidth();
    int recyclerViewHeight=getMeasuredHeight();
    int itemWidth=mItemWidth;
    int itemHeight=(int)(mItemWidth * mItemAspectRatio);
    int count=getAdapter().getItemCount();
    if (count > 0) {
      int spanCount=recyclerViewWidth / itemWidth;
      itemWidth=recyclerViewWidth / spanCount;
      itemHeight=(int)(itemWidth * mItemAspectRatio);
      int rowCount=(int)Math.ceil((float)count / (float)spanCount);
      int computedHeight=itemHeight * rowCount;
      while (computedHeight > recyclerViewHeight) {
        spanCount++;
        rowCount=(int)Math.ceil((float)count / (float)spanCount);
        itemWidth=recyclerViewWidth / spanCount;
        itemHeight=(int)(itemWidth * mItemAspectRatio);
        computedHeight=itemHeight * rowCount;
      }
      for (int i=0; i < count; i++) {
        View v=this.getChildAt(i);
        if (v != null) {
          ViewGroup.LayoutParams lp=v.getLayoutParams();
          if (lp == null) {
            lp=new GridLayoutManager.LayoutParams(itemWidth,itemHeight);
            v.setLayoutParams(lp);
          }
 else {
            lp.width=itemWidth;
            lp.height=itemHeight;
          }
        }
      }
      int verticalPadding=(recyclerViewHeight - computedHeight) / 2;
      setPadding(0,verticalPadding,0,verticalPadding);
      gridLayoutManager.setSpanCount(spanCount);
      post(mLayoutRequester);
    }
  }
}
