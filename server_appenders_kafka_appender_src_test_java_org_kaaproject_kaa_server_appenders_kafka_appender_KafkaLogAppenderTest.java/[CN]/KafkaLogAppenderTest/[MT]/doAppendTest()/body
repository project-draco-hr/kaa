{
  DeliveryCallback callback=new DeliveryCallback();
  logAppender.doAppend(generateLogEventPack(20),callback);
  Thread.sleep(3000);
  Properties props=new Properties();
  props.put("bootstrap.servers","localhost:9092");
  props.put("group.id","test");
  props.put("enable.auto.commit","false");
  props.put("auto.commit.interval.ms","1000");
  props.put("session.timeout.ms","30000");
  props.put("key.deserializer","org.apache.kafka.common.serialization.StringDeserializer");
  props.put("value.deserializer","org.apache.kafka.common.serialization.ByteArrayDeserializer");
  props.put("partition.assignment.strategy","range");
  KafkaConsumer<String,byte[]> consumer=new KafkaConsumer<String,byte[]>(props);
  consumer.subscribe(TOPIC_NAME);
  Map<String,ConsumerRecords<String,byte[]>> records=consumer.poll(100);
  Assert.assertEquals(20,callback.getSuccessCount());
}
