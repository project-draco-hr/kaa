{
  Schema recordSchema=record.getSchema();
  GenericRecord avroRecord=new GenericData.Record(recordSchema);
  for (  Schema.Field field : recordSchema.getFields()) {
    String fieldName=field.name();
    CommonValue value=record.getField(fieldName);
    if (value.isRecord()) {
      avroRecord.put(fieldName,createRecord(value.getRecord()));
    }
 else     if (value.isArray()) {
      avroRecord.put(fieldName,createArray(value.getArray()));
    }
 else     if (value.isEnum()) {
      avroRecord.put(fieldName,createEnum(value.getEnum()));
    }
 else     if (value.isFixed()) {
      avroRecord.put(fieldName,createFixed(value.getFixed()));
    }
 else     if (value.isBoolean()) {
      avroRecord.put(fieldName,value.getBoolean());
    }
 else     if (value.isInteger()) {
      avroRecord.put(fieldName,value.getInteger());
    }
 else     if (value.isLong()) {
      avroRecord.put(fieldName,value.getLong());
    }
 else     if (value.isDouble()) {
      avroRecord.put(fieldName,value.getDouble());
    }
 else     if (value.isFloat()) {
      avroRecord.put(fieldName,value.getFloat());
    }
 else     if (value.isString()) {
      avroRecord.put(fieldName,value.getString());
    }
 else     if (value.isBytes()) {
      avroRecord.put(fieldName,value.getBytes());
    }
  }
  AvroDataCanonizationUtils.canonizeRecord(avroRecord);
  return avroRecord;
}
