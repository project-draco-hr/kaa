{
  KaaClientPropertiesState state=new KaaClientPropertiesState(new FilePersistentStorage(),CommonsBase64.getInstance(),KaaClientPropertiesStateTest.getProperties());
  NotificationTransport transport=mock(NotificationTransport.class);
  DefaultNotificationManager notificationManager=new DefaultNotificationManager(state,executorContext,transport);
  final List<Topic> topicUpdates=new LinkedList<>();
  topicUpdates.add(new Topic(1l,"topic_name1",SubscriptionType.MANDATORY_SUBSCRIPTION));
  topicUpdates.add(new Topic(2l,"topic_name1",SubscriptionType.MANDATORY_SUBSCRIPTION));
  topicUpdates.add(new Topic(3l,"topic_name1",SubscriptionType.MANDATORY_SUBSCRIPTION));
  notificationManager.addTopicListListener(new NotificationTopicListListener(){
    @Override public void onListUpdated(    List<Topic> list){
      Assert.assertArrayEquals(topicUpdates.toArray(),list.toArray());
      topicUpdates.clear();
    }
  }
);
  notificationManager.topicsListUpdated(topicUpdates);
  Thread.sleep(500);
  Assert.assertTrue(topicUpdates.isEmpty());
}
