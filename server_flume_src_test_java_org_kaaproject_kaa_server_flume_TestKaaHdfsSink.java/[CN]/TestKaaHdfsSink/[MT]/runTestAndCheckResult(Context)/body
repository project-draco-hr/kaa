{
  Configurables.configure(source,context);
  Configurables.configure(channel,context);
  ChannelSelector cs=new KaaLoadChannelSelector();
  cs.setChannels(Lists.newArrayList(channel));
  Configurables.configure(cs,context);
  source.setChannelProcessor(new ChannelProcessor(cs));
  Configurables.configure(sink,context);
  sink.setChannel(channel);
  sinkRunner=new SinkRunner();
  SinkProcessor policy=new DefaultSinkProcessor();
  List<Sink> sinks=new ArrayList<Sink>();
  sinks.add(sink);
  policy.setSinks(sinks);
  sinkRunner.setSink(policy);
  sinkRunner.start();
  source.start();
  RecordHeader header=new RecordHeader();
  header.setApplicationToken(applicationToken);
  header.setEndpointKeyHash(new String(endpointKeyHash));
  header.setHeaderVersion(1);
  header.setTimestamp(System.currentTimeMillis());
  List<TestLogData> testLogs=generateAndSendRecords(header);
  LOG.info("Sent records count: " + testLogs.size());
  LOG.info("Waiting for sink...");
  int maxWaitTime=5000;
  int elapsed=0;
  while (sink.getEventDrainSuccessCount() < testLogs.size() && elapsed < maxWaitTime) {
    try {
      Thread.sleep(1000);
      elapsed+=1000;
    }
 catch (    InterruptedException e) {
    }
  }
  Assert.assertTrue(sink.getEventDrainSuccessCount() == testLogs.size());
  source.stop();
  sinkRunner.stop();
  readAndCheckResultsFromHdfs(header,testLogs);
}
