{
  Timing timing=new Timing();
  ControlNodeInfo controlNodeInfo=buildControlNodeInfo();
  ControlNodeInfo secondaryNodeInfo=buildSecondaryNodeInfo();
  OperationsNodeInfo endpointNodeInfo=buildOperationsNodeInfo();
  OperationsNode endpointNode=new OperationsNode(endpointNodeInfo,zkClient);
  ControlNodeListener mockListener=mock(ControlNodeListener.class);
  endpointNode.addListener(mockListener);
  endpointNode.start();
  ControlNode controlNode=new ControlNode(controlNodeInfo,zkClient);
  controlNode.start();
  ControlNode secondaryNode=new ControlNode(secondaryNodeInfo,zkClient);
  secondaryNode.start();
  timing.sleepABit();
  verify(mockListener).onControlNodeChange(controlNodeInfo);
  int random=new Random().nextInt();
  controlNodeInfo.setBootstrapServerCount(random);
  controlNode.updateNodeData(controlNodeInfo);
  int random2=new Random().nextInt();
  secondaryNodeInfo.setBootstrapServerCount(random2);
  secondaryNode.updateNodeData(secondaryNodeInfo);
  timing.sleepABit();
  verify(mockListener).onControlNodeChange(controlNodeInfo);
  assertEquals(new Integer(random),endpointNode.getControlServerInfo().getBootstrapServerCount());
  assertEquals(new Integer(random2),secondaryNode.getCurrentNodeInfo().getBootstrapServerCount());
  controlNode.close();
  timing.sleepABit();
  verify(mockListener).onControlNodeDown();
  verify(mockListener).onControlNodeChange(secondaryNodeInfo);
  assertTrue(endpointNode.removeListener(mockListener));
  assertFalse(endpointNode.removeListener(mockListener));
  secondaryNode.close();
  endpointNode.close();
}
