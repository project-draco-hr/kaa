{
  applicationLogActorMessageProcessor=new ApplicationLogActorMessageProcessor(logAppenderService,applicationService,APP_TOKEN);
  LogEventPackMessage logEventPackMessage=mock(LogEventPackMessage.class);
  when(logAppender.isSchemaVersionSupported(1)).thenReturn(Boolean.FALSE);
  when(logEventPackMessage.getLogSchema()).thenReturn(logSchema);
  when(logEventPackMessage.getLogEventPack()).thenReturn(new LogEventPack());
  when(logEventPackMessage.getOriginator()).thenReturn(ActorRef.noSender());
  when(logEventPackMessage.getRequestId()).thenReturn(REQUEST_ID);
  applicationLogActorMessageProcessor.processLogEventPack(Mockito.mock(ActorContext.class),logEventPackMessage);
  verify(logAppender,Mockito.never()).doAppend(Mockito.any(LogEventPack.class),Mockito.any(LogDeliveryCallback.class));
}
