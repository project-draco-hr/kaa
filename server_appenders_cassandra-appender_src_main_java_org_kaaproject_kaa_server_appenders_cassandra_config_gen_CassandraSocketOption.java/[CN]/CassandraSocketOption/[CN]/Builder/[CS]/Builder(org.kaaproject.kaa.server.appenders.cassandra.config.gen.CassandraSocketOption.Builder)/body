{
  super(other);
  if (isValidValue(fields()[0],other.sendBufferSize)) {
    this.sendBufferSize=data().deepCopy(fields()[0].schema(),other.sendBufferSize);
    fieldSetFlags()[0]=true;
  }
  if (isValidValue(fields()[1],other.receiveBufferSize)) {
    this.receiveBufferSize=data().deepCopy(fields()[1].schema(),other.receiveBufferSize);
    fieldSetFlags()[1]=true;
  }
  if (isValidValue(fields()[2],other.soLinger)) {
    this.soLinger=data().deepCopy(fields()[2].schema(),other.soLinger);
    fieldSetFlags()[2]=true;
  }
  if (isValidValue(fields()[3],other.connectionTimeout)) {
    this.connectionTimeout=data().deepCopy(fields()[3].schema(),other.connectionTimeout);
    fieldSetFlags()[3]=true;
  }
  if (isValidValue(fields()[4],other.readTimeout)) {
    this.readTimeout=data().deepCopy(fields()[4].schema(),other.readTimeout);
    fieldSetFlags()[4]=true;
  }
  if (isValidValue(fields()[5],other.reuseAddress)) {
    this.reuseAddress=data().deepCopy(fields()[5].schema(),other.reuseAddress);
    fieldSetFlags()[5]=true;
  }
  if (isValidValue(fields()[6],other.keepAlive)) {
    this.keepAlive=data().deepCopy(fields()[6].schema(),other.keepAlive);
    fieldSetFlags()[6]=true;
  }
  if (isValidValue(fields()[7],other.tcpNoDelay)) {
    this.tcpNoDelay=data().deepCopy(fields()[7].schema(),other.tcpNoDelay);
    fieldSetFlags()[7]=true;
  }
}
