{
  while (true) {
    Future<V> f=cache.get(arg);
    if (f == null) {
      Callable<V> eval=new Callable<V>(){
        public V call() throws InterruptedException {
          return c.compute(arg);
        }
      }
;
      FutureTask<V> ft=new FutureTask<V>(eval);
      f=cache.putIfAbsent(arg,ft);
      if (f == null) {
        f=ft;
        ft.run();
      }
    }
    try {
      return f.get();
    }
 catch (    CancellationException e) {
      LOG.error("Cancellation exception exception ",e);
      cache.remove(arg,f);
    }
catch (    ExecutionException e) {
      LOG.error("Cache execution exception ",e);
    }
  }
}
