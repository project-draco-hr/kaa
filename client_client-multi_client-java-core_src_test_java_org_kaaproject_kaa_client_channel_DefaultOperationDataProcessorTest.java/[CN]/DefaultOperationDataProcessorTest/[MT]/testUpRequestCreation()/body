{
  DefaultOperationDataProcessor operationsDataProcessor=new DefaultOperationDataProcessor();
  ProfileTransport profileTransport=Mockito.mock(ProfileTransport.class);
  EventTransport eventTransport=Mockito.mock(EventTransport.class);
  NotificationTransport notificationTransport=Mockito.mock(NotificationTransport.class);
  ConfigurationTransport configurationTransport=Mockito.mock(ConfigurationTransport.class);
  UserTransport userTransport=Mockito.mock(UserTransport.class);
  MetaDataTransport metaDataTransport=Mockito.mock(MetaDataTransport.class);
  LogTransport logTransport=Mockito.mock(LogTransport.class);
  operationsDataProcessor.setConfigurationTransport(configurationTransport);
  operationsDataProcessor.setEventTransport(eventTransport);
  operationsDataProcessor.setMetaDataTransport(metaDataTransport);
  operationsDataProcessor.setNotificationTransport(notificationTransport);
  operationsDataProcessor.setProfileTransport(profileTransport);
  operationsDataProcessor.setUserTransport(userTransport);
  operationsDataProcessor.setLogTransport(logTransport);
  Map<TransportType,ChannelDirection> transportTypes=new HashMap<TransportType,ChannelDirection>();
  transportTypes.put(TransportType.PROFILE,ChannelDirection.BIDIRECTIONAL);
  transportTypes.put(TransportType.CONFIGURATION,ChannelDirection.BIDIRECTIONAL);
  transportTypes.put(TransportType.NOTIFICATION,ChannelDirection.BIDIRECTIONAL);
  transportTypes.put(TransportType.USER,ChannelDirection.BIDIRECTIONAL);
  transportTypes.put(TransportType.EVENT,ChannelDirection.BIDIRECTIONAL);
  transportTypes.put(TransportType.LOGGING,ChannelDirection.BIDIRECTIONAL);
  assertNotNull(operationsDataProcessor.compileRequest(transportTypes));
  Mockito.verify(profileTransport,Mockito.times(1)).createProfileRequest();
  Mockito.verify(eventTransport,Mockito.times(1)).createEventRequest();
  Mockito.verify(notificationTransport,Mockito.times(1)).createNotificationRequest();
  Mockito.verify(configurationTransport,Mockito.times(1)).createConfigurationRequest();
  Mockito.verify(userTransport,Mockito.times(1)).createUserRequest();
  Mockito.verify(metaDataTransport,Mockito.times(1)).createMetaDataRequest();
  Mockito.verify(logTransport,Mockito.times(1)).createLogRequest();
}
