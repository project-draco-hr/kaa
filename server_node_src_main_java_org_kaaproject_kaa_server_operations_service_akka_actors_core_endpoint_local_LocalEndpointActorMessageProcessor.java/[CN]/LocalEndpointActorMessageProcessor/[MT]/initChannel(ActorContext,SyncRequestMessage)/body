{
  ChannelMetaData channel=state.getChannelById(requestMessage.getChannelUuid());
  if (channel == null) {
    channel=new ChannelMetaData(requestMessage);
    if (!channel.getType().isAsync() && channel.getType().isLongPoll()) {
      LOG.debug("[{}][{}] Received request using long poll channel.",endpointKey,actorKey);
      Set<ChannelMetaData> channels=state.getChannelsByType(TransportType.EVENT);
      for (      ChannelMetaData oldChannel : channels) {
        if (!oldChannel.getType().isAsync() && channel.getType().isLongPoll()) {
          LOG.debug("[{}][{}] Closing old long poll channel [{}]",endpointKey,actorKey,oldChannel.getId());
          sendReply(context,oldChannel.getRequestMessage(),oldChannel.getResponseHolder().getResponse());
          state.removeChannel(oldChannel);
        }
      }
    }
    long time=System.currentTimeMillis();
    channel.setLastActivityTime(time);
    if (channel.getType().isAsync() && channel.getKeepAlive() > 0) {
      scheduleKeepAliveCheck(context,channel);
    }
    state.addChannel(channel);
  }
  return channel;
}
