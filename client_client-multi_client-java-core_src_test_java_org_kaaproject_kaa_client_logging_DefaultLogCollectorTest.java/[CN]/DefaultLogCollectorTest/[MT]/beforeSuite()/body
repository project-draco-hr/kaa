{
  executorContext=Mockito.mock(ExecutorContext.class);
  executor=Executors.newSingleThreadExecutor();
  Mockito.when(executorContext.getApiExecutor()).thenReturn(new AbstractExecutorService(){
    @Override public void execute(    Runnable command){
      command.run();
    }
    @Override public List<Runnable> shutdownNow(){
      return null;
    }
    @Override public void shutdown(){
    }
    @Override public boolean isTerminated(){
      return false;
    }
    @Override public boolean isShutdown(){
      return false;
    }
    @Override public boolean awaitTermination(    long timeout,    TimeUnit unit) throws InterruptedException {
      return false;
    }
  }
);
  Mockito.when(executorContext.getCallbackExecutor()).thenReturn(executor);
}
