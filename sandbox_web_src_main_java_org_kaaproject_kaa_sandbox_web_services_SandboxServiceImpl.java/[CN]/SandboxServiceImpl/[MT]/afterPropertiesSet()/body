{
  try {
    logger.info("Initializing Sandbox Service...");
    logger.info("sandboxHome [{}]",sandboxHome);
    logger.info("guiChangeHostEnabled [{}]",guiChangeHostEnabled);
    JAXBContext jc=JAXBContext.newInstance("org.kaaproject.kaa.sandbox.demo.projects");
    Unmarshaller unmarshaller=jc.createUnmarshaller();
    String demoProkectsXmlFile=sandboxHome + "/" + DEMO_PROJECTS_FOLDER+ "/"+ DEMO_PROJECTS_XML_FILE;
    ProjectsConfig projectsConfig=(ProjectsConfig)unmarshaller.unmarshal(new File(demoProkectsXmlFile));
    for (    Project project : projectsConfig.getProjects()) {
      projectsMap.put(project.getId(),project);
      logger.info("Demo project: id [{}] name [{}]",project.getId(),project.getName());
    }
    if (sandboxEnv == null) {
      Properties sandboxEnvProperties=org.kaaproject.kaa.server.common.utils.FileUtils.readResourceProperties(SANDBOX_ENV_FILE);
      sandboxEnv=new String[sandboxEnvProperties.size()];
      int i=0;
      for (      Object key : sandboxEnvProperties.keySet()) {
        String keyValue=key + "=" + sandboxEnvProperties.getProperty(key.toString());
        sandboxEnv[i++]=keyValue;
        logger.info("Sandbox env: [{}]",keyValue);
      }
    }
    logger.info("Initialized Sandbox Service.");
  }
 catch (  JAXBException e) {
    logger.error("Unable to initialize Sandbox Service",e);
    throw e;
  }
}
