{
  logger.info("Loading 'Street lights driver application' data...");
  loginTenantAdmin(client);
  ApplicationDto streetLightApplication=new ApplicationDto();
  streetLightApplication.setName("Street light driver");
  streetLightApplication=client.editApplication(streetLightApplication);
  sdkKey.setApplicationId(streetLightApplication.getId());
  sdkKey.setProfileSchemaVersion(1);
  sdkKey.setNotificationSchemaVersion(1);
  sdkKey.setLogSchemaVersion(1);
  sdkKey.setConfigurationSchemaVersion(1);
  loginTenantDeveloper(client);
  logger.info("Creating profile schema...");
  ProfileSchemaDto profileSchemaDto=new ProfileSchemaDto();
  profileSchemaDto.setApplicationId(streetLightApplication.getId());
  profileSchemaDto.setName("StreetLightsDriverProfile schema");
  profileSchemaDto.setDescription("Street light driver profile schema");
  profileSchemaDto=client.createProfileSchema(profileSchemaDto,getResourcePath("profile.avsc"));
  logger.info("Profile schema version: {}",profileSchemaDto.getMajorVersion());
  sdkKey.setProfileSchemaVersion(profileSchemaDto.getMajorVersion());
  logger.info("Profile schema was created.");
  logger.info("Creating configuration schema...");
  ConfigurationSchemaDto configurationSchema=new ConfigurationSchemaDto();
  configurationSchema.setApplicationId(streetLightApplication.getId());
  configurationSchema.setName("StreetLightsConfiguration schema");
  configurationSchema.setDescription("Street Light configuration schema");
  configurationSchema=client.createConfigurationSchema(configurationSchema,getResourcePath("configuration.avsc"));
  logger.info("Configuration schema version: {}",configurationSchema.getMajorVersion());
  sdkKey.setConfigurationSchemaVersion(configurationSchema.getMajorVersion());
  logger.info("Configuration schema was created");
  for (int i=0; i < LIGHT_ZONE_COUNT; ++i) {
    EndpointGroupDto group=new EndpointGroupDto();
    group.setApplicationId(streetLightApplication.getId());
    group.setName("Zone " + Integer.toString(i));
    group.setWeight(i + 1);
    logger.info("Creating Endpoint group for Light Zone {}",i);
    group=client.editEndpointGroup(group);
    logger.info("Created Endpoint group for Light Zone {}",i);
    ProfileFilterDto filter=new ProfileFilterDto();
    filter.setApplicationId(streetLightApplication.getId());
    filter.setEndpointGroupId(group.getId());
    filter.setSchemaId(profileSchemaDto.getId());
    filter.setMajorVersion(profileSchemaDto.getMajorVersion());
    filter.setBody("lightZones.contains(new Integer(" + Integer.toString(i) + "))");
    filter.setStatus(UpdateStatus.INACTIVE);
    logger.info("Creating Profile filter for Light Zone {}",i);
    filter=client.editProfileFilter(filter);
    logger.info("Activating Profile filter for Light Zone {}",i);
    client.activateProfileFilter(filter.getId());
    logger.info("Created and activated Profile filter for Light Zone {}",i);
  }
  EndpointGroupDto baseEndpointGroup=null;
  List<EndpointGroupDto> endpointGroups=client.getEndpointGroups(streetLightApplication.getId());
  if (endpointGroups.size() == 1 && endpointGroups.get(0).getWeight() == 0) {
    baseEndpointGroup=endpointGroups.get(0);
  }
  if (baseEndpointGroup == null) {
    throw new RuntimeException("Can't get default endpoint group for street lights driver application!");
  }
  ConfigurationDto baseConfiguration=new ConfigurationDto();
  baseConfiguration.setApplicationId(streetLightApplication.getId());
  baseConfiguration.setEndpointGroupId(baseEndpointGroup.getId());
  baseConfiguration.setSchemaId(configurationSchema.getId());
  baseConfiguration.setMajorVersion(configurationSchema.getMajorVersion());
  baseConfiguration.setMinorVersion(configurationSchema.getMinorVersion());
  baseConfiguration.setDescription("Base street light driver configuration");
  String body=FileUtils.readResource(getResourcePath("config_data.json"));
  logger.info("Configuration body: [{}]",body);
  baseConfiguration.setBody(body);
  baseConfiguration.setStatus(UpdateStatus.INACTIVE);
  logger.info("Editing the configuration...");
  baseConfiguration=client.editConfiguration(baseConfiguration);
  logger.info("Configuration was successfully edited");
  logger.info("Activating the configuration");
  client.activateConfiguration(baseConfiguration.getId());
  logger.info("Configuration was activated");
  logger.info("Finished loading 'Street light driver application' data...");
}
