{
  if (clientProfile == null && clientProfileRequired) {
    LOG.error("Can't  generate records container event. Client profile is not set!");
    throw new RuntimeException("Client profile is not set!");
  }
  if (serverProfile == null && serverProfileRequired) {
    LOG.error("Can't  generate records container event. Server profile is not set!");
    throw new RuntimeException("Server profile is not set!");
  }
  Event event=null;
  RecordData logData=new RecordData();
  logData.setSchemaVersion(schema.getVersion());
  logData.setApplicationToken(appToken);
  logData.setRecordHeader(header);
  if (clientProfileRequired) {
    if (clientProfile != null) {
      logData.setClientProfileBody(clientProfile.getBody());
    }
    if (clientProfile != null) {
      logData.setClientSchemaId(clientProfile.getSchemaId());
    }
  }
  if (serverProfileRequired) {
    if (serverProfile != null) {
      logData.setServerProfileBody(serverProfile.getBody());
    }
    if (serverProfile != null) {
      logData.setServerSchemaId(serverProfile.getSchemaId());
    }
  }
  List<ByteBuffer> bytes=new ArrayList<>(logEvents.size());
  for (  LogEvent logEvent : logEvents) {
    bytes.add(ByteBuffer.wrap(logEvent.getLogData()));
  }
  logData.setEventRecords(bytes);
  EncoderFactory factory=EncoderFactory.get();
  GenericDatumWriter<RecordData> writer=new GenericDatumWriter<>(logData.getSchema());
  LOG.debug("Convert load data [{}] to bytes.",logData);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  factory.binaryEncoder(baos,null);
  BinaryEncoder encoder=factory.binaryEncoder(baos,null);
  try {
    writer.write(logData,encoder);
    encoder.flush();
    event=EventBuilder.withBody(baos.toByteArray());
  }
 catch (  IOException e) {
    LOG.warn("Can't convert avro object {} to binary.",logData);
  }
  LOG.trace("Build flume event with array body [{}]",baos);
  return event;
}
