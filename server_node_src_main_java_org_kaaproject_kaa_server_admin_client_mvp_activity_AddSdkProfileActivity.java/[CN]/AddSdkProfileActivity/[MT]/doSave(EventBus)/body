{
  onSave();
  final List<AefMapInfoDto> aefMaps=detailsView.getSelectedAefMaps().getValues();
  final SdkProfileDto sdkProfileDto=entity;
  KaaAdmin.getDataSource().validateECFListInSdkProfile(aefMaps,new AsyncCallback<Void>(){
    @Override public void onFailure(    Throwable caught){
      Utils.handleException(caught,detailsView);
    }
    @Override public void onSuccess(    Void aVoid){
      List<String> aefMapIds=new ArrayList<>();
      if (aefMaps != null) {
        for (        AefMapInfoDto aefMap : aefMaps) {
          aefMapIds.add(aefMap.getAefMapId());
        }
      }
      sdkProfileDto.setAefMapIds(aefMapIds);
      if (detailsView.getDefaultUserVerifier().getValue() != null) {
        sdkProfileDto.setDefaultVerifierToken(detailsView.getDefaultUserVerifier().getValue().getVerifierToken());
      }
      entity=sdkProfileDto;
      if (!sdkProfileDto.getAefMapIds().isEmpty() && sdkProfileDto.getDefaultVerifierToken() == null) {
        detailsView.setErrorMessage(Utils.constants.specifyVerifier());
      }
 else {
        KaaAdmin.getDataSource().addSdkProfile(sdkProfileDto,new BusyAsyncCallback<SdkProfileDto>(){
          @Override public void onSuccessImpl(          SdkProfileDto result){
            detailsView.reset();
            AddSdkProfileActivity.this.goTo(new SdkProfilesPlace(applicationId));
          }
          @Override public void onFailureImpl(          Throwable caught){
            Utils.handleException(caught,detailsView);
          }
        }
);
      }
    }
  }
);
}
