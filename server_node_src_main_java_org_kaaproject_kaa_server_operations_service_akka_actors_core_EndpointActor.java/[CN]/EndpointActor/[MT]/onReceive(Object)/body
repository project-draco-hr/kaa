{
  if (LOG.isTraceEnabled()) {
    LOG.trace("[{}] Received: {}",actorKey,message);
  }
 else {
    LOG.debug("[{}] Received: {}",actorKey,message.getClass().getName());
  }
  if (message instanceof SyncRequestMessage) {
    processEndpointSync((SyncRequestMessage)message);
  }
 else   if (message instanceof EndpointEventReceiveMessage) {
    processEndpointEventReceiveMessage((EndpointEventReceiveMessage)message);
  }
 else   if (message instanceof LogDeliveryMessage) {
    processLogDeliveryMessage((LogDeliveryMessage)message);
  }
 else   if (message instanceof EndpointStateUpdateMessage) {
    processStateUpdateMessage((EndpointStateUpdateMessage)message);
  }
 else   if (message instanceof UserVerificationResponseMessage) {
    processUserVerificationMessage((UserVerificationResponseMessage)message);
  }
 else   if (message instanceof SessionDisconnectMessage) {
    processDisconnectMessage((ChannelAware)message);
  }
 else   if (message instanceof SessionPingMessage) {
    processPingMessage((ChannelAware)message);
  }
 else   if (message instanceof ServerProfileUpdateMessage) {
    processServerProfileUpdate((ServerProfileUpdateMessage)message);
  }
 else   if (message instanceof ThriftNotificationMessage) {
    processThriftNotification((ThriftNotificationMessage)message);
  }
 else   if (message instanceof NotificationMessage) {
    processNotification((NotificationMessage)message);
  }
 else   if (message instanceof RequestTimeoutMessage) {
    processRequestTimeoutMessage((RequestTimeoutMessage)message);
  }
 else   if (message instanceof ActorTimeoutMessage) {
    processActorTimeoutMessage((ActorTimeoutMessage)message);
  }
 else   if (message instanceof ChannelTimeoutMessage) {
    processChannelTimeoutMessage((ChannelTimeoutMessage)message);
  }
 else   if (message instanceof EndpointUserActionMessage) {
    processEndpointUserActionMessage((EndpointUserActionMessage)message);
  }
 else   if (message instanceof EndpointStopMessage) {
    LOG.debug("[{}] Received stop request from application actor",actorKey);
    context().stop(self());
  }
 else {
    LOG.warn("[{}] Received unknown message {}",actorKey,message);
  }
}
