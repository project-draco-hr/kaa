{
  LOG.debug("Updating endpoint profile with id {}",profile.getId());
  ByteBuffer epKeyHash=profile.getEndpointKeyHash();
  byte[] keyHash=getBytes(epKeyHash);
  CassandraEndpointProfile storedProfile=findByKeyHash(keyHash);
  if (storedProfile != null) {
    List<Statement> statementList=new ArrayList<>();
    BoundStatement bs=prepareStatement(UPDATE_PROFILE,profile);
    if (wasApplied(execute(bs))) {
      Set<String> oldEndpointGroupIds=getEndpointProfilesGroupIdSet(storedProfile);
      Set<String> newEndpointGroupIds=getEndpointProfilesGroupIdSet(profile);
      Set<String> removeEndpointGroupIds=Sets.filter(oldEndpointGroupIds,Predicates.not(Predicates.in(newEndpointGroupIds)));
      Set<String> addEndpointGroupIds=Sets.filter(newEndpointGroupIds,Predicates.not(Predicates.in(oldEndpointGroupIds)));
      if (addEndpointGroupIds != null) {
        for (        String id : addEndpointGroupIds) {
          statementList.add(cassandraEPByEndpointGroupIdDao.getSaveQuery(new CassandraEPByEndpointGroupId(id,epKeyHash)));
        }
      }
      if (removeEndpointGroupIds != null) {
        for (        String id : removeEndpointGroupIds) {
          statementList.add(delete().from(EP_BY_ENDPOINT_GROUP_ID_COLUMN_FAMILY_NAME).where(eq(EP_BY_ENDPOINT_GROUP_ID_ENDPOINT_GROUP_ID_PROPERTY,id)).and(eq(EP_BY_ENDPOINT_GROUP_ID_ENDPOINT_KEY_HASH_PROPERTY,epKeyHash)));
        }
      }
      executeBatch(statementList.toArray(new Statement[statementList.size()]));
    }
 else {
      LOG.error("[{}] Can't update endpoint profile with version {}. Endpoint profile already changed!",profile.getId(),profile.getVersion());
      throw new KaaOptimisticLockingFailureException("Can't update endpoint profile with version . Endpoint profile already changed!");
    }
    LOG.debug("[{}] Endpoint profile updated",profile.getId());
  }
 else {
    LOG.error("[{}] Stored profile is null. Can't update endpoint profile.",profile.getId());
    throw new DatabaseProcessingException("Stored profile is null. Can't update endpoint profile.");
  }
  return profile;
}
