{
  gl2.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT);
  gl2.glPushMatrix();
  gl2.glRotatef(view_rotx,1.0f,0.0f,0.0f);
  gl2.glRotatef(view_roty,0.0f,1.0f,0.0f);
  gl2.glRotatef(view_rotz,0.0f,0.0f,1.0f);
  gl2.glScalef(view_zoom,view_zoom,view_zoom);
  doLighting(gl2);
  gl2.glMaterialfv(GL.GL_FRONT,GLLightingFunc.GL_DIFFUSE,PLATFORM_DIFFUSE,0);
  gl2.glPushMatrix();
  gl2.glTranslatef(0,0,-0.05f);
  gl2.glScalef(4f,4f,0.1f);
  glut.glutSolidCube(1f);
  gl2.glPopMatrix();
  if (!labyrinth.isEmpty()) {
    int labWidth=labyrinth.getWidth();
    int labHeight=labyrinth.getHeight();
    side=Math.min(size / (float)labWidth,size / (float)labHeight);
    float hSize=side * labWidth;
    float vSize=side * labHeight;
    offsetX=(size - hSize) / 2;
    offsetY=(size - vSize) / 2;
    for (int y=0; y < labHeight; y++) {
      for (int x=0; x < labWidth; x++) {
        Cell cell=labyrinth.getCell(x,y);
        if (cell.isDeadEnd()) {
          gl2.glMaterialfv(GL.GL_FRONT,GLLightingFunc.GL_DIFFUSE,DEAD_END_DIFFUSE,0);
          gl2.glPushMatrix();
          gl2.glTranslatef(transX(offsetX + x * side + side / 2),transY(offsetY + y * side + side / 2),side * 0.025f);
          gl2.glScalef(side,side,side * 0.05f);
          glut.glutSolidCube(1f);
          gl2.glPopMatrix();
        }
        drawBorder(gl2,offsetX,offsetY,side,x,y,cell,Direction.NORTH);
        drawBorder(gl2,offsetX,offsetY,side,x,y,cell,Direction.WEST);
        if (y == labHeight - 1) {
          drawBorder(gl2,offsetX,offsetY,side,x,y,cell,Direction.SOUTH);
        }
        if (x == labWidth - 1) {
          drawBorder(gl2,offsetX,offsetY,side,x,y,cell,Direction.EAST);
        }
      }
    }
    for (    String key : robotPositions.keySet()) {
      RobotPosition position=robotPositions.get(key);
      Cell cell=position.getCell();
      float[] diffuse=new Color(key.hashCode()).getRGBComponents(null);
      drawRobot(gl2,offsetX,offsetY,side,cell.getX(),cell.getY(),diffuse);
      gl2.glPushMatrix();
      String text=position.getName();
      renderer.begin3DRendering();
      gl2.glDisable(GL2.GL_DEPTH_TEST);
      gl2.glEnable(GL2.GL_CULL_FACE);
      Rectangle2D bounds=renderer.getBounds(text);
      float textWidth=(float)bounds.getWidth();
      float textHeight=(float)bounds.getHeight();
      float textScaleFactor=side / (textWidth);
      gl2.glTranslatef(transX(offsetX + cell.getX() * side + side / 2),transY(offsetY + cell.getY() * side + side / 2),side / 2);
      gl2.glRotatef(-view_rotz,0.0f,0.0f,1.0f);
      renderer.draw3D(text,-textWidth * textScaleFactor / 2f,+textHeight * textScaleFactor / 2f,0,textScaleFactor);
      renderer.end3DRendering();
      gl2.glPopMatrix();
      gl2.glEnable(GL2.GL_DEPTH_TEST);
    }
  }
  gl2.glPopMatrix();
}
