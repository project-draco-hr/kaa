{
  LogEventPack eventPack=new LogEventPack();
  ListeningExecutorService rpcES=MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1));
  Mockito.when(flumeEventBuilder.generateEvents(Mockito.any(LogEventPack.class),Mockito.any(RecordHeader.class),Mockito.anyString())).thenReturn(Collections.singletonList(Mockito.mock(Event.class)));
  Mockito.when(flumeClientManager.sendEventsToFlumeAsync(Mockito.anyList())).thenReturn(rpcES.submit(new Callable<AppendBatchAsyncResultPojo>(){
    public AppendBatchAsyncResultPojo call() throws Exception {
      return new AppendBatchAsyncResultPojo(true,Collections.singletonList(Mockito.mock(Event.class)));
    }
  }
));
  TestLogDeliveryCallback callback=new TestLogDeliveryCallback();
  appender.doAppend(eventPack,callback);
  Thread.sleep(3000);
  Assert.assertTrue(callback.success);
}
