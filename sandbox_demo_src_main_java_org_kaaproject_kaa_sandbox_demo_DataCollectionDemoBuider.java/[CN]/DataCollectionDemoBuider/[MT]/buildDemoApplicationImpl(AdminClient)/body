{
  logger.info("Loading 'Data Collection Demo Application' data...");
  loginTenantAdmin(client);
  ApplicationDto dataCollectionApplication=new ApplicationDto();
  dataCollectionApplication.setName("Data collection demo");
  dataCollectionApplication=client.editApplication(dataCollectionApplication);
  sdkPropertiesDto.setApplicationId(dataCollectionApplication.getId());
  sdkPropertiesDto.setApplicationToken(dataCollectionApplication.getApplicationToken());
  sdkPropertiesDto.setProfileSchemaVersion(1);
  sdkPropertiesDto.setConfigurationSchemaVersion(1);
  sdkPropertiesDto.setNotificationSchemaVersion(1);
  loginTenantDeveloper(client);
  LogSchemaDto logSchemaDto=new LogSchemaDto();
  logSchemaDto.setApplicationId(dataCollectionApplication.getId());
  logSchemaDto.setName("Log schema");
  logSchemaDto.setDescription("Log schema describing incoming logs");
  logSchemaDto=client.createLogSchema(logSchemaDto,getResourcePath("logSchema.json"));
  sdkPropertiesDto.setLogSchemaVersion(logSchemaDto.getMajorVersion());
  LogAppenderDto dataCollectionLogAppender=new LogAppenderDto();
  dataCollectionLogAppender.setName("Data collection log appender");
  dataCollectionLogAppender.setDescription("Log appender used to deliver log records from data collection application to local mongo db instance");
  dataCollectionLogAppender.setApplicationId(dataCollectionApplication.getId());
  dataCollectionLogAppender.setApplicationToken(dataCollectionApplication.getApplicationToken());
  dataCollectionLogAppender.setTenantId(dataCollectionApplication.getTenantId());
  dataCollectionLogAppender.setMinLogSchemaVersion(1);
  dataCollectionLogAppender.setMaxLogSchemaVersion(Integer.MAX_VALUE);
  dataCollectionLogAppender.setConfirmDelivery(true);
  dataCollectionLogAppender.setHeaderStructure(Arrays.asList(LogHeaderStructureDto.KEYHASH,LogHeaderStructureDto.TIMESTAMP,LogHeaderStructureDto.TOKEN,LogHeaderStructureDto.VERSION));
  dataCollectionLogAppender.setPluginTypeName("MongoDB");
  dataCollectionLogAppender.setPluginClassName("org.kaaproject.kaa.server.appenders.mongo.appender.MongoDbLogAppender");
  dataCollectionLogAppender.setJsonConfiguration(FileUtils.readResource(getResourcePath("mongo_appender.json")));
  dataCollectionLogAppender=client.editLogAppenderDto(dataCollectionLogAppender);
  logger.info("Finished loading 'Data Collection Demo Application' data.");
}
