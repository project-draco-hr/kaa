{
  if (place != null) {
    Class<? extends Place> clazz=place.getClass();
    if (clazz == UserProfilePlace.class) {
      return new UserProfileActivity((UserProfilePlace)place,clientFactory);
    }
 else     if (clazz == GeneralPropertiesPlace.class) {
      return new GeneralPropertiesActivity((GeneralPropertiesPlace)place,clientFactory);
    }
 else     if (clazz == MailPropertiesPlace.class) {
      return new MailPropertiesActivity((MailPropertiesPlace)place,clientFactory);
    }
 else     if (clazz == TenantsPlace.class) {
      return new TenantsActivity((TenantsPlace)place,clientFactory);
    }
 else     if (clazz == TenantPlace.class) {
      return new TenantActivity((TenantPlace)place,clientFactory);
    }
 else     if (clazz == ApplicationsPlace.class) {
      return new ApplicationsActivity((ApplicationsPlace)place,clientFactory);
    }
 else     if (clazz == ApplicationPlace.class) {
      return new ApplicationActivity((ApplicationPlace)place,clientFactory);
    }
 else     if (clazz == GenerateSdkPlace.class) {
      return new GenerateSdkActivity((GenerateSdkPlace)place,clientFactory);
    }
 else     if (clazz == UsersPlace.class) {
      return new UsersActivity((UsersPlace)place,clientFactory);
    }
 else     if (clazz == UserPlace.class) {
      return new UserActivity((UserPlace)place,clientFactory);
    }
 else     if (clazz == EcfsPlace.class) {
      return new EcfsActivity((EcfsPlace)place,clientFactory);
    }
 else     if (clazz == EcfPlace.class) {
      return new EcfActivity((EcfPlace)place,clientFactory);
    }
 else     if (clazz == EcfSchemaPlace.class) {
      return new EcfSchemaActivity((EcfSchemaPlace)place,clientFactory);
    }
 else     if (clazz == ProfileSchemasPlace.class) {
      return new ProfileSchemasActivity((ProfileSchemasPlace)place,clientFactory);
    }
 else     if (clazz == ProfileSchemaPlace.class) {
      return new ProfileSchemaActivity((ProfileSchemaPlace)place,clientFactory);
    }
 else     if (clazz == ConfigurationSchemasPlace.class) {
      return new ConfigurationSchemasActivity((ConfigurationSchemasPlace)place,clientFactory);
    }
 else     if (clazz == ConfigurationSchemaPlace.class) {
      return new ConfigurationSchemaActivity((ConfigurationSchemaPlace)place,clientFactory);
    }
 else     if (clazz == NotificationSchemasPlace.class) {
      return new NotificationSchemasActivity((NotificationSchemasPlace)place,clientFactory);
    }
 else     if (clazz == NotificationSchemaPlace.class) {
      return new NotificationSchemaActivity((NotificationSchemaPlace)place,clientFactory);
    }
 else     if (clazz == LogSchemasPlace.class) {
      return new LogSchemasActivity((LogSchemasPlace)place,clientFactory);
    }
 else     if (clazz == LogSchemaPlace.class) {
      return new LogSchemaActivity((LogSchemaPlace)place,clientFactory);
    }
 else     if (clazz == EndpointGroupsPlace.class) {
      return new EndpointGroupsActivity((EndpointGroupsPlace)place,clientFactory);
    }
 else     if (clazz == EndpointGroupPlace.class) {
      return new EndpointGroupActivity((EndpointGroupPlace)place,clientFactory);
    }
 else     if (clazz == ProfileFilterPlace.class) {
      return new ProfileFilterActivity((ProfileFilterPlace)place,clientFactory);
    }
 else     if (clazz == ConfigurationPlace.class) {
      return new ConfigurationActivity((ConfigurationPlace)place,clientFactory);
    }
 else     if (clazz == TopicsPlace.class) {
      return new TopicsActivity((TopicsPlace)place,clientFactory);
    }
 else     if (clazz == TopicPlace.class) {
      return new TopicActivity((TopicPlace)place,clientFactory);
    }
 else     if (clazz == SendNotificationPlace.class) {
      return new SendNotificationActivity((SendNotificationPlace)place,clientFactory);
    }
 else     if (clazz == AefMapsPlace.class) {
      return new AefMapsActivity((AefMapsPlace)place,clientFactory);
    }
 else     if (clazz == AefMapPlace.class) {
      return new AefMapActivity((AefMapPlace)place,clientFactory);
    }
 else     if (clazz == LogAppendersPlace.class) {
      return new LogAppendersActivity((LogAppendersPlace)place,clientFactory);
    }
 else     if (clazz == LogAppenderPlace.class) {
      return new LogAppenderActivity((LogAppenderPlace)place,clientFactory);
    }
 else     if (clazz == UserVerifiersPlace.class) {
      return new UserVerifiersActivity((UserVerifiersPlace)place,clientFactory);
    }
 else     if (clazz == UserVerifierPlace.class) {
      return new UserVerifierActivity((UserVerifierPlace)place,clientFactory);
    }
  }
  return null;
}
