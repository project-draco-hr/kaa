{
  validateCTLSchemaObject(unSavedSchema);
  if (unSavedSchema.getDefaultRecord() == null) {
    unSavedSchema=generateDefaultRecord(unSavedSchema);
  }
 else {
    validateDefaultRecord(unSavedSchema);
  }
  if (isBlank(unSavedSchema.getId())) {
    CTLSchemaMetaInfoDto metaInfo=unSavedSchema.getMetaInfo();
    CTLSchemaDto dto;
synchronized (this) {
      List<CTLSchemaMetaInfo> existingFqns=ctlSchemaMetaInfoDao.findExistingFqns(metaInfo.getFqn(),metaInfo.getTenantId(),metaInfo.getApplicationId());
      if (existingFqns != null && !existingFqns.isEmpty()) {
        throw new DatabaseProcessingException("Can't save common type due to an FQN conflict.");
      }
      metaInfo.setId(null);
      CTLSchemaMetaInfo uniqueMetaInfo=ctlSchemaMetaInfoDao.save(new CTLSchemaMetaInfo(metaInfo));
      ctlSchemaMetaInfoDao.lockRequest(lockOptions).setScope(true).lock(uniqueMetaInfo);
      CTLSchema ctlSchema=new CTLSchema(unSavedSchema);
      ctlSchema.setMetaInfo(uniqueMetaInfo);
      ctlSchema.setCreatedTime(System.currentTimeMillis());
      ctlSchemaMetaInfoDao.refresh(uniqueMetaInfo);
      try {
        dto=getDto(ctlSchemaDao.save(ctlSchema,true));
      }
 catch (      DataIntegrityViolationException ex) {
        throw new DatabaseProcessingException("Can't save common type: such FQN and version already exist.");
      }
catch (      Exception ex) {
        throw new DatabaseProcessingException(ex);
      }
    }
    return dto;
  }
 else {
    return updateCTLSchema(unSavedSchema);
  }
}
