{
  files.add(this.shallowExport(parent));
  ObjectNode object=new ObjectMapper().readValue(parent.getBody(),ObjectNode.class);
  ArrayNode dependencies=(ArrayNode)object.get(DEPENDENCIES);
  if (dependencies != null) {
    for (    JsonNode node : dependencies) {
      ObjectNode dependency=(ObjectNode)node;
      String fqn=dependency.get(FQN).getTextValue();
      Integer version=dependency.get(VERSION).getIntValue();
      CTLSchemaDto child=this.findAnyCTLSchemaByFqnAndVerAndTenantIdAndApplicationId(fqn,version,parent.getMetaInfo().getTenantId(),parent.getMetaInfo().getApplicationId());
      Validate.notNull(child,MessageFormat.format("The dependency [{0}] was not found!",fqn));
      this.recursiveShallowExport(files,child);
    }
  }
  return files;
}
