{
  DecoderResult result=httpObject.getDecoderResult();
  if (!result.isSuccess()) {
    throw new BadRequestException(result.cause());
  }
  Attribute<UUID> sessionUuidAttr=ctx.channel().attr(NettyHttpServer.UUID_KEY);
  Attribute<Track> sessionTrackAttr=ctx.channel().attr(NettyHttpServer.TRACK_KEY);
  if (httpObject instanceof HttpRequest) {
    HttpRequest httpRequest=(HttpRequest)httpObject;
    LOG.trace("Session: {} got valid HTTP request:\n{}",sessionUuidAttr.get().toString(),httpRequest.headers().toString());
    if (httpRequest.getMethod().equals(HttpMethod.POST)) {
      String uri=httpRequest.getUri();
      CommandProcessor cp=CommandFactory.getCommandProcessor(uri);
      if (sessionTrackAttr.get() != null) {
        int id=sessionTrackAttr.get().newRequest(cp.getName());
        cp.setCommandId(id);
      }
      cp.setSessionUuid(sessionUuidAttr.get());
      cp.setHttpRequest(httpRequest);
      cp.setServer(server);
      cp.parse();
      ctx.fireChannelRead(cp);
    }
 else {
      LOG.error("Got invalid HTTP method: expecting only POST");
      throw new BadRequestException("Incorrect method " + httpRequest.getMethod().toString() + ", expected POST");
    }
  }
}
