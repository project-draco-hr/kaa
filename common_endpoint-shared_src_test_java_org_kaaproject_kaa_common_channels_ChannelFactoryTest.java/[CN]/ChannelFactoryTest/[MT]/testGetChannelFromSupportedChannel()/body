{
  String hostName="localhost";
  int port=100;
  HttpParameters httpCommunicationParameters=new HttpParameters();
  httpCommunicationParameters.setHostName(hostName);
  httpCommunicationParameters.setPort(port);
  KaaTcpParameters tcpCommunicationParameters=new KaaTcpParameters();
  tcpCommunicationParameters.setHostName(hostName);
  tcpCommunicationParameters.setPort(port);
  SupportedChannel httpSupportedChannel=new SupportedChannel(ChannelType.HTTP,httpCommunicationParameters);
  SupportedChannel httpLpSupportedChannel=new SupportedChannel(ChannelType.HTTP_LP,httpCommunicationParameters);
  SupportedChannel bsSupportedChannel=new SupportedChannel(ChannelType.BOOTSTRAP,null);
  SupportedChannel tcpSupportedChannel=new SupportedChannel(ChannelType.KAATCP,tcpCommunicationParameters);
  try {
    Channel httpChannel=ChannelFactory.getChannelFromSupportedChannel(httpSupportedChannel);
    Channel httpLpChannel=ChannelFactory.getChannelFromSupportedChannel(httpLpSupportedChannel);
    Channel bsChannel=ChannelFactory.getChannelFromSupportedChannel(bsSupportedChannel);
    Channel tcpChannel=ChannelFactory.getChannelFromSupportedChannel(tcpSupportedChannel);
    assertNotNull(httpChannel);
    assertNotNull(httpLpChannel);
    assertNotNull(bsChannel);
    assertNotNull(tcpChannel);
    assertEquals(ChannelType.HTTP,httpChannel.getChannelType());
    assertEquals(ChannelType.HTTP_LP,httpLpChannel.getChannelType());
    assertEquals(ChannelType.BOOTSTRAP,bsChannel.getChannelType());
    assertEquals(ChannelType.KAATCP,tcpChannel.getChannelType());
  }
 catch (  ParsingException e) {
    fail(e.toString());
  }
}
