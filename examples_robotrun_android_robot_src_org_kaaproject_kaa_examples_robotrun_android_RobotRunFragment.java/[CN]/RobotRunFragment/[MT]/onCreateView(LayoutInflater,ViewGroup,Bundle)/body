{
  View view=inflater.inflate(R.layout.robotrun_fragment,container,false);
  xInput=(EditText)view.findViewById(R.id.x_input);
  xInput.setFilters(new InputFilterMinMax[]{new InputFilterMinMax(0,12)});
  yInput=(EditText)view.findViewById(R.id.y_input);
  yInput.setFilters(new InputFilterMinMax[]{new InputFilterMinMax(0,12)});
  directionInput=(Spinner)view.findViewById(R.id.direction_input);
  CharSequence[] directionEntries=new CharSequence[Direction.values().length];
  for (int i=0; i < Direction.values().length; i++) {
    directionEntries[i]=Direction.values()[i].name();
  }
  ArrayAdapter<CharSequence> adapter=new ArrayAdapter<CharSequence>(getActivity(),android.R.layout.simple_spinner_item,directionEntries);
  adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  directionInput.setAdapter(adapter);
  startButton=(Button)view.findViewById(R.id.start_button);
  startEmulatorButton=(Button)view.findViewById(R.id.start_emulator_button);
  stopButton=(Button)view.findViewById(R.id.stop_button);
  statusView=(View)view.findViewById(R.id.status);
  statusText=(TextView)view.findViewById(R.id.status_text);
  connectedToText=(TextView)view.findViewById(R.id.connected_to_text);
  startButton.setEnabled(false);
  startEmulatorButton.setEnabled(false);
  stopButton.setEnabled(false);
  xInput.addTextChangedListener(this);
  yInput.addTextChangedListener(this);
  xInput.setText("0");
  yInput.setText("0");
  startButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      start();
    }
  }
);
  startEmulatorButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startEmulator();
    }
  }
);
  stopButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      stop();
    }
  }
);
  return view;
}
