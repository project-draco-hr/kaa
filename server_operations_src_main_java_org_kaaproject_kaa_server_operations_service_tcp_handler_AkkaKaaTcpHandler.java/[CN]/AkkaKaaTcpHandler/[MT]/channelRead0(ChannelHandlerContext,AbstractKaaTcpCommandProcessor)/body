{
  MqttFrame frame=msg.getRequest();
  LOG.trace("[{}] Processing {}",uuid,frame);
  if (frame.getMessageType() == MessageType.CONNECT) {
    if (session == null) {
      akkaService.process(new NettyTcpConnectMessage(uuid,ctx,(Connect)frame,ChannelType.TCP,this,connectResponseConverter,connectErrorConverter,null));
    }
 else {
      LOG.warn("[{}] Ignoring duplicate {} message ",uuid,MessageType.CONNECT);
    }
  }
 else {
    if (session != null) {
switch (frame.getMessageType()) {
case KAASYNC:
        akkaService.process(new NettyTcpSyncMessage((KaaSync)frame,session,syncResponseConverter,syncErrorConverter,null));
      break;
case PINGREQ:
    akkaService.process(new NettyTcpPingMessage(session));
  break;
case DISCONNECT:
akkaService.process(new NettyTcpDisconnectMessage(session));
break;
default :
break;
}
}
 else {
LOG.warn("[{}] Ignoring {} message due to incomplete CONNECT sequence",uuid,frame.getMessageType());
}
}
}
