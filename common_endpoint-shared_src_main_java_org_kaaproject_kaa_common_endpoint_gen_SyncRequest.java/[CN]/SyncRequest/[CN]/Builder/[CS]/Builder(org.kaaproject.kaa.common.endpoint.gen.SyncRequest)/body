{
  super(org.kaaproject.kaa.common.endpoint.gen.SyncRequest.SCHEMA$);
  if (isValidValue(fields()[0],other.requestId)) {
    this.requestId=data().deepCopy(fields()[0].schema(),other.requestId);
    fieldSetFlags()[0]=true;
  }
  if (isValidValue(fields()[1],other.syncRequestMetaData)) {
    this.syncRequestMetaData=data().deepCopy(fields()[1].schema(),other.syncRequestMetaData);
    fieldSetFlags()[1]=true;
  }
  if (isValidValue(fields()[2],other.bootstrapSyncRequest)) {
    this.bootstrapSyncRequest=data().deepCopy(fields()[2].schema(),other.bootstrapSyncRequest);
    fieldSetFlags()[2]=true;
  }
  if (isValidValue(fields()[3],other.profileSyncRequest)) {
    this.profileSyncRequest=data().deepCopy(fields()[3].schema(),other.profileSyncRequest);
    fieldSetFlags()[3]=true;
  }
  if (isValidValue(fields()[4],other.configurationSyncRequest)) {
    this.configurationSyncRequest=data().deepCopy(fields()[4].schema(),other.configurationSyncRequest);
    fieldSetFlags()[4]=true;
  }
  if (isValidValue(fields()[5],other.notificationSyncRequest)) {
    this.notificationSyncRequest=data().deepCopy(fields()[5].schema(),other.notificationSyncRequest);
    fieldSetFlags()[5]=true;
  }
  if (isValidValue(fields()[6],other.userSyncRequest)) {
    this.userSyncRequest=data().deepCopy(fields()[6].schema(),other.userSyncRequest);
    fieldSetFlags()[6]=true;
  }
  if (isValidValue(fields()[7],other.eventSyncRequest)) {
    this.eventSyncRequest=data().deepCopy(fields()[7].schema(),other.eventSyncRequest);
    fieldSetFlags()[7]=true;
  }
  if (isValidValue(fields()[8],other.logSyncRequest)) {
    this.logSyncRequest=data().deepCopy(fields()[8].schema(),other.logSyncRequest);
    fieldSetFlags()[8]=true;
  }
  if (isValidValue(fields()[9],other.extensionSyncRequests)) {
    this.extensionSyncRequests=data().deepCopy(fields()[9].schema(),other.extensionSyncRequests);
    fieldSetFlags()[9]=true;
  }
}
