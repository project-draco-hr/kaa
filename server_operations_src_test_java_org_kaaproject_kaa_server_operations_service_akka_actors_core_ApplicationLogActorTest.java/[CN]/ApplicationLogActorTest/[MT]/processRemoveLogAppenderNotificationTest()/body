{
  FlumeLogAppender flumeAppender=mock(FlumeLogAppender.class);
  when(flumeAppender.getName()).thenReturn("Flume");
  when(flumeAppender.getAppenderId()).thenReturn(APPENDER_ID);
  Notification notification=new Notification();
  notification.setAppenderId(APPENDER_ID);
  notification.setAppId(APPLICATION_ID);
  notification.setOp(Operation.REMOVE_LOG_APPENDER);
  List<LogAppender> appenders=mock(List.class);
  ReflectionTestUtils.setField(applicationLogActor,"logAppenders",appenders);
  when(appenders.size()).thenReturn(1);
  when(appenders.get(any(Integer.class))).thenReturn(flumeAppender);
  when(logAppenderService.getApplicationAppender(APPENDER_ID,APP_TOKEN)).thenReturn(flumeAppender);
  ReflectionTestUtils.invokeMethod(applicationLogActor,"processLogAppenderNotification",notification);
  verify(appenders,times(1)).remove(0);
  ReflectionTestUtils.setField(applicationLogActor,"logAppenders",logAppenders);
}
