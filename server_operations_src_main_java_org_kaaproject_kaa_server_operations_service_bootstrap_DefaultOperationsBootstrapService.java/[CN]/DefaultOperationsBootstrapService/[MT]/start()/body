{
  operationsService.setPublicKey(keyStoreService.getPublicKey());
  eventService.setConfig(getConfig());
  operationsThriftService.setEventService(eventService);
  for (  ServiceChannelConfig channelConf : getConfig().getChannelList()) {
    LOG.info("Channel {} initializing....",channelConf.getChannelType().toString());
switch (channelConf.getChannelType()) {
case HTTP:
case HTTP_LP:
      StatisticsService statistics=StatisticsFactory.getService(channelConf.getChannelType());
    ((NettyHttpServiceChannelConfig)channelConf).setSessionTrack(statistics);
  ((NettyHttpServiceChannelConfig)channelConf).setOperationServerConfig(getConfig());
ServiceChannel channel=new HttpService((NettyHttpServiceChannelConfig)channelConf);
channel.start();
serviceChannels.add(channel);
break;
default :
LOG.error("Channel {} unrecognized....",channelConf.getChannelType().toString());
break;
}
}
if (!serviceChannels.isEmpty()) {
if (getConfig().isZkEnabled()) {
startZK();
}
startThrift();
}
 else {
LOG.error("Operations start failed, No one Service Channels started...");
}
}
