{
  super.paintComponent(g);
  if (!labyrinth.isEmpty()) {
    Dimension size=getSize();
    Insets insets=getInsets();
    int w=size.width - insets.left - insets.right;
    int h=size.height - insets.top - insets.bottom;
    int labWidth=labyrinth.getWidth();
    int labHeight=labyrinth.getHeight();
    side=Math.min((w - BORDER_SIZE * 2) / labWidth,(h - BORDER_SIZE * 2) / labHeight);
    int hSize=side * labWidth;
    int vSize=side * labHeight;
    offsetX=(w - hSize) / 2;
    offsetY=(h - vSize) / 2;
  }
  Graphics2D g2d=(Graphics2D)g;
  RenderingHints rh=new RenderingHints(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  rh.put(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY);
  g2d.setRenderingHints(rh);
  g2d.setColor(Color.black);
  Dimension size=getSize();
  Insets insets=getInsets();
  int w=size.width - insets.left - insets.right;
  int h=size.height - insets.top - insets.bottom;
  g2d.fillRect(0,0,w,h);
  doDrawing(g2d);
}
