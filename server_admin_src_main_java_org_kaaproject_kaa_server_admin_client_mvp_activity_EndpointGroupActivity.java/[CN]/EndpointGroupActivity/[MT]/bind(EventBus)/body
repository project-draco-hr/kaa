{
  super.bind(eventBus);
  registrations.add(detailsView.getAddProfileFilterButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      ProfileFilterPlace profileFilterPlace=new ProfileFilterPlace(applicationId,"",entityId,true,false,0);
      profileFilterPlace.setPreviousPlace(place);
      goTo(profileFilterPlace);
    }
  }
));
  registrations.add(detailsView.getProfileFiltersGrid().addRowActionHandler(new RowActionEventHandler<StructureRecordKey>(){
    @Override public void onRowAction(    RowActionEvent<StructureRecordKey> event){
      StructureRecordKey id=event.getClickedId();
      if (event.getAction() == RowAction.CLICK) {
        ProfileFilterPlace profileFilterPlace=new ProfileFilterPlace(applicationId,id.getSchemaId(),id.getEndpointGroupId(),false,true,0);
        profileFilterPlace.setPreviousPlace(place);
        goTo(profileFilterPlace);
      }
 else       if (event.getAction() == RowAction.DELETE) {
        KaaAdmin.getDataSource().deleteProfileFilterRecord(id.getSchemaId(),id.getEndpointGroupId(),new AsyncCallback<Void>(){
          @Override public void onFailure(          Throwable caught){
            detailsView.setErrorMessage(Utils.getErrorMessage(caught));
          }
          @Override public void onSuccess(          Void result){
          }
        }
);
      }
    }
  }
));
  detailsView.getIncludeDeprecatedProfileFilters().setValue(place.isIncludeDeprecatedProfileFilters());
  detailsView.getIncludeDeprecatedProfileFilters().addValueChangeHandler(new ValueChangeHandler<Boolean>(){
    @Override public void onValueChange(    ValueChangeEvent<Boolean> event){
      place.setIncludeDeprecatedProfileFilters(detailsView.getIncludeDeprecatedProfileFilters().getValue());
      profileFiltersDataProvider.setIncludeDeprecated(detailsView.getIncludeDeprecatedProfileFilters().getValue());
      profileFiltersDataProvider.reload(detailsView.getProfileFiltersGrid().getDisplay());
    }
  }
);
  registrations.add(detailsView.getAddConfigurationButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      ConfigurationPlace configurationPlace=new ConfigurationPlace(applicationId,"",entityId,true,false,0);
      configurationPlace.setPreviousPlace(place);
      goTo(configurationPlace);
    }
  }
));
  registrations.add(detailsView.getConfigurationsGrid().addRowActionHandler(new RowActionEventHandler<StructureRecordKey>(){
    @Override public void onRowAction(    RowActionEvent<StructureRecordKey> event){
      StructureRecordKey id=event.getClickedId();
      if (event.getAction() == RowAction.CLICK) {
        ConfigurationPlace configurationPlace=new ConfigurationPlace(applicationId,id.getSchemaId(),id.getEndpointGroupId(),false,true,0);
        configurationPlace.setPreviousPlace(place);
        goTo(configurationPlace);
      }
 else       if (event.getAction() == RowAction.DELETE) {
        KaaAdmin.getDataSource().deleteConfigurationRecord(id.getSchemaId(),id.getEndpointGroupId(),new AsyncCallback<Void>(){
          @Override public void onFailure(          Throwable caught){
            detailsView.setErrorMessage(Utils.getErrorMessage(caught));
          }
          @Override public void onSuccess(          Void result){
          }
        }
);
      }
    }
  }
));
  detailsView.getIncludeDeprecatedConfigurations().setValue(place.isIncludeDeprecatedConfigurations());
  detailsView.getIncludeDeprecatedConfigurations().addValueChangeHandler(new ValueChangeHandler<Boolean>(){
    @Override public void onValueChange(    ValueChangeEvent<Boolean> event){
      place.setIncludeDeprecatedConfigurations(detailsView.getIncludeDeprecatedConfigurations().getValue());
      configurationsDataProvider.setIncludeDeprecated(detailsView.getIncludeDeprecatedConfigurations().getValue());
      configurationsDataProvider.reload(detailsView.getConfigurationsGrid().getDisplay());
    }
  }
);
  registrations.add(detailsView.getAddTopicButton().addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      addTopic();
    }
  }
));
  registrations.add(detailsView.getTopicsGrid().addRowActionHandler(new RowActionEventHandler<String>(){
    @Override public void onRowAction(    RowActionEvent<String> event){
      String id=event.getClickedId();
      if (event.getAction() == RowAction.CLICK) {
      }
 else       if (event.getAction() == RowAction.DELETE) {
        KaaAdmin.getDataSource().removeTopicFromEndpointGroup(entityId,id,new AsyncCallback<Void>(){
          @Override public void onFailure(          Throwable caught){
            detailsView.setErrorMessage(Utils.getErrorMessage(caught));
          }
          @Override public void onSuccess(          Void result){
          }
        }
);
      }
    }
  }
));
  registrations.add(eventBus.addHandler(DataEvent.getType(),new DataEventHandler(){
    @Override public void onDataChanged(    DataEvent event){
      if (detailsView != null) {
        if (event.checkClass(ProfileFilterDto.class) && profileFiltersDataProvider != null) {
          profileFiltersDataProvider.reload(detailsView.getProfileFiltersGrid().getDisplay());
        }
 else         if (event.checkClass(ConfigurationDto.class) && configurationsDataProvider != null) {
          configurationsDataProvider.reload(detailsView.getConfigurationsGrid().getDisplay());
        }
 else         if (event.checkClass(TopicDto.class) && topicsDataProvider != null) {
          topicsDataProvider.reload(detailsView.getTopicsGrid().getDisplay());
        }
      }
    }
  }
));
}
