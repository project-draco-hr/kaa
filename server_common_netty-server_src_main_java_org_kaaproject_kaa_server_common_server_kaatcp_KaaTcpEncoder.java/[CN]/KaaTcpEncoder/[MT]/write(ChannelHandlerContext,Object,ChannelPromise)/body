{
  if (!(msg instanceof MqttFrame)) {
    LOG.warn("Message is not a {}",MqttFrame.class.getSimpleName());
    super.write(ctx,msg,promise);
    return;
  }
 else {
    MqttFrame frame=(MqttFrame)msg;
    byte[] data=frame.getFrame().array();
    if (LOG.isTraceEnabled()) {
      LOG.trace("Sending {} data for frame {}",Arrays.toString(data),frame);
    }
    ChannelFuture future=ctx.writeAndFlush(data,promise);
    if (frame.isNeedCloseConnection()) {
      future.addListener(ChannelFutureListener.CLOSE);
    }
  }
}
