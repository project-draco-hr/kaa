{
  int payloadLimitPosition=buf.position() + payloadLength;
  if (hasOption(options,CLIENT_METASYNC_NOTIFICATION_HAS_TOPIC_LIST_HASH)) {
    payloadLimitPosition-=TOPIC_LIST_HASH_SIZE;
  }
  NotificationClientSync nfSync=new NotificationClientSync();
  nfSync.setAppStateSeqNumber(buf.getInt());
  while (buf.position() < payloadLimitPosition) {
    byte fieldId=buf.get();
    buf.get();
switch (fieldId) {
case NF_TOPIC_STATES_FIELD_ID:
      nfSync.setTopicStates(parseTopicStates(buf));
    break;
case NF_UNICAST_LIST_FIELD_ID:
  nfSync.setAcceptedUnicastNotifications(parseUnicastIds(buf));
break;
case NF_SUBSCRIPTION_ADD_FIELD_ID:
parseSubscriptionCommands(nfSync,buf,true);
break;
case NF_SUBSCRIPTION_REMOVE_FIELD_ID:
parseSubscriptionCommands(nfSync,buf,false);
break;
}
}
if (hasOption(options,CLIENT_METASYNC_NOTIFICATION_HAS_TOPIC_LIST_HASH)) {
nfSync.setTopicListHash(getNewByteBuffer(buf,TOPIC_LIST_HASH_SIZE));
}
sync.setNotificationSync(nfSync);
}
