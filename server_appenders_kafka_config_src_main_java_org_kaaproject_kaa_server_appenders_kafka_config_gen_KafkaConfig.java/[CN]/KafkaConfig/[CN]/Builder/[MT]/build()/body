{
  try {
    KafkaConfig record=new KafkaConfig();
    record.kafkaServers=fieldSetFlags()[0] ? this.kafkaServers : (java.util.List<org.kaaproject.kaa.server.appenders.kafka.config.gen.KafkaServer>)defaultValue(fields()[0]);
    record.topic=fieldSetFlags()[1] ? this.topic : (java.lang.String)defaultValue(fields()[1]);
    record.partitionCount=fieldSetFlags()[2] ? this.partitionCount : (java.lang.Integer)defaultValue(fields()[2]);
    record.executorThreadPoolSize=fieldSetFlags()[3] ? this.executorThreadPoolSize : (java.lang.Integer)defaultValue(fields()[3]);
    record.bufferMemorySize=fieldSetFlags()[4] ? this.bufferMemorySize : (java.lang.Long)defaultValue(fields()[4]);
    record.kafkaCompression=fieldSetFlags()[5] ? this.kafkaCompression : (org.kaaproject.kaa.server.appenders.kafka.config.gen.KafkaCompression)defaultValue(fields()[5]);
    record.kafkaAcknowledgement=fieldSetFlags()[6] ? this.kafkaAcknowledgement : (org.kaaproject.kaa.server.appenders.kafka.config.gen.KafkaAcknowledgement)defaultValue(fields()[6]);
    record.retries=fieldSetFlags()[7] ? this.retries : (java.lang.Integer)defaultValue(fields()[7]);
    record.useDefaultPartitioner=fieldSetFlags()[8] ? this.useDefaultPartitioner : (java.lang.Boolean)defaultValue(fields()[8]);
    return record;
  }
 catch (  Exception e) {
    throw new org.apache.avro.AvroRuntimeException(e);
  }
}
