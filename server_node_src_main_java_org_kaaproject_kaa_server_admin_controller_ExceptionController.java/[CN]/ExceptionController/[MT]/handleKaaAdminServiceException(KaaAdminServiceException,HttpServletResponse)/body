{
  try {
    ServiceErrorCode errorCode=ex.getErrorCode();
switch (errorCode) {
case NOT_AUTHORIZED:
      response.sendError(HttpServletResponse.SC_UNAUTHORIZED,ex.getMessage());
    break;
case PERMISSION_DENIED:
  response.sendError(HttpServletResponse.SC_FORBIDDEN,ex.getMessage());
break;
case INVALID_ARGUMENTS:
response.sendError(HttpServletResponse.SC_BAD_REQUEST,ex.getMessage());
break;
case INVALID_SCHEMA:
response.sendError(HttpServletResponse.SC_BAD_REQUEST,ex.getMessage());
break;
case FILE_NOT_FOUND:
response.sendError(HttpServletResponse.SC_NOT_FOUND,ex.getMessage());
break;
case ITEM_NOT_FOUND:
response.sendError(HttpServletResponse.SC_NOT_FOUND,ex.getMessage());
break;
case BAD_REQUEST_PARAMS:
response.sendError(HttpServletResponse.SC_BAD_REQUEST,ex.getMessage());
break;
case GENERAL_ERROR:
response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,ex.getMessage());
break;
case CONFLICT:
response.sendError(HttpServletResponse.SC_CONFLICT,ex.getMessage());
default :
break;
}
}
 catch (IOException e) {
LOG.error("Can't handle exception",e);
}
}
