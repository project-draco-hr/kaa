{
  checkAuthority(KaaAuthorityDto.TENANT_DEVELOPER,KaaAuthorityDto.TENANT_USER);
  try {
    LogSchemaDto logSchemaDto=logSchemaView.getSchema();
    String applicationId=logSchemaDto.getApplicationId();
    checkApplicationId(applicationId);
    String ctlSchemaId=logSchemaDto.getCtlSchemaId();
    if (isEmpty(ctlSchemaId)) {
      if (logSchemaView.useExistingCtlSchema()) {
        CtlSchemaReferenceDto metaInfo=logSchemaView.getExistingMetaInfo();
        CTLSchemaDto schema=getCTLSchemaByFqnVersionTenantIdAndApplicationId(metaInfo.getMetaInfo().getFqn(),metaInfo.getVersion(),metaInfo.getMetaInfo().getTenantId(),metaInfo.getMetaInfo().getApplicationId());
        logSchemaDto.setCtlSchemaId(schema.getId());
      }
 else {
        CtlSchemaFormDto ctlSchemaForm=saveCTLSchemaForm(logSchemaView.getCtlSchemaForm());
        logSchemaDto.setCtlSchemaId(ctlSchemaForm.getId());
      }
    }
    LogSchemaDto savedLogSchema=saveLogSchema(logSchemaDto);
    return getLogSchemaView(savedLogSchema.getId());
  }
 catch (  Exception e) {
    throw Utils.handleException(e);
  }
}
