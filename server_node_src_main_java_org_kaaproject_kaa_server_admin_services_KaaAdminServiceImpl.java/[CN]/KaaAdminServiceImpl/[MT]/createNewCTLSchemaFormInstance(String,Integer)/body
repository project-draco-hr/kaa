{
  checkAuthority(KaaAuthorityDto.TENANT_DEVELOPER,KaaAuthorityDto.TENANT_USER);
  try {
    AuthUserDto currentUser=getCurrentUser();
    SchemaFormAvroConverter converter=getCtlSchemaConverterForTenantId(currentUser.getTenantId());
    CTLSchemaInfoDto sourceCtlSchema=null;
    if (!isEmpty(sourceFqn) && sourceVersion != null) {
      sourceCtlSchema=getCTLSchemaByFqnAndVersion(sourceFqn,sourceVersion);
    }
    CtlSchemaFormDto ctlSchemaForm=null;
    if (sourceCtlSchema != null) {
      ctlSchemaForm=new CtlSchemaFormDto(sourceFqn);
      ctlSchemaForm.setSchemaName(sourceCtlSchema.getName());
      ctlSchemaForm.setDescription(sourceCtlSchema.getDescription());
      RecordField form=converter.createSchemaFormFromSchema(sourceCtlSchema.getBody());
      form.updateVersion(form.getContext().getMaxVersion(new Fqn(sourceFqn)) + 1);
      ctlSchemaForm.setSchema(form);
    }
 else {
      ctlSchemaForm=new CtlSchemaFormDto();
      RecordField form=converter.getEmptySchemaFormInstance();
      form.updateVersion(1);
      ctlSchemaForm.setSchema(form);
    }
    return ctlSchemaForm;
  }
 catch (  Exception cause) {
    throw Utils.handleException(cause);
  }
}
