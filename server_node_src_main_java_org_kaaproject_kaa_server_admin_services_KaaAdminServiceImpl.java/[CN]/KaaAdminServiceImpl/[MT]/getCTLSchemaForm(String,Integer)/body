{
  checkAuthority(KaaAuthorityDto.TENANT_DEVELOPER,KaaAuthorityDto.TENANT_USER);
  try {
    CtlSchemaFormDto ctlSchemaForm=null;
    AuthUserDto currentUser=getCurrentUser();
    CTLSchemaDto ctlSchema=null;
    List<CTLSchemaDto> ctlSchemas=controlService.getCTLSchemasByFqnAndTenantId(fqn,currentUser.getTenantId());
    Integer maxVersion=Integer.MIN_VALUE;
    if (ctlSchemas != null && !ctlSchemas.isEmpty()) {
      for (      CTLSchemaDto currentCtlSchema : ctlSchemas) {
        Integer currentVersion=currentCtlSchema.getMetaInfo().getVersion();
        if (version == null) {
          if (currentVersion > maxVersion) {
            maxVersion=currentVersion;
            ctlSchema=currentCtlSchema;
          }
        }
 else         if (currentVersion.equals(version)) {
          ctlSchema=currentCtlSchema;
        }
      }
    }
    if (ctlSchema != null) {
      ctlSchemaForm=new CtlSchemaFormDto(fqn);
      ctlSchemaForm.setCtlSchemaId(ctlSchema.getId());
      ctlSchemaForm.setSchemaName(ctlSchema.getName());
      ctlSchemaForm.setDescription(ctlSchema.getDescription());
      ctlSchemaForm.setCreatedTime(ctlSchema.getCreatedTime());
      ctlSchemaForm.setCreatedUsername(ctlSchema.getCreatedUsername());
      ctlSchemaForm.setHasDependencies(ctlSchema.getDependencySet() != null && !ctlSchema.getDependencySet().isEmpty());
      SchemaFormAvroConverter converter=getCtlSchemaConverterForTenantId(currentUser.getTenantId());
      RecordField form=converter.createSchemaFormFromSchema(ctlSchema.getBody());
      ctlSchemaForm.setSchema(form);
      List<Integer> availableVersions=form.getContext().getAvailableVersions(new Fqn(fqn));
      Collections.sort(availableVersions);
      ctlSchemaForm.setAvailableVersions(availableVersions);
    }
    return ctlSchemaForm;
  }
 catch (  Exception cause) {
    throw Utils.handleException(cause);
  }
}
