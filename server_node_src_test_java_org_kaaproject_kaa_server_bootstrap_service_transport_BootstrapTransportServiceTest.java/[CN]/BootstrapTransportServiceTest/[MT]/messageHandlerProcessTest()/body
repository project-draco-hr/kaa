{
  BootstrapTransportService bService=new BootstrapTransportService();
  KeyStoreService keyStoreService=mock(KeyStoreService.class);
  KeyPair keyPair=keyPairGenerator.generateKeyPair();
  PublicKey publicKey=keyPair.getPublic();
  PrivateKey privateKey=keyPair.getPrivate();
  when(keyStoreService.getPublicKey()).thenReturn(publicKey);
  when(keyStoreService.getPrivateKey()).thenReturn(privateKey);
  ReflectionTestUtils.setField(bService,"supportUnencryptedConnection",true);
  ReflectionTestUtils.setField(bService,"bootstrapKeyStoreService",keyStoreService);
  ReflectionTestUtils.setField(bService,"properties",new Properties());
  bService.lookupAndInit();
  MessageHandler handler=(BootstrapTransportService.BootstrapMessageHandler)ReflectionTestUtils.getField(bService,"handler");
  SessionInitMessage encryptedSessionInitMessage=mockForSessionInitMessage(true);
  SessionInitMessage nonEncryptedSessionInitMessage=mockForSessionInitMessage(false);
  handler.process(encryptedSessionInitMessage);
  handler.process(nonEncryptedSessionInitMessage);
  verify(encryptedSessionInitMessage,timeout(1000)).getEncodedMessageData();
  verify(nonEncryptedSessionInitMessage,timeout(1000)).getEncodedMessageData();
}
