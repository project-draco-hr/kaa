{
  try {
    ApplicationDto application=applicationService.findAppById(applicationId);
    if (application == null) {
      throw new TException("Application not found!");
    }
    FileData data=new FileData();
    if (RecordFile.LOG_LIBRARY.equals(recordFile)) {
      data=generateRecordStructureLibrary(applicationId,schemaVersion);
    }
 else {
      AbstractSchemaDto schemaDto=null;
      String fileName=null;
      String schema=null;
switch (recordFile) {
case LOG_SCHEMA:
        schemaDto=logSchemaService.findLogSchemaByAppIdAndVersion(applicationId,schemaVersion);
      checkSchema(schemaDto,RecordFile.LOG_SCHEMA);
    Schema recordWrapperSchema=RecordWrapperSchemaGenerator.generateRecordWrapperSchema(schemaDto.getSchema());
  schema=recordWrapperSchema.toString(true);
fileName=MessageFormatter.arrayFormat(DATA_NAME_PATTERN,new Object[]{"log",schemaVersion}).getMessage();
break;
case CONFIGURATION_SCHEMA:
schemaDto=configurationService.findConfSchemaByAppIdAndVersion(applicationId,schemaVersion);
checkSchema(schemaDto,RecordFile.CONFIGURATION_SCHEMA);
schema=schemaDto.getSchema();
fileName=MessageFormatter.arrayFormat(DATA_NAME_PATTERN,new Object[]{"configuration",schemaVersion}).getMessage();
break;
case CONFIGURATION_BASE_SCHEMA:
schemaDto=configurationService.findConfSchemaByAppIdAndVersion(applicationId,schemaVersion);
checkSchema(schemaDto,RecordFile.CONFIGURATION_BASE_SCHEMA);
schema=((ConfigurationSchemaDto)schemaDto).getBaseSchema();
fileName=MessageFormatter.arrayFormat(DATA_NAME_PATTERN,new Object[]{"configuration-base",schemaVersion}).getMessage();
break;
case CONFIGURATION_OVERRIDE_SCHEMA:
schemaDto=configurationService.findConfSchemaByAppIdAndVersion(applicationId,schemaVersion);
checkSchema(schemaDto,RecordFile.CONFIGURATION_OVERRIDE_SCHEMA);
schema=((ConfigurationSchemaDto)schemaDto).getOverrideSchema();
fileName=MessageFormatter.arrayFormat(DATA_NAME_PATTERN,new Object[]{"configuration-override",schemaVersion}).getMessage();
break;
case NOTIFICATION_SCHEMA:
schemaDto=notificationService.findNotificationSchemaByAppIdAndTypeAndVersion(applicationId,NotificationTypeDto.USER,schemaVersion);
checkSchema(schemaDto,RecordFile.NOTIFICATION_SCHEMA);
schema=schemaDto.getSchema();
fileName=MessageFormatter.arrayFormat(DATA_NAME_PATTERN,new Object[]{"notification",schemaVersion}).getMessage();
break;
case PROFILE_SCHEMA:
schemaDto=profileService.findProfileSchemaByAppIdAndVersion(applicationId,schemaVersion);
checkSchema(schemaDto,RecordFile.PROFILE_SCHEMA);
schema=schemaDto.getSchema();
fileName=MessageFormatter.arrayFormat(DATA_NAME_PATTERN,new Object[]{"profile",schemaVersion}).getMessage();
break;
default :
break;
}
byte[] schemaData=schema.getBytes(StandardCharsets.UTF_8);
data.setFileName(fileName);
data.setData(schemaData);
}
return data;
}
 catch (Exception e) {
LOG.error("Unable to get Record Structure Schema",e);
throw new TException(e);
}
}
