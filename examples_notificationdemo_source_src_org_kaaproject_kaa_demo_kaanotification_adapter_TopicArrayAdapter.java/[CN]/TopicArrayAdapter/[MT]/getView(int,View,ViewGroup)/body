{
  View view=null;
  if (convertView == null) {
    LayoutInflater inflator=context.getLayoutInflater();
    view=inflator.inflate(R.layout.topics,null);
    final ViewHolder viewHolder=new ViewHolder();
    viewHolder.topic=(TextView)view.findViewById(R.id.label);
    viewHolder.notificationCount=(TextView)view.findViewById(R.id.notifications);
    viewHolder.checkbox=(CheckBox)view.findViewById(R.id.check);
    viewHolder.checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){
      @Override public void onCheckedChanged(      CompoundButton buttonView,      boolean isChecked){
        TopicModel element=(TopicModel)viewHolder.checkbox.getTag();
        element.setSelected(buttonView.isChecked());
        if (element.isSelected()) {
          viewHolder.notificationCount.setText(String.valueOf(element.getNotificationsCount()));
          if (!element.isMandatoryTopic()) {
            if (!element.isSubscribedTo()) {
              element.setSubscribedTo(true);
              app.subscribeToTopic(element.getTopicId());
            }
          }
        }
 else {
          if (!element.isMandatoryTopic())           if (element.isSubscribedTo()) {
            element.setSubscribedTo(false);
            app.unsubscribeFromTopic(element.getTopicId());
          }
          viewHolder.notificationCount.setText("");
        }
      }
    }
);
    view.setTag(viewHolder);
    viewHolder.checkbox.setTag(list.get(position));
  }
 else {
    view=convertView;
    ((ViewHolder)view.getTag()).checkbox.setTag(list.get(position));
  }
  ViewHolder holder=(ViewHolder)view.getTag();
  holder.topic.setText(list.get(position).getTopicName());
  TopicModel model=(TopicModel)holder.checkbox.getTag();
  if (model.isMandatoryTopic()) {
    holder.notificationCount.setText("" + model.getNotificationsCount());
    holder.checkbox.setEnabled(false);
    holder.checkbox.setChecked(true);
  }
 else {
    holder.notificationCount.setText("");
    holder.checkbox.setChecked(model.isSelected());
    holder.checkbox.setEnabled(true);
  }
  return view;
}
