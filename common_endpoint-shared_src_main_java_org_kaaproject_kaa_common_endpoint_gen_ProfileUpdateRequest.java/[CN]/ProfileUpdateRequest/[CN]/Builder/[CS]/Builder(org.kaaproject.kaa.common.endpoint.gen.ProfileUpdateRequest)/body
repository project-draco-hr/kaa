{
  super(org.kaaproject.kaa.common.endpoint.gen.ProfileUpdateRequest.SCHEMA$);
  if (isValidValue(fields()[0],other.applicationToken)) {
    this.applicationToken=data().deepCopy(fields()[0].schema(),other.applicationToken);
    fieldSetFlags()[0]=true;
  }
  if (isValidValue(fields()[1],other.endpointPublicKeyHash)) {
    this.endpointPublicKeyHash=data().deepCopy(fields()[1].schema(),other.endpointPublicKeyHash);
    fieldSetFlags()[1]=true;
  }
  if (isValidValue(fields()[2],other.profileBody)) {
    this.profileBody=data().deepCopy(fields()[2].schema(),other.profileBody);
    fieldSetFlags()[2]=true;
  }
  if (isValidValue(fields()[3],other.acceptedUnicastNotifications)) {
    this.acceptedUnicastNotifications=data().deepCopy(fields()[3].schema(),other.acceptedUnicastNotifications);
    fieldSetFlags()[3]=true;
  }
  if (isValidValue(fields()[4],other.topicStates)) {
    this.topicStates=data().deepCopy(fields()[4].schema(),other.topicStates);
    fieldSetFlags()[4]=true;
  }
  if (isValidValue(fields()[5],other.versionInfo)) {
    this.versionInfo=data().deepCopy(fields()[5].schema(),other.versionInfo);
    fieldSetFlags()[5]=true;
  }
}
