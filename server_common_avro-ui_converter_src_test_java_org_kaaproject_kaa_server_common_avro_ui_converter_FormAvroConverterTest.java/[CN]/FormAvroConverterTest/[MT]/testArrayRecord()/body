{
  Schema schema=TestAvroSchemas.getArraySchema();
  RecordField field=FormAvroConverter.createRecordFieldFromSchema(schema);
  Assert.assertNotNull(field);
  Assert.assertNotNull(field.getValue());
  Assert.assertEquals(1,field.getValue().size());
  FormField formField=field.getValue().get(0);
  Assert.assertNotNull(formField);
  Assert.assertTrue(formField instanceof ArrayField);
  ArrayField arrayField=(ArrayField)formField;
  Assert.assertNotNull(arrayField.getValue());
  Assert.assertEquals(1,arrayField.getMinRowCount());
  Assert.assertEquals(1,arrayField.getValue().size());
  checkSingleFieldRecord(arrayField.getValue().get(0));
  Assert.assertNotNull(arrayField.getElementMetadata());
  checkSingleFieldRecord(arrayField.getElementMetadata());
  RecordField newRow=(RecordField)arrayField.getElementMetadata().clone();
  StringField stringField=(StringField)newRow.getValue().get(0);
  stringField.setValue("cell value");
  arrayField.addArrayData(newRow);
  GenericRecord record=FormAvroConverter.createGenericRecordFormRecordField(field,schema);
  Assert.assertNotNull(record);
  Object val=record.get("testArrayElements");
  Assert.assertNotNull(val);
  Assert.assertTrue(val instanceof GenericData.Array);
  GenericData.Array<GenericRecord> genericArrayData=(GenericData.Array<GenericRecord>)val;
  Assert.assertEquals(2,genericArrayData.size());
  GenericRecord row=genericArrayData.get(0);
  Assert.assertNotNull(row);
  val=row.get("test");
  Assert.assertNotNull(val);
  Assert.assertTrue(val instanceof String);
  Assert.assertEquals("",(String)val);
  row=genericArrayData.get(1);
  Assert.assertNotNull(row);
  val=row.get("test");
  Assert.assertNotNull(val);
  Assert.assertTrue(val instanceof String);
  Assert.assertEquals("cell value",(String)val);
  RecordField convertedField=FormAvroConverter.createRecordFieldFromGenericRecord(record);
  Assert.assertNotNull(convertedField);
  Assert.assertEquals(field,convertedField);
}
