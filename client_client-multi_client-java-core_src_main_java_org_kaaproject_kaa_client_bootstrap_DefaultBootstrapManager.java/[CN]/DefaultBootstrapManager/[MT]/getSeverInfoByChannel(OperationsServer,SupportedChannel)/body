{
  Channel channel=ChannelFactory.getChannelFromSupportedChannel(supportedChannel);
  ServerInfo info;
switch (channel.getChannelType()) {
case HTTP:
    HttpParameters httpParams=HttpChannel.getHttpParametersFromSupportedChannel(supportedChannel);
  info=new HttpServerInfo(ServerType.OPERATIONS,httpParams.getHostName(),httpParams.getPort(),server.getPublicKey().array());
break;
case HTTP_LP:
HttpLongPollParameters longPollParams=HttpLongPollChannel.getHttpLongPollParametersFromSupportedChannel(supportedChannel);
info=new HttpLongPollServerInfo(ServerType.OPERATIONS,longPollParams.getHostName(),longPollParams.getPort(),server.getPublicKey().array());
break;
case KAATCP:
KaaTcpParameters tcpParams=KaaTcpChannel.getKaaTcpParametersFromSupportedChannel(supportedChannel);
info=new KaaTcpServerInfo(ServerType.OPERATIONS,tcpParams.getHostName(),tcpParams.getPort(),server.getPublicKey().array());
break;
default :
throw new BootstrapRuntimeException("Invalid type");
}
return info;
}
