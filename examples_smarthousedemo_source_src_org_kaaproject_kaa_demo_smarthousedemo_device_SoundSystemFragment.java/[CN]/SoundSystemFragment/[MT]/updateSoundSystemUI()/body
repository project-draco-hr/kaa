{
  if (playbackInfo.getSong() != null) {
    if (mCurrentSong == null || !playbackInfo.getSong().getUrl().equals(mCurrentSong.getUrl())) {
      mCurrentSong=playbackInfo.getSong();
      String artist=mCurrentSong.getArtist().contains("unknown") ? "Unknown artist" : mCurrentSong.getArtist();
      String album=mCurrentSong.getAlbum().contains("unknown") ? "Unknown album" : mCurrentSong.getAlbum();
      mSongAuthor.setVisibility(View.VISIBLE);
      mSongAlbum.setVisibility(View.VISIBLE);
      mSongProgress.setVisibility(View.VISIBLE);
      mSongProgressElapsed.setVisibility(View.VISIBLE);
      mSongProgressLeft.setVisibility(View.VISIBLE);
      mSongAuthor.setText(artist);
      mSongName.setText(mCurrentSong.getTitle());
      mSongAlbum.setText(album);
      mSongProgress.setMax(mCurrentSong.getDuration());
    }
    mSongProgress.setProgress(playbackInfo.getTime());
  }
 else {
    mCurrentSong=null;
    mSongAuthor.setVisibility(View.INVISIBLE);
    mSongAlbum.setVisibility(View.INVISIBLE);
    mSongProgress.setVisibility(View.INVISIBLE);
    mSongProgressElapsed.setVisibility(View.INVISIBLE);
    mSongProgressLeft.setVisibility(View.INVISIBLE);
    mSongName.setText("No song selected");
  }
  mCurrentActionButton.setBackgroundResource(playbackInfo.getStatus() == PlaybackStatus.PAUSED ? R.drawable.music_play : R.drawable.music_pause);
}
