{
  List<String> symbols=new LinkedList<>();
  symbols.add("enum1");
  symbols.add("enum2");
  Schema recordSchema=Schema.createRecord("someRecord","","",false);
  List<Schema.Field> fields=new LinkedList<>();
  fields.add(new Schema.Field("field1",Schema.createEnum("someEnum","","",symbols),"",null));
  fields.add(new Schema.Field("field2",Schema.create(Type.BOOLEAN),"",null));
  fields.add(new Schema.Field("field3",Schema.create(Type.INT),"",null));
  fields.add(new Schema.Field("field4",Schema.create(Type.LONG),"",null));
  fields.add(new Schema.Field("field5",Schema.create(Type.DOUBLE),"",null));
  fields.add(new Schema.Field("field6",Schema.create(Type.FLOAT),"",null));
  fields.add(new Schema.Field("field7",Schema.create(Type.STRING),"",null));
  fields.add(new Schema.Field("field8",Schema.create(Type.BYTES),"",null));
  recordSchema.setFields(fields);
  CommonRecord record=new DefaultCommonRecord(recordSchema);
  record.setField("field1",new DefaultCommonValue(new DefaultCommonEnum(Schema.createEnum("someEnum","","",symbols),"enum2")));
  record.setField("field2",new DefaultCommonValue(new Boolean(Boolean.TRUE)));
  record.setField("field3",new DefaultCommonValue(new Integer(1)));
  record.setField("field4",new DefaultCommonValue(new Long(2)));
  record.setField("field5",new DefaultCommonValue(new Double(5.5)));
  record.setField("field6",new DefaultCommonValue(new Float(5.6)));
  record.setField("field7",new DefaultCommonValue(new String("abc")));
  record.setField("field8",new DefaultCommonValue(ByteBuffer.wrap(new byte[]{1,2})));
  GenericRecord avroRecord=CommonToGeneric.createRecord(record);
  GenericEnumSymbol field1=(GenericEnumSymbol)avroRecord.get("field1");
  assertEquals("enum2",field1.toString());
  assertTrue((Boolean)avroRecord.get("field2"));
  assertEquals(1,((Integer)avroRecord.get("field3")).intValue());
  assertEquals(2,((Long)avroRecord.get("field4")).longValue());
  assertEquals(5.5,((Double)avroRecord.get("field5")).doubleValue(),0.1);
  assertEquals(5.6,((Float)avroRecord.get("field6")).floatValue(),0.1);
  assertEquals("abc",(String)avroRecord.get("field7"));
  assertArrayEquals(new byte[]{1,2},((ByteBuffer)avroRecord.get("field8")).array());
}
