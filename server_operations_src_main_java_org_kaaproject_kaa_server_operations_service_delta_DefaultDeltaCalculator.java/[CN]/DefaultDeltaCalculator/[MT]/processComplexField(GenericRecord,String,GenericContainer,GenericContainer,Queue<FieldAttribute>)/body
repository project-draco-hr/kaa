{
  boolean fieldChanged=false;
  if (newRecordValue.getSchema().getType() == Type.RECORD) {
    GenericRecord subDelta=createSubDelta(delta,field,(GenericRecord)newRecordValue);
    if (subDelta != null) {
      boolean hasChanges=false;
      if (oldRecordValue != null && oldRecordValue.getSchema().getFullName().equals(newRecordValue.getSchema().getFullName())) {
        FieldAttribute fieldPair=new FieldAttribute(getSchemaByFullName(delta,field,getFullName(newRecordValue)),field);
        Queue<FieldAttribute> newFieldQueue=new LinkedList<FieldAttribute>(fieldQueue);
        newFieldQueue.offer(fieldPair);
        hasChanges=fillDelta(subDelta,(GenericRecord)oldRecordValue,(GenericRecord)newRecordValue,newFieldQueue);
      }
 else {
        fillDeltaWithoutMerge(subDelta,(GenericRecord)newRecordValue);
        hasChanges=true;
      }
      if (hasChanges) {
        delta.put(field,subDelta);
        fieldChanged=true;
      }
    }
 else {
      throw new DeltaCalculatorException(new StringBuilder().append("Failed to find subdelta schema \"").append(getFullName(newRecordValue)).append("\"").toString());
    }
  }
 else   if (oldRecordValue == null || field.equals(UUID_FIELD) || !newRecordValue.equals(oldRecordValue)) {
    delta.put(field,newRecordValue);
    fieldChanged=true;
  }
  if (!fieldChanged) {
    putUnchanged(delta,field);
  }
}
