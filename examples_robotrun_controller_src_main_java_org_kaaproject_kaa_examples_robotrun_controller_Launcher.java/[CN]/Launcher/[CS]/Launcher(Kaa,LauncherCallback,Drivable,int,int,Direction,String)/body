{
  this.kaa=kaa;
  this.callback=callback;
  this.entityName=name;
  drivable.registerStateCallback(this);
  drivable.registerErrorCallback(this);
  kaa.getClient().getProfileManager().setProfileContainer(new BasicProfileContainer());
  final Context context=new Context();
  final ConfigurationManager configurationManager=new DefaultConfigurationManager(kaa.getClient());
  configurationManager.setStartPosition(startX,startY,startDirection);
  context.setConfigurationManager(configurationManager);
  context.setEventManager(new DefaultEventManager(kaa.getClient(),EntityType.ROBOT,new DefaultEventManager.EventManagerDataProvider(){
    @Override public Cell getCurrentCell(){
      if (context.getCell() == null) {
        return configurationManager.getStartPosition();
      }
 else {
        return context.getCell();
      }
    }
    @Override public Labyrinth getLabyrinth(){
      return context.getLabyrinth();
    }
    @Override public String getEntityName(){
      return entityName;
    }
  }
));
  context.setLogManager(new DefaultLogManager(kaa.getClient()));
  context.setDrivable(drivable);
  context.setExitSearchAlgorithm(new KaaAlgorithm());
  context.setPathSearchAlgorithm(new DepthFirstSearchAlgorithm());
  controller=new Controller(context,this);
}
