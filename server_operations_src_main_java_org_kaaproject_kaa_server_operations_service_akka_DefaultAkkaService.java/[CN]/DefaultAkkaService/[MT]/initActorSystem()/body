{
  LOG.info("Initializing Akka system...");
  akka=ActorSystem.create(EPS);
  LOG.info("Initializing Akka EPS actor...");
  opsActor=akka.actorOf(Props.create(new OperationsServerActor.ActorCreator(cacheService,operationsService,notificationDeltaService,eventService,applicationService,logAppenderService)),EPS);
  LOG.info("Lookup platform protocol");
  Set<String> platformProtocols=lookupPlatformProtocols();
  LOG.info("Initializing Akka io router...");
  ioRouter=akka.actorOf(new RoundRobinPool(IO_WORKERS_COUNT).props(Props.create(new EncDecActor.ActorCreator(opsActor,metricsService,cacheService,new KeyPair(keyStoreService.getPublicKey(),keyStoreService.getPrivateKey()),platformProtocols,supportUnencryptedConnection))),"ioRouter");
  LOG.info("Initializing Akka event service listener...");
  listener=new AkkaEventServiceListener(opsActor);
  eventService.addListener(listener);
  LOG.info("Initializing Akka system done");
}
