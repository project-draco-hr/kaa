{
  LOG.info("Initializing Akka system...");
  akka=ActorSystem.create(EPS,context.getConfig());
  LOG.info("Initializing Akka EPS actor...");
  opsActor=akka.actorOf(Props.create(new OperationsServerActor.ActorCreator(context)).withDispatcher(CORE_DISPATCHER_NAME),EPS);
  LOG.info("Lookup platform protocols");
  Set<String> platformProtocols=PlatformLookup.lookupPlatformProtocols(PlatformLookup.DEFAULT_PROTOCOL_LOOKUP_PACKAGE_NAME);
  LOG.info("Initializing Akka io router...");
  ioRouter=akka.actorOf(new RoundRobinPool(context.getIOWorkerCount()).props(Props.create(new EncDecActor.ActorCreator(opsActor,context,platformProtocols)).withDispatcher(IO_DISPATCHER_NAME)),IO_ROUTER_ACTOR_NAME);
  LOG.info("Initializing Akka event service listener...");
  listener=new AkkaEventServiceListener(opsActor);
  context.getEventService().addListener(listener);
  LOG.info("Initializing Akka system done");
}
