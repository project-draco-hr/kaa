{
  LOG.debug("Checking for a delivery timeout of the bucket with id: [{}] ",bucketId);
  Future<?> timeoutFuture=timeouts.remove(bucketId);
  if (timeoutFuture != null) {
    LOG.info("Log delivery timeout detected for the bucket with id: [{}]",bucketId);
    storage.notifyUploadFailed(bucketId);
    final LogFailoverCommand controller=this.controller;
    executorContext.getCallbackExecutor().execute(new Runnable(){
      @Override public void run(){
        strategy.onTimeout(controller);
        if (logDeliveryListener != null) {
          logDeliveryListener.onLogDeliveryTimeout(bucketInfoMap.get(bucketId));
        }
      }
    }
);
    timeoutFuture.cancel(true);
  }
 else {
    LOG.trace("No log delivery timeout for the bucket with id [{}] was detected",bucketId);
  }
}
