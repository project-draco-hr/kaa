{
  validateString(userExternalId,"Incorrect userExternalId " + userExternalId);
  EndpointUser endpointUser=endpointUserDao.findByExternalIdAndTenantId(userExternalId,tenantId);
  if (endpointUser == null) {
    LOG.info("Creating new endpoint user with external id: [{}] in context of [{}] tenant",userExternalId,tenantId);
    EndpointUserDto endpointUserDto=new EndpointUserDto();
    endpointUserDto.setTenantId(tenantId);
    endpointUserDto.setExternalId(userExternalId);
    endpointUserDto.setUsername(userExternalId);
    endpointUser=endpointUserDao.save(endpointUserDto);
  }
  List<String> endpointIds=endpointUser.getEndpointIds();
  if (endpointIds == null) {
    endpointIds=new ArrayList<>();
    endpointUser.setEndpointIds(endpointIds);
  }
 else   if (endpointIds != null && endpointIds.contains(profile.getId())) {
    LOG.warn("Endpoint is already assigned to current user {}. Unassign it first!.",profile.getEndpointUserId());
  }
  endpointIds.add(profile.getId());
  endpointUser=endpointUserDao.save(endpointUser);
  profile.setEndpointUserId(endpointUser.getId());
  while (true) {
    try {
      LOG.trace("Save endpoint user {} and endpoint profile {}",endpointUser,profile);
      return saveEndpointProfile(profile);
    }
 catch (    KaaOptimisticLockingFailureException ex) {
      LOG.warn("Optimistic lock detected in endpoint profile ",Arrays.toString(profile.getEndpointKey()),ex);
      profile=findEndpointProfileByKeyHash(profile.getEndpointKeyHash());
      profile.setEndpointUserId(endpointUser.getId());
    }
  }
}
