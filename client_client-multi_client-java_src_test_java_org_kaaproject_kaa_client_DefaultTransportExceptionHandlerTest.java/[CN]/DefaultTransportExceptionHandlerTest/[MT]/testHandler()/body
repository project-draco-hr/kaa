{
  KeyPairGenerator clientKeyGen=KeyPairGenerator.getInstance("RSA");
  clientKeyGen.initialize(2048);
  KeyPair clientKeyPair=clientKeyGen.genKeyPair();
  BootstrapManager bootstrapManager=mock(BootstrapManager.class);
  when(bootstrapManager.getNextOperationsServer()).thenReturn(new OperationsServerInfo("localhost:9889",clientKeyPair.getPublic().getEncoded()));
  UpdateManager updateManager=mock(UpdateManager.class);
  KaaClientState state=mock(KaaClientState.class);
  when(state.getPrivateKey()).thenReturn(clientKeyPair.getPrivate());
  when(state.getPublicKey()).thenReturn(clientKeyPair.getPublic());
  TransportExceptionHandler handler=new DefaultTransportExceptionHandler(bootstrapManager,updateManager,state);
  handler.onTransportException();
  when(bootstrapManager.getNextOperationsServer()).thenReturn(null);
  handler.onTransportException();
  verify(bootstrapManager,times(2)).getNextOperationsServer();
  verify(updateManager,times(1)).setTransport(any(OperationsTransport.class));
  verify(updateManager,times(2)).failover(any(Long.class));
}
