{
  ByteBuffer buf=ByteBuffer.wrap(new byte[4 + 100 + (4 * 5)+ 12+ 4+ 128+ 4+ 8]);
  buf.putInt(100);
  byte[] profileBody=new byte[100];
  profileBody[MAGIC_INDEX]=MAGIC_NUMBER;
  buf.put(profileBody);
  buf.put((byte)1);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)(MAGIC_NUMBER + 1));
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)(MAGIC_NUMBER + 2));
  buf.put((byte)2);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)(MAGIC_NUMBER + 3));
  buf.put((byte)3);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)(MAGIC_NUMBER + 4));
  buf.put((byte)4);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)(MAGIC_NUMBER + 5));
  buf.put((byte)5);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)1);
  buf.putShort((short)MAGIC_NUMBER);
  buf.putShort((short)4);
  buf.put("name".getBytes(Charset.forName("UTF-8")));
  buf.put((byte)6);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)128);
  byte[] keyBody=new byte[128];
  keyBody[MAGIC_INDEX]=MAGIC_NUMBER;
  buf.put(keyBody);
  buf.put((byte)7);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)5);
  buf.put("token".getBytes(Charset.forName("UTF-8")));
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)0);
  ClientSync sync=encDec.decode(concat(buildHeader(BinaryEncDec.PROTOCOL_ID,1,2),getValidMetaData(),buildExtensionHeader(BinaryEncDec.PROFILE_EXTENSION_ID,0,0,0,buf.array().length),buf.array()));
  Assert.assertNotNull(sync);
  Assert.assertNotNull(sync.getClientSyncMetaData());
  Assert.assertNotNull(sync.getProfileSync());
  ProfileClientSync pSync=sync.getProfileSync();
  Assert.assertEquals(MAGIC_NUMBER,pSync.getProfileBody().array()[MAGIC_INDEX]);
  Assert.assertEquals(MAGIC_NUMBER,pSync.getEndpointPublicKey().array()[MAGIC_INDEX]);
  Assert.assertNotNull(pSync.getVersionInfo());
  Assert.assertEquals(MAGIC_NUMBER + 1,pSync.getVersionInfo().getProfileVersion());
  Assert.assertEquals(MAGIC_NUMBER + 2,pSync.getVersionInfo().getConfigVersion());
  Assert.assertEquals(MAGIC_NUMBER + 3,pSync.getVersionInfo().getSystemNfVersion());
  Assert.assertEquals(MAGIC_NUMBER + 4,pSync.getVersionInfo().getUserNfVersion());
  Assert.assertEquals(MAGIC_NUMBER + 5,pSync.getVersionInfo().getLogSchemaVersion());
  Assert.assertEquals(1,pSync.getVersionInfo().getEventFamilyVersions().size());
  Assert.assertEquals("name",pSync.getVersionInfo().getEventFamilyVersions().get(0).getName());
  Assert.assertEquals(MAGIC_NUMBER,pSync.getVersionInfo().getEventFamilyVersions().get(0).getVersion());
  Assert.assertEquals("token",pSync.getEndpointAccessToken());
}
