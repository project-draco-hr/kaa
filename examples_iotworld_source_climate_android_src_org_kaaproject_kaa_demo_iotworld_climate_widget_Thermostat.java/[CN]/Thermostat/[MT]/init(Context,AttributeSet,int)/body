{
  Log.d(TAG,"Initialising Thermostat");
  final Resources res=getResources();
  float density=context.getResources().getDisplayMetrics().density;
  mArcColorCold=res.getColor(R.color.thermostat_arc_cold);
  mArcColor=res.getColor(R.color.thermostat_arc);
  mArcColorHeat=res.getColor(R.color.thermostat_arc_heat);
  mProgressColorCold=res.getColor(R.color.thermostat_progress_cold);
  mProgressColor=res.getColor(R.color.thermostat_progress);
  mProgressColorHeat=res.getColor(R.color.thermostat_progress_heat);
  mBackgroundColorCold=getResources().getColor(R.color.transparent);
  mBackgroundColor=getResources().getColor(R.color.transparent);
  mBackgroundColorHeat=getResources().getColor(R.color.transparent);
  mIdleText=getResources().getText(R.string.idle);
  mCoolingText=getResources().getText(R.string.cooling);
  mHeatingText=getResources().getText(R.string.heating);
  int thumbsColor=res.getColor(R.color.thermostat_thumbs_color);
  int thumbsGlowColor=res.getColor(R.color.thermostat_thumbs_glow_color);
  int controlsColor=res.getColor(R.color.thermostat_controls_color);
  mProgressWidth=(int)(mProgressWidth * density);
  if (attrs != null) {
    final TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.Thermostat,defStyle,0);
    mMinSize=a.getDimensionPixelSize(R.styleable.Thermostat_minSize,mMinSize);
    setMinimumHeight(mMinSize);
    setMinimumWidth(mMinSize);
    mMax=a.getInteger(R.styleable.Thermostat_max,mMax);
    mProgress=a.getInteger(R.styleable.Thermostat_progress,mProgress);
    mProgressWidth=(int)a.getDimension(R.styleable.Thermostat_progressWidth,mProgressWidth);
    mArcWidth=(int)a.getDimension(R.styleable.Thermostat_arcWidth,mArcWidth);
    mStartAngle=a.getInt(R.styleable.Thermostat_startAngle,mStartAngle);
    mSweepAngle=a.getInt(R.styleable.Thermostat_sweepAngle,mSweepAngle);
    mRotation=a.getInt(R.styleable.Thermostat_rotation,mRotation);
    mRoundedEdges=a.getBoolean(R.styleable.Thermostat_roundEdges,mRoundedEdges);
    mTouchInside=a.getBoolean(R.styleable.Thermostat_touchInside,mTouchInside);
    mClockwise=a.getBoolean(R.styleable.Thermostat_clockwise,mClockwise);
    mArcColorCold=a.getColor(R.styleable.Thermostat_arcColorCold,mArcColorCold);
    mArcColor=a.getColor(R.styleable.Thermostat_arcColor,mArcColor);
    mArcColorHeat=a.getColor(R.styleable.Thermostat_arcColorHeat,mArcColorHeat);
    mProgressColorCold=a.getColor(R.styleable.Thermostat_progressColorCold,mProgressColorCold);
    mProgressColor=a.getColor(R.styleable.Thermostat_progressColor,mProgressColor);
    mProgressColorHeat=a.getColor(R.styleable.Thermostat_progressColorHeat,mProgressColorHeat);
    mBackgroundColorCold=a.getColor(R.styleable.Thermostat_backgroundColorCold,mBackgroundColorCold);
    mBackgroundColor=a.getColor(R.styleable.Thermostat_backgroundColor,mBackgroundColor);
    mBackgroundColorHeat=a.getColor(R.styleable.Thermostat_backgroundColorHeat,mBackgroundColorHeat);
    thumbsColor=a.getColor(R.styleable.Thermostat_thumbsColor,thumbsColor);
    thumbsGlowColor=a.getColor(R.styleable.Thermostat_thumbsGlowColor,thumbsGlowColor);
    controlsColor=a.getColor(R.styleable.Thermostat_controlsColor,controlsColor);
    mEnableBlur=a.getBoolean(R.styleable.Thermostat_enableBlur,mEnableBlur);
    mTempMin=a.getInteger(R.styleable.Thermostat_tempMin,mTempMin);
    mTempMax=a.getInteger(R.styleable.Thermostat_tempMax,mTempMax);
    CharSequence text=a.getText(R.styleable.Thermostat_idleText);
    if (text != null) {
      mIdleText=text;
    }
    text=a.getText(R.styleable.Thermostat_coolingText);
    if (text != null) {
      mCoolingText=text;
    }
    text=a.getText(R.styleable.Thermostat_heatingText);
    if (text != null) {
      mHeatingText=text;
    }
    a.recycle();
  }
  mProgress=(mProgress > mMax) ? mMax : mProgress;
  mProgress=(mProgress < 0) ? 0 : mProgress;
  mSweepAngle=(mSweepAngle > 360) ? 360 : mSweepAngle;
  mSweepAngle=(mSweepAngle < 0) ? 0 : mSweepAngle;
  mStartAngle=(mStartAngle > 360) ? 0 : mStartAngle;
  mStartAngle=(mStartAngle < 0) ? 0 : mStartAngle;
  mOnInterval=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,2.5f,getResources().getDisplayMetrics());
  mOffInterval=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,2.5f,getResources().getDisplayMetrics());
  float outer_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,5.56f,getResources().getDisplayMetrics());
  float inner_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,1.33f,getResources().getDisplayMetrics());
  float text_inner_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,0.66f,getResources().getDisplayMetrics());
  float text_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,3.33f,getResources().getDisplayMetrics());
  float text_size=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,20f,getResources().getDisplayMetrics());
  float text_size_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,22f,getResources().getDisplayMetrics());
  float temp_text_size=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,20f,getResources().getDisplayMetrics());
  mTempDist=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,4f,getResources().getDisplayMetrics());
  float target_text_size=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,50f,getResources().getDisplayMetrics());
  float target_text_size_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,54f,getResources().getDisplayMetrics());
  float target_text_inner_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,1.5f,getResources().getDisplayMetrics());
  float target_text_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,4f,getResources().getDisplayMetrics());
  float control_size=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,3f,getResources().getDisplayMetrics());
  float control_size_blur=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,2f,getResources().getDisplayMetrics());
  PathEffect arcEffect=new DashPathEffect(new float[]{mOnInterval,mOffInterval},0);
  Typeface tf=FontUtils.getTypeface(context,FontType.RAJDHANI_BOLD,false);
  mBackgroundPaint=new Paint();
  mBackgroundPaint.setAntiAlias(true);
  mBackgroundPaint.setStyle(Paint.Style.FILL);
  mArcPaint=new Paint();
  mArcPaint.setAntiAlias(true);
  mArcPaint.setStyle(Paint.Style.STROKE);
  mArcPaint.setPathEffect(arcEffect);
  mArcPaint.setStrokeWidth(mArcWidth);
  mProgressPaint=new Paint();
  mProgressPaint.setAntiAlias(true);
  mProgressPaint.setStyle(Paint.Style.STROKE);
  mProgressPaint.setPathEffect(arcEffect);
  mProgressPaint.setStrokeWidth(mProgressWidth);
  if (mRoundedEdges) {
    mArcPaint.setStrokeCap(Paint.Cap.ROUND);
    mProgressPaint.setStrokeCap(Paint.Cap.ROUND);
  }
  mProgressThumbPaint=new Paint();
  mProgressThumbPaint.setColor(thumbsColor);
  mProgressThumbPaint.setAntiAlias(true);
  mProgressThumbPaint.setStyle(Paint.Style.STROKE);
  mProgressThumbPaint.setStrokeWidth(mProgressWidth);
  mTargetThumbPaint=new Paint();
  mTargetThumbPaint.setColor(thumbsColor);
  mTargetThumbPaint.setAntiAlias(true);
  mTargetThumbPaint.setStyle(Paint.Style.STROKE);
  mTargetThumbPaint.setStrokeWidth(mProgressWidth * 1.4f);
  mTextPaint=new Paint();
  mTextPaint.setColor(thumbsColor);
  mTextPaint.setAntiAlias(true);
  mTextPaint.setTextSize(text_size);
  mTextPaint.setTypeface(tf);
  mTextPaint.setTextAlign(Align.CENTER);
  mTargetTextPaint=new Paint();
  mTargetTextPaint.setColor(thumbsColor);
  mTargetTextPaint.setAntiAlias(true);
  mTargetTextPaint.setTextSize(target_text_size);
  mTargetTextPaint.setTypeface(tf);
  mTargetTextPaint.setTextAlign(Align.CENTER);
  mTempTextPaint=new Paint();
  mTempTextPaint.setColor(thumbsColor);
  mTempTextPaint.setAntiAlias(true);
  mTempTextPaint.setTextSize(temp_text_size);
  mTempTextPaint.setTypeface(tf);
  mTempTextPaint.setTextAlign(Align.CENTER);
  mControlPaint=new Paint();
  mControlPaint.setAntiAlias(true);
  mControlPaint.setColor(controlsColor);
  mControlPaint.setStyle(Paint.Style.STROKE);
  mControlPaint.setStrokeWidth(control_size);
  mControlPaint.setStrokeCap(Paint.Cap.ROUND);
  if (mEnableBlur) {
    mArcPaint.setMaskFilter(new BlurMaskFilter(inner_blur,Blur.NORMAL));
    mProgressPaint.setMaskFilter(new BlurMaskFilter(inner_blur,Blur.NORMAL));
    mProgressThumbPaint.setMaskFilter(new BlurMaskFilter(inner_blur,Blur.NORMAL));
    mTargetThumbPaint.setMaskFilter(new BlurMaskFilter(inner_blur,Blur.NORMAL));
    mTextPaint.setMaskFilter(new BlurMaskFilter(text_inner_blur,Blur.NORMAL));
    mTargetTextPaint.setMaskFilter(new BlurMaskFilter(target_text_inner_blur,Blur.NORMAL));
    mTempTextPaint.setMaskFilter(new BlurMaskFilter(text_inner_blur,Blur.NORMAL));
    mControlPaint.setMaskFilter(new BlurMaskFilter(inner_blur,Blur.NORMAL));
    mArcPaintGlow=new Paint();
    mArcPaintGlow.set(mArcPaint);
    mArcPaintGlow.setStrokeWidth(mArcWidth * 1.2f);
    mArcPaintGlow.setMaskFilter(new BlurMaskFilter(outer_blur,Blur.NORMAL));
    mProgressPaintGlow=new Paint();
    mProgressPaintGlow.set(mProgressPaint);
    mProgressPaintGlow.setStrokeWidth(mProgressWidth * 1.2f);
    mProgressPaintGlow.setMaskFilter(new BlurMaskFilter(outer_blur,Blur.NORMAL));
    mProgressThumbPaintGlow=new Paint();
    mProgressThumbPaintGlow.set(mProgressThumbPaint);
    mProgressThumbPaintGlow.setColor(thumbsGlowColor);
    mProgressThumbPaintGlow.setStrokeWidth(mProgressWidth * 1.2f);
    mProgressThumbPaintGlow.setMaskFilter(new BlurMaskFilter(outer_blur,Blur.NORMAL));
    mTargetThumbPaintGlow=new Paint();
    mTargetThumbPaintGlow.set(mTargetThumbPaint);
    mTargetThumbPaintGlow.setColor(thumbsGlowColor);
    mTargetThumbPaintGlow.setStrokeWidth(mProgressWidth * 1.4f * 1.2f);
    mTargetThumbPaintGlow.setMaskFilter(new BlurMaskFilter(outer_blur,Blur.NORMAL));
    mTextPaintGlow=new Paint();
    mTextPaintGlow.set(mTextPaint);
    mTextPaintGlow.setTextSize(text_size_blur);
    mTextPaintGlow.setColor(thumbsGlowColor);
    mTextPaintGlow.setMaskFilter(new BlurMaskFilter(text_blur,Blur.NORMAL));
    mTargetTextPaintGlow=new Paint();
    mTargetTextPaintGlow.set(mTargetTextPaint);
    mTargetTextPaintGlow.setTextSize(target_text_size_blur);
    mTargetTextPaintGlow.setColor(thumbsGlowColor);
    mTargetTextPaintGlow.setMaskFilter(new BlurMaskFilter(target_text_blur,Blur.NORMAL));
    mTempTextPaintGlow=new Paint();
    mTempTextPaintGlow.set(mTempTextPaint);
    mTempTextPaintGlow.setColor(thumbsGlowColor);
    mTempTextPaintGlow.setMaskFilter(new BlurMaskFilter(text_blur,Blur.NORMAL));
    mControlPaintGlow=new Paint();
    mControlPaintGlow.set(mControlPaint);
    mControlPaintGlow.setStrokeWidth(control_size * 1.2f);
    mControlPaintGlow.setMaskFilter(new BlurMaskFilter(control_size_blur,Blur.NORMAL));
  }
  updateColors();
}
