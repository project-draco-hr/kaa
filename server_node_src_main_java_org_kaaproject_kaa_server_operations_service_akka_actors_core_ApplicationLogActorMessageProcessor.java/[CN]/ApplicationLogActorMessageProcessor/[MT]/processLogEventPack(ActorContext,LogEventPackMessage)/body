{
  LOG.debug("[{}] Processing log event pack with {} appenders",applicationToken,logAppenders.size());
  LogSchema logSchema=fetchLogSchema(message);
  List<LogAppender> required=filterAppenders(logSchema.getVersion(),true);
  List<LogAppender> optional=filterAppenders(logSchema.getVersion(),false);
  if (required.size() > 0 || optional.size() > 0) {
    for (    LogAppender logAppender : optional) {
      logAppender.doAppend(message.getLogEventPack(),voidCallback);
    }
    LogDeliveryCallback callback;
    if (required.size() > 1) {
      callback=new MultiLogDeliveryCallback(message.getOriginator(),message.getRequestId(),required.size());
    }
 else {
      callback=new SingleLogDeliveryCallback(message.getOriginator(),message.getRequestId());
    }
    try {
      for (      LogAppender logAppender : required) {
        logAppender.doAppend(message.getLogEventPack(),callback);
      }
    }
 catch (    Exception e) {
      LOG.warn("Error during execution of appender(s)",e);
      sendErrorMessageToEndpoint(message,LogDeliveryErrorCode.APPENDER_INTERNAL_ERROR);
    }
  }
 else {
    sendErrorMessageToEndpoint(message,LogDeliveryErrorCode.NO_APPENDERS_CONFIGURED);
  }
}
