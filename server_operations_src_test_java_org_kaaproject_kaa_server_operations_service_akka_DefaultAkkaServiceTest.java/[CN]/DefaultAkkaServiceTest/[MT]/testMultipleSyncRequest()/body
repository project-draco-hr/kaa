{
  ChannelHandlerContext channelContextMock=Mockito.mock(ChannelHandlerContext.class);
  AbstractOperationsCommand commandMock=Mockito.mock(AbstractOperationsCommand.class);
  SyncRequest request=new SyncRequest();
  SyncRequestMetaData md=new SyncRequestMetaData();
  md.setApplicationToken(APP_TOKEN);
  md.setEndpointPublicKeyHash(ByteBuffer.wrap(ENDPOINT_PUBLIC_KEY_HASH.getBytes()));
  request.setSyncRequestMetaData(md);
  SyncResponseHolder holder=new SyncResponseHolder(new SyncResponse());
  Mockito.when(commandMock.decode()).thenReturn(request);
  Mockito.when(operationsService.sync(request)).thenReturn(holder);
  Assert.assertNotNull(akkaService.getActorSystem());
  NettyEncodedRequestMessage message1=new NettyEncodedRequestMessage("testUUID1",channelContextMock,commandMock,ChannelType.HTTP);
  NettyEncodedRequestMessage message2=new NettyEncodedRequestMessage("testUUID2",channelContextMock,commandMock,ChannelType.HTTP);
  akkaService.process(message1);
  akkaService.process(message2);
  Mockito.verify(operationsService,Mockito.timeout(TIMEOUT).atLeast(2)).sync(request);
  Mockito.verify(commandMock,Mockito.timeout(TIMEOUT).atLeast(2)).encode(Mockito.any(SyncResponse.class));
}
