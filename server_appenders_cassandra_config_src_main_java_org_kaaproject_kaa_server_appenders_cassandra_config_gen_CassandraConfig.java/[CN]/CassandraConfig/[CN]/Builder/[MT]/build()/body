{
  try {
    CassandraConfig record=new CassandraConfig();
    record.cassandraServers=fieldSetFlags()[0] ? this.cassandraServers : (java.util.List<org.kaaproject.kaa.server.appenders.cassandra.config.gen.CassandraServer>)defaultValue(fields()[0]);
    record.keySpace=fieldSetFlags()[1] ? this.keySpace : (java.lang.String)defaultValue(fields()[1]);
    record.CassandraCredential=fieldSetFlags()[2] ? this.CassandraCredential : (org.kaaproject.kaa.server.appenders.cassandra.config.gen.CassandraCredential)defaultValue(fields()[2]);
    record.CassandraBatchType=fieldSetFlags()[3] ? this.CassandraBatchType : (org.kaaproject.kaa.server.appenders.cassandra.config.gen.CassandraBatchType)defaultValue(fields()[3]);
    record.CassandraSocketOption=fieldSetFlags()[4] ? this.CassandraSocketOption : (org.kaaproject.kaa.server.appenders.cassandra.config.gen.CassandraSocketOption)defaultValue(fields()[4]);
    record.CassandraWriteConsistencyLevel=fieldSetFlags()[5] ? this.CassandraWriteConsistencyLevel : (org.kaaproject.kaa.server.appenders.cassandra.config.gen.CassandraWriteConsistencyLevel)defaultValue(fields()[5]);
    record.CassandraCompression=fieldSetFlags()[6] ? this.CassandraCompression : (org.kaaproject.kaa.server.appenders.cassandra.config.gen.CassandraCompression)defaultValue(fields()[6]);
    record.CassandraExecuteRequestType=fieldSetFlags()[7] ? this.CassandraExecuteRequestType : (org.kaaproject.kaa.server.appenders.cassandra.config.gen.CassandraExecuteRequestType)defaultValue(fields()[7]);
    return record;
  }
 catch (  Exception e) {
    throw new org.apache.avro.AvroRuntimeException(e);
  }
}
