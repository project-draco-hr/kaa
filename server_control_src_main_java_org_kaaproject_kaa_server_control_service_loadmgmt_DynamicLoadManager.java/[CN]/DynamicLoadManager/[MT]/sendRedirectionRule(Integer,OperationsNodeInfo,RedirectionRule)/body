{
  LOG.trace("Set redirection rule for Operations server: {}; Thrift: {}:{}",accessPointId,nodeInfo.getConnectionInfo().getThriftHost().toString(),nodeInfo.getConnectionInfo().getThriftPort());
  try {
    ThriftClient<OperationsThriftService.Client> client=new ThriftClient<OperationsThriftService.Client>(nodeInfo.getConnectionInfo().getThriftHost().toString(),nodeInfo.getConnectionInfo().getThriftPort(),OperationsThriftService.Client.class);
    client.setThriftActivity(new ThriftActivity<OperationsThriftService.Client>(){
      @Override public void isSuccess(      boolean activitySuccess){
        LOG.info("Operations server {} redirection rule set {}",accessPointId,activitySuccess ? "successfully" : "unsuccessfully");
      }
      @Override public void doInTemplate(      org.kaaproject.kaa.server.common.thrift.gen.operations.OperationsThriftService.Client t){
        try {
          t.setRedirectionRule(rule);
          LOG.info("Operations {} set redirection rule: {} <> {}",accessPointId,rule.getAccessPointId(),rule.getRedirectionProbability());
        }
 catch (        TException e) {
          LOG.error(MessageFormat.format("Operations server {0} set redirection rule failed",accessPointId),e);
        }
      }
    }
);
    ThriftExecutor.execute(client);
  }
 catch (  NoSuchMethodException|SecurityException|InstantiationException|IllegalAccessException|IllegalArgumentException|InvocationTargetException e) {
    LOG.error(MessageFormat.format("Operations server {0} set redirection rule failed",accessPointId),e);
  }
}
