{
  LOG.trace("Starting Bootstrap service..." + propertiesToString());
  try {
    LOG.trace("Bootstrap Service ZK started");
    if (operationsServerListService == null) {
      throw new Exception("Error initializing OperationsServerListService()");
    }
    transportService.lookupAndInit();
    final CountDownLatch thriftStartupLatch=new CountDownLatch(1);
    final CountDownLatch thriftShutdownLatch=new CountDownLatch(1);
    startThrift(thriftStartupLatch,thriftShutdownLatch);
    try {
      thriftStartupLatch.await();
    }
 catch (    InterruptedException e) {
      LOG.error("Interrupted while waiting for thrift to start...",e);
    }
    if (zkEnabled) {
      startZK();
    }
    operationsServerListService.init(bootstrapNode);
    transportService.addListener(new TransportUpdateListener(){
      @Override public void onTransportsStarted(      List<TransportMetaData> mdList){
        BootstrapNodeInfo info=bootstrapNode.getNodeInfo();
        info.setTransports(mdList);
        try {
          bootstrapNode.updateNodeData(info);
        }
 catch (        IOException e) {
          LOG.error("Failed to update bootstrap node info",e);
        }
      }
    }
);
    transportService.start();
    try {
      thriftShutdownLatch.await();
    }
 catch (    InterruptedException e) {
      LOG.error("Interrupted while waiting for thrift to stop...",e);
    }
  }
 catch (  Exception e) {
    LOG.error("Error starting Bootstrap Service",e);
  }
}
