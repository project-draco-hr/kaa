{
  Runnable thriftRunnable=new Runnable(){
    @Override public void run(){
      LOG.info("Initializing Thrift service for Bootstrap server at {}:{}...",thriftHost,thriftPort);
      try {
        BootstrapThriftService.Processor<BootstrapThriftService.Iface> processor=new BootstrapThriftService.Processor<BootstrapThriftService.Iface>(bootstrapThriftService);
        TServerTransport serverTransport=new TServerSocket(new InetSocketAddress(thriftHost,thriftPort));
        TThreadPoolServer.Args args=new Args(serverTransport).processor(processor);
        args.stopTimeoutVal=3;
        args.stopTimeoutUnit=TimeUnit.SECONDS;
        server=new TThreadPoolServer(args);
        LOG.info("Bootstrap Server Started");
        thriftStartupLatch.countDown();
        server.serve();
        LOG.info("Bootstrap Server Stopped");
        thriftShutdownLatch.countDown();
      }
 catch (      TTransportException e) {
        LOG.error("TTransportException",e);
      }
 finally {
        server=null;
        if (thriftStartupLatch.getCount() > 0) {
          thriftStartupLatch.countDown();
        }
        if (thriftShutdownLatch.getCount() > 0) {
          LOG.info("Thrift Bootstrap Server Stopped.");
          thriftShutdownLatch.countDown();
        }
      }
    }
  }
;
  new Thread(thriftRunnable).start();
}
