{
  ActorRef terminated=message.actor();
  if (terminated instanceof LocalActorRef) {
    LocalActorRef localActor=(LocalActorRef)terminated;
    String name=localActor.path().name();
    EndpointObjectHash endpointHash=endpointActorMap.remove(name);
    if (endpointHash != null) {
      ActorMetaData actorMetaData=endpointSessions.get(endpointHash);
      if (actorMetaData != null && actorMetaData.actorRef.equals(localActor)) {
        endpointSessions.remove(endpointHash);
        LOG.debug("[{}] removed endpoint: {}",applicationToken,localActor);
      }
    }
 else     if (topicSessions.remove(name) != null) {
      LOG.debug("[{}] removed topic: {}",applicationToken,localActor);
    }
 else     if (logsSessions.remove(name) != null) {
      LOG.debug("[{}] removed log: {}",applicationToken,localActor);
      applicationLogActor=getOrCreateLogActor(name);
      LOG.debug("[{}] created log: {}",applicationToken,applicationLogActor);
    }
 else     if (userVerifierSessions.remove(name) != null) {
      LOG.debug("[{}] removed log: {}",applicationToken,localActor);
      userVerifierActor=getOrCreateUserVerifierActor(name);
      LOG.debug("[{}] created log: {}",applicationToken,applicationLogActor);
    }
  }
 else {
    LOG.warn("remove commands for remote actors are not supported yet!");
  }
}
