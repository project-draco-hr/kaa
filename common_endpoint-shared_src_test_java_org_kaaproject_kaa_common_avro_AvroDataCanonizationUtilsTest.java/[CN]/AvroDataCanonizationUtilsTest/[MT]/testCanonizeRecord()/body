{
  Schema arrayASchema=Schema.createArray(Schema.create(Type.INT));
  Schema arrayBSchema=Schema.createArray(Schema.create(Type.STRING));
  Schema.Field arrayAField=new Schema.Field("arrayA",arrayASchema,"",null);
  Schema.Field arrayBField=new Schema.Field("arrayB",arrayBSchema,"",null);
  Schema recordASchema=Schema.createRecord(Arrays.asList(arrayBField));
  Schema.Field recordAField=new Schema.Field("recordA",recordASchema,"",null);
  Schema rootRecordSchema=Schema.createRecord(Arrays.asList(arrayAField,recordAField));
  GenericRecord mixedRecord=new GenericData.Record(rootRecordSchema);
  GenericArray<Integer> arrayA=new GenericData.Array<Integer>(4,arrayASchema);
  arrayA.add(9);
  arrayA.add(8);
  arrayA.add(2);
  arrayA.add(1);
  mixedRecord.put("arrayA",arrayA);
  GenericRecord recordA=new GenericData.Record(recordASchema);
  GenericArray<String> arrayB=new GenericData.Array<String>(5,arrayBSchema);
  arrayB.add("abc");
  arrayB.add("jkl");
  arrayB.add("ghi");
  arrayB.add("def");
  recordA.put("arrayB",arrayB);
  mixedRecord.put("recordA",recordA);
  AvroDataCanonizationUtils.canonizeRecord(mixedRecord);
  GenericArray<Integer> newArrayA=(GenericArray<Integer>)mixedRecord.get("arrayA");
  for (int i=0; i < newArrayA.size() - 1; ++i) {
    Assert.assertTrue("Items are in bad order",newArrayA.get(i) < newArrayA.get(i + 1));
  }
  GenericArray<String> newArrayB=(GenericArray<String>)((GenericRecord)mixedRecord.get("recordA")).get("arrayB");
  for (int i=0; i < newArrayB.size() - 1; ++i) {
    Assert.assertTrue("Items are in bad order",newArrayB.get(i).compareTo(newArrayB.get(i + 1)) < 0);
  }
}
