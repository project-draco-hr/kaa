{
  LayoutInflater inflater=(LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  mMusicTrackPanelView=inflater.inflate(R.layout.music_track,this);
  LayoutParams lp=new LayoutParams(LayoutParams.MATCH_PARENT,0);
  mMusicTrackPanelView.setLayoutParams(lp);
  mMusicTrackPanelView.setVisibility(View.GONE);
  mMusicTrackPanelHeight=getResources().getDimensionPixelSize(R.dimen.music_track_panel_height);
  mTrackActionButton=(Button)findViewById(R.id.trackActionButton);
  mTrackTitleView=(TextView)findViewById(R.id.trackTitleView);
  mArtistTitleView=(TextView)findViewById(R.id.artistTitleView);
  mTrackProgressView=(SeekBar)findViewById(R.id.trackProgressView);
  mTrackProgressTextView=(TextView)findViewById(R.id.trackProgressTextView);
  setBackgroundColor(getResources().getColor(R.color.device_color_music));
  mTrackActionButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      togglePlayback();
    }
  }
);
  mTrackProgressView.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){
    @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){
      if (mCurrentSong != null) {
        String timeText=TimeUtils.milliSecondsToTimer(progress) + "/" + TimeUtils.milliSecondsToTimer(mCurrentSong.getDuration());
        mTrackProgressTextView.setText(timeText);
        if (fromUser) {
          mDevice.seek(progress);
        }
      }
    }
    @Override public void onStartTrackingTouch(    SeekBar seekBar){
    }
    @Override public void onStopTrackingTouch(    SeekBar seekBar){
    }
  }
);
}
