{
  Schema schema=null;
  String schemaString=null;
  if (schemaSourceType.equals(SCHEMA_SOURCE_REST)) {
    HttpGet getRequest=new HttpGet("/kaaAdmin/rest/api/logSchema/" + key.getApplicationToken() + "/"+ key.getSchemaVersion());
    HttpResponse httpResponse=httpClient.execute(restHost,getRequest,httpContext);
    HttpEntity entity=httpResponse.getEntity();
    if (httpResponse.getStatusLine().getStatusCode() == 200 && entity != null) {
      String content=EntityUtils.toString(entity);
      ObjectMapper mapper=new ObjectMapper();
      LogSchemaDto logSchemaDto=mapper.readValue(content,LogSchemaDto.class);
      schemaString=logSchemaDto.getSchema();
      EntityUtils.consume(entity);
    }
  }
 else {
    String applicationToken=key.getApplicationToken();
    int version=key.getSchemaVersion();
    String separator=System.getProperty("file.separator");
    File schemaFile=new File(schemaLocalRoot + separator + applicationToken+ separator+ "schema_v"+ version);
    if (schemaFile.exists()) {
      schemaString=FileUtils.readFileToString(schemaFile);
    }
  }
  if (schemaString != null) {
    Schema.Parser parser=new Schema.Parser();
    schema=parser.parse(schemaString);
  }
  return schema;
}
