{
  return cacheService.getDelta(deltaKey,new Computable<DeltaCacheKey,DeltaCacheEntry>(){
    @Override public DeltaCacheEntry compute(    DeltaCacheKey deltaKey){
      try {
        LOG.debug("[{}] Calculating delta for {}",endpointId,deltaKey);
        DeltaCacheEntry deltaCache;
        ConfigurationSchemaDto latestConfigurationSchema=cacheService.getConfSchemaByAppAndVersion(deltaKey.getAppConfigVersionKey());
        byte[] mergedConfiguration=getMergedConfiguration(endpointId,deltaKey.getEndpointGroups());
        LOG.trace("[{}] Merged configuration {}",endpointId,new String(mergedConfiguration));
        DeltaCalculator deltaCalculator=deltaCalculatorFactory.createDeltaCalculator(latestConfigurationSchema.getProtocolSchema(),latestConfigurationSchema.getBaseSchema());
        if (deltaKey.getEndpointConfHash() == null) {
          deltaCache=buildResyncDelta(endpointId,deltaCalculator,mergedConfiguration);
        }
 else {
          EndpointConfigurationDto endpointConfiguration=cacheService.getConfByHash(deltaKey.getEndpointConfHash());
          deltaCache=calculateDelta(endpointId,deltaCalculator,endpointConfiguration,mergedConfiguration);
        }
        if (cacheService.getConfByHash(deltaCache.getHash()) == null) {
          EndpointConfigurationDto newConfiguration=new EndpointConfigurationDto();
          newConfiguration.setConfiguration(deltaCache.getConfiguration());
          newConfiguration.setConfigurationHash(deltaCache.getHash().getData());
          cacheService.putConfiguration(deltaCache.getHash(),newConfiguration);
        }
        LOG.debug("[{}] Configuration hash for {} is {}",endpointId,deltaKey,MessageEncoderDecoder.bytesToHex(deltaCache.getHash().getData()));
        return deltaCache;
      }
 catch (      GetDeltaException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
}
