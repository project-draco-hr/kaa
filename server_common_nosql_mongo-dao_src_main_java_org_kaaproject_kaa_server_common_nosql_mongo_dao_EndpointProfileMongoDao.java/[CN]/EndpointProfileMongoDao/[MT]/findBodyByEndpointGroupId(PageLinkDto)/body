{
  LOG.debug("Find endpoint profiles body by endpoint group id [{}] ",pageLink.getEndpointGroupId());
  EndpointProfilesBodyDto endpointProfilesBodyDto=new EndpointProfilesBodyDto();
  List<EndpointProfileBodyDto> profilesBody=new ArrayList<>();
  int lim=Integer.valueOf(pageLink.getLimit());
  int offs=Integer.valueOf(pageLink.getOffset());
  Query query=Query.query(new Criteria().orOperator(where(EP_GROUP_STATE + "." + ENDPOINT_GROUP_ID).is(pageLink.getEndpointGroupId()),where(EP_GROUP_STATE + "." + ENDPOINT_GROUP_ID).is(pageLink.getEndpointGroupId())));
  query.skip(offs).limit(lim + 1);
  query.fields().include(DaoConstants.PROFILE).include(EP_SERVER_PROFILE_PROPERTY).include(EP_ENDPOINT_KEY_HASH).include(EP_APPLICATION_ID).include(EP_PROFILE_VERSION).include(EP_SERVER_PROFILE_VERSION_PROPERTY);
  List<MongoEndpointProfile> mongoEndpointProfileList=mongoTemplate.find(query,getDocumentClass());
  if (mongoEndpointProfileList.size() == (lim + 1)) {
    String offset=Integer.toString(lim + offs);
    pageLink.setOffset(offset);
    mongoEndpointProfileList.remove(lim);
  }
 else {
    pageLink.setNext(DaoConstants.LAST_PAGE_MESSAGE);
  }
  for (  MongoEndpointProfile ep : mongoEndpointProfileList) {
    EndpointProfileBodyDto endpointProfileBodyDto=new EndpointProfileBodyDto(ep.getEndpointKeyHash(),ep.getProfileAsString(),ep.getServerProfile(),ep.getProfileVersion(),ep.getServerProfileVersion(),ep.getApplicationId());
    endpointProfileBodyDto.setEndpointKeyHash(ep.getEndpointKeyHash());
    profilesBody.add(endpointProfileBodyDto);
  }
  endpointProfilesBodyDto.setPageLinkDto(pageLink);
  endpointProfilesBodyDto.setEndpointProfilesBody(profilesBody);
  return endpointProfilesBodyDto;
}
