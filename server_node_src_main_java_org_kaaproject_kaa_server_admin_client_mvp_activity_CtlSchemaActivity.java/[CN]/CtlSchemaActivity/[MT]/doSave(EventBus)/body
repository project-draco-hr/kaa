{
  onSave();
  editEntity(entity,new BusyAsyncCallback<CtlSchemaFormDto>(){
    public void onSuccessImpl(    CtlSchemaFormDto result){
      if (!create) {
        if (place.getScope() == CTLSchemaScopeDto.APPLICATION) {
          goTo(new CtlSchemaPlace(place.getMetaInfoId(),place.getVersion(),place.getScope(),place.getApplicationId(),true,false));
        }
 else         if (place.getScope() == CTLSchemaScopeDto.TENANT) {
          goTo(new CtlSchemaPlace(place.getMetaInfoId(),place.getVersion(),place.getScope(),place.getEcfId(),place.getEcfVersionId(),place.getEcfVersion(),true,false));
        }
      }
 else       if (place.getSchemaType() != null) {
        if (place.getSchemaType() == SchemaType.ENDPOINT_PROFILE) {
          goTo(new ProfileSchemasPlace(place.getApplicationId()));
        }
 else         if (place.getSchemaType() == SchemaType.CONFIGURATION) {
          goTo(new ConfigurationSchemasPlace(place.getApplicationId()));
        }
 else         if (place.getSchemaType() == SchemaType.SERVER_PROFILE) {
          goTo(new ServerProfileSchemasPlace(place.getApplicationId()));
        }
 else         if (place.getSchemaType() == SchemaType.NOTIFICATION) {
          goTo(new NotificationSchemasPlace(place.getApplicationId()));
        }
 else         if (place.getSchemaType() == SchemaType.LOG_SCHEMA) {
          goTo(new LogSchemasPlace(place.getApplicationId()));
        }
 else         if (place.getSchemaType() == SchemaType.EVENT_CLASS && place.getPreviousPlace() != null) {
          EventClassPlace eventClassPlace=new EventClassPlace(place.getEcfId(),place.getEcfVersionId(),place.getEcfVersion(),"");
          eventClassPlace.setCtlSchemaId(ctlSchemaID);
          eventClassPlace.setNameEC(nameEC);
          goTo(eventClassPlace);
        }
      }
 else       if (place.getPreviousPlace() != null) {
        goTo(place.getPreviousPlace());
      }
    }
    public void onFailureImpl(    Throwable caught){
      Utils.handleException(caught,detailsView);
    }
  }
);
}
