{
  FlexTable dateTable=new FlexTable();
  FlexTable userTable=new FlexTable();
  dateTable.getColumnFormatter().setWidth(0,"200px");
  dateTable.getColumnFormatter().setWidth(1,"200px");
  userTable.getColumnFormatter().setWidth(0,"200px");
  userTable.getColumnFormatter().setWidth(1,"200px");
  dateTimeCreatedLabel=new Label(Utils.constants.dateTimeCreated());
  createdDateTime=new KaaAdminSizedTextBox(-1,false,false);
  createdDateTime.setWidth("100%");
  dateTable.setWidget(0,0,dateTimeCreatedLabel);
  dateTable.setWidget(0,1,createdDateTime);
  dateTimeModifiedLabel=new Label(Utils.constants.dateTimeModified());
  modifiedDateTime=new KaaAdminSizedTextBox(-1,false,false);
  modifiedDateTime.setWidth("100%");
  dateTable.setWidget(1,0,dateTimeModifiedLabel);
  dateTable.setWidget(1,1,modifiedDateTime);
  dateTimeActivatedLabel=new Label(Utils.constants.dateTimeActivated());
  activatedDateTime=new KaaAdminSizedTextBox(-1,false,false);
  activatedDateTime.setWidth("100%");
  dateTable.setWidget(2,0,dateTimeActivatedLabel);
  dateTable.setWidget(2,1,activatedDateTime);
  dateTimeDeactivatedLabel=new Label(Utils.constants.dateTimeDectivated());
  deactivatedDateTime=new KaaAdminSizedTextBox(-1,false,false);
  deactivatedDateTime.setWidth("100%");
  dateTable.setWidget(3,0,dateTimeDeactivatedLabel);
  dateTable.setWidget(3,1,deactivatedDateTime);
  authorLabel=new Label(Utils.constants.author());
  createdUsername=new KaaAdminSizedTextBox(-1,false,false);
  createdUsername.setWidth("100%");
  userTable.setWidget(0,0,authorLabel);
  userTable.setWidget(0,1,createdUsername);
  modifiedByLabel=new Label(Utils.constants.lastModifiedBy());
  modifiedUsername=new KaaAdminSizedTextBox(-1,false,false);
  modifiedUsername.setWidth("100%");
  userTable.setWidget(1,0,modifiedByLabel);
  userTable.setWidget(1,1,modifiedUsername);
  activatedByLabel=new Label(Utils.constants.activatedBy());
  activatedUsername=new KaaAdminSizedTextBox(-1,false,false);
  activatedUsername.setWidth("100%");
  userTable.setWidget(2,0,activatedByLabel);
  userTable.setWidget(2,1,activatedUsername);
  deactivatedByLabel=new Label(Utils.constants.deactivatedBy());
  deactivatedUsername=new KaaAdminSizedTextBox(-1,false,false);
  deactivatedUsername.setWidth("100%");
  userTable.setWidget(3,0,deactivatedByLabel);
  userTable.setWidget(3,1,deactivatedUsername);
  setWidget(0,0,dateTable);
  setWidget(0,1,userTable);
  FlexTable detailsTable=new FlexTable();
  setWidget(1,0,detailsTable);
  getFlexCellFormatter().setColSpan(1,0,2);
  detailsTable.getColumnFormatter().setWidth(0,"200px");
  detailsTable.getColumnFormatter().setWidth(1,"300px");
  description=new SizedTextArea(1024);
  description.setWidth("500px");
  description.getTextArea().getElement().getStyle().setPropertyPx("minHeight",100);
  Label descriptionLabel=new Label(Utils.constants.description());
  detailsTable.setWidget(0,0,descriptionLabel);
  detailsTable.setWidget(0,1,description);
  detailsTable.getCellFormatter().setVerticalAlignment(0,0,HasVerticalAlignment.ALIGN_TOP);
  bodyLabel=new Label(Utils.constants.body());
  detailsTable.setWidget(1,0,bodyLabel);
  body=new SizedTextArea(524288);
  body.setWidth("500px");
  body.getTextArea().getElement().getStyle().setPropertyPx("minHeight",200);
  detailsTable.setWidget(1,1,body);
  detailsTable.getCellFormatter().setVerticalAlignment(1,0,HasVerticalAlignment.ALIGN_TOP);
  HorizontalPanel buttonsPanel=new HorizontalPanel();
  buttonsPanel.setSpacing(5);
  detailsTable.setWidget(2,0,buttonsPanel);
  detailsTable.getCellFormatter().setHorizontalAlignment(2,0,HasHorizontalAlignment.ALIGN_RIGHT);
  detailsTable.getFlexCellFormatter().setColSpan(2,0,2);
  saveButton=new Button(Utils.constants.save());
  activateButton=new Button(Utils.constants.activate());
  deactivateButton=new Button(Utils.constants.deactivate());
  buttonsPanel.add(saveButton);
  buttonsPanel.add(activateButton);
  buttonsPanel.add(deactivateButton);
  description.setFocus(true);
  saveButton.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      updateSaveButton(false,false);
    }
  }
);
}
