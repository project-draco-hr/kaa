{
  closeConnection();
  if (connectivityChecker != null && !connectivityChecker.checkConnectivity()) {
    LOG.warn("Loss of connectivity detected");
    FailoverDecision decision=failoverManager.onFailover(FailoverStatus.NO_CONNECTIVITY);
switch (decision.getAction()) {
case NOOP:
      LOG.warn("No operation is performed according to failover strategy decision");
    break;
case RETRY:
  long retryPeriod=decision.getRetryPeriod();
synchronized (this) {
  if (!isOpenConnectionScheduled) {
    LOG.warn("Attempt to reconnect will be made in {} ms " + "according to failover strategy decision",retryPeriod);
    executor.schedule(openConnectionTask,retryPeriod,TimeUnit.MILLISECONDS);
    isOpenConnectionScheduled=true;
  }
 else {
    LOG.info("Reconnect is already scheduled, ignoring the call");
  }
}
break;
case STOP_APP:
LOG.warn("Stopping application according to failover strategy decision!");
System.exit(EXIT_FAILURE);
}
return;
}
failoverManager.onServerFailed(currentServer);
}
