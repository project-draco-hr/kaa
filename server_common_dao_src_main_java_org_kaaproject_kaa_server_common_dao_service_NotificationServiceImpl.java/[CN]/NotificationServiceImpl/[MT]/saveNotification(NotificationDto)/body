{
  validateObject(dto,"Can't save notification. Invalid notification object");
  dto.setId(null);
  UpdateNotificationDto<NotificationDto> updateNotificationDto=null;
  String schemaId=dto.getSchemaId();
  String topicId=dto.getTopicId();
  if (isNotBlank(schemaId) && isNotBlank(topicId)) {
    NotificationSchema schema=notificationSchemaDao.findById(schemaId);
    if (schema != null) {
      dto.setNfVersion(schema.getVersion());
      dto.setApplicationId(schema.getApplicationId());
      dto.setType(schema.getType());
    }
 else {
      throw new DatabaseProcessingException("Can't find notification schema by id " + schemaId);
    }
    try {
      dto.setBody(serializeNotificationBody(dto,schema));
    }
 catch (    IOException e) {
      throw new DatabaseProcessingException("Can't serialize notification body using schema: " + schemaId);
    }
    long currentTime=new GregorianCalendar(TimeZone.getTimeZone("UTC")).getTimeInMillis();
    Date expiredAt=dto.getExpiredAt();
    dto.setExpiredAt(expiredAt != null ? expiredAt : new Date(currentTime + TTL));
    dto.setLastTimeModify(new Date(currentTime));
    NotificationDto notificationDto=saveNotificationAndIncTopicSecNum(dto);
    if (notificationDto != null) {
      updateNotificationDto=new UpdateNotificationDto<NotificationDto>();
      updateNotificationDto.setAppId(notificationDto.getApplicationId());
      updateNotificationDto.setTopicId(topicId);
      updateNotificationDto.setPayload(notificationDto);
    }
    return updateNotificationDto;
  }
 else {
    throw new IncorrectParameterException("Incorrect notification object notification schema id is empty");
  }
}
