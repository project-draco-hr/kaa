{
  TwitterMessage message=new TwitterMessage(messageSrc,author,keywords);
  List<TwitterMessageToken> tokens=message.toTokens();
  int width;
  if (DEFAULT_FILE_NAME.equals(fileName)) {
    if (defaultMessageWidth == 0) {
      defaultMessageWidth=PPMFactory.createAndSave(fileName,tokens,toRGB(configuration.getBackgroundColor()));
    }
    width=defaultMessageWidth;
  }
 else {
    width=PPMFactory.createAndSave(fileName,tokens,toRGB(configuration.getBackgroundColor()));
  }
  if (displayProcess != null) {
    displayProcess.destroy();
  }
  displayProcess=Runtime.getRuntime().exec(LED_MATRIX_COMMAND + " " + configuration.getScrollSpeed()+ " "+ fileName);
  Thread loggintThread=new Thread(new Runnable(){
    @Override public void run(){
      try {
        String line;
        BufferedReader bri=new BufferedReader(new InputStreamReader(displayProcess.getInputStream()));
        BufferedReader bre=new BufferedReader(new InputStreamReader(displayProcess.getErrorStream()));
        while ((line=bri.readLine()) != null) {
          LOG.info("Matrix output: {}",line);
        }
        bri.close();
        while ((line=bre.readLine()) != null) {
          LOG.info("Matrix error: {}",line);
        }
        bre.close();
      }
 catch (      Exception e) {
        LOG.warn("Failed to monitor process: {}",e.getMessage());
      }
    }
  }
);
  loggintThread.start();
  return width * configuration.getScrollSpeed();
}
