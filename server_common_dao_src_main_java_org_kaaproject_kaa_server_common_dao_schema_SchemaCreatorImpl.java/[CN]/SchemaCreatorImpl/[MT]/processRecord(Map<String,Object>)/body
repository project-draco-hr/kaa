{
  if (root.get("namespace") == null) {
    throw new SchemaCreationException(new StringBuilder().append("Namepsace not found for \"").append((String)root.get("name")).append("\"").toString());
  }
  Boolean addressable=isAddressableValue(root);
  List<Object> fields=(List<Object>)root.get("fields");
  for (  Object fieldIter : fields) {
    Map<String,Object> field=(Map<String,Object>)fieldIter;
    Boolean optional=Boolean.FALSE;
    if (field.get(OPTIONAL_NAME) != null) {
      optional=(Boolean)field.get(OPTIONAL_NAME);
    }
    List<Object> newUnion=new ArrayList<Object>();
    boolean isUnionField=false;
    if (field.get("type") instanceof Map) {
      newUnion.add(field.get("type"));
      Map<String,Object> fieldType=(Map<String,Object>)field.get("type");
      checkIfArray(fieldType,newUnion);
      convert(fieldType);
    }
 else     if (field.get("type") instanceof List) {
      List<Object> oldUnion=(List<Object>)field.get("type");
      for (      Object unionIter : oldUnion) {
        if (unionIter instanceof Map) {
          Map<String,Object> fieldType=(Map<String,Object>)unionIter;
          checkIfArray(fieldType,newUnion);
          convert(fieldType);
        }
      }
      newUnion.addAll(oldUnion);
      isUnionField=true;
    }
 else {
      newUnion.add(field.get("type"));
    }
    if (strategy.isUnchangedSupported()) {
      newUnion.add(getUnchangedType());
    }
    if (optional) {
      strategy.onOptionalField(newUnion);
    }
 else {
      strategy.onMandatoryField(newUnion);
    }
    if (newUnion.size() > 1) {
      field.put("type",newUnion);
    }
  }
  if (addressable) {
    fields.add(getUuidField());
    String fullName=getFullName(root);
    if (!fullName.equals(rootSchemaName)) {
      addressableRecords.add(fullName);
    }
  }
}
