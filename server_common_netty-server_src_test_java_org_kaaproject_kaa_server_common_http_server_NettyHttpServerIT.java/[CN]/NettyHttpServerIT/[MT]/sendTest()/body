{
  HttpTest test=newtest();
  PostParameters params=new PostParameters();
  try {
    params.add(REQUEST_ID,test.id);
    params.add(REQUEST_RANDOM,test.requestIdRandom);
    params.add(REQUEST_DATA,test.requestBody);
  }
 catch (  UnsupportedEncodingException e) {
    fail(e.toString());
  }
  testMessages.put(test.id,test);
  try {
    final HttpTestClient client=new HttpTestClient(params,new HttpActivity(){
      @Override public void httpRequestComplete(      IOException ioe,      Map<String,List<String>> header,      String body){
        assertNull(ioe);
        if (!header.containsKey(REQUEST_ID)) {
          fail(REQUEST_ID + " field not found in HTTP response");
        }
        String id=header.get(REQUEST_ID).get(0);
        assertNotNull(id);
        if (!testMessages.containsKey(id)) {
          fail(REQUEST_ID + " not found in send map");
        }
        HttpTest test=testMessages.get(id);
        if (!header.containsKey(REQUEST_RANDOM)) {
          fail(REQUEST_RANDOM + " field not found in HTTP response");
        }
        test.responseIdRandom=header.get(REQUEST_RANDOM).get(0);
        test.responseReceivedBody=body;
synchronized (sync) {
          testProcessed++;
          logger.info("Test " + id + " complete: "+ testProcessed);
          if (testProcessed >= NUMBER_OF_TESTS) {
            sync.notify();
          }
        }
      }
    }
,CommandTestProcessor.getCommandName());
    executor.execute(client);
  }
 catch (  IOException e) {
    fail(e.toString());
  }
  return test.id;
}
