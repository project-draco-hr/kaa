{
  Timing timing=new Timing();
  OperationsNodeInfo endpointNodeInfo=buildOperationsNodeInfo();
  BootstrapNodeInfo bootstrapNodeInfo=buildBootstrapNodeInfo();
  BootstrapNode bootstrapNode=new BootstrapNode(bootstrapNodeInfo,zkClient);
  OperationsNodeListener mockListener=mock(OperationsNodeListener.class);
  bootstrapNode.addListener(mockListener);
  bootstrapNode.start();
  OperationsNode endpointNode=new OperationsNode(endpointNodeInfo,zkClient);
  endpointNode.start();
  timing.sleepABit();
  verify(mockListener).onNodeAdded(endpointNodeInfo);
  assertNotNull(bootstrapNode.getCurrentOperationServerNodes());
  assertEquals(1,bootstrapNode.getCurrentOperationServerNodes().size());
  OperationsNodeInfo testNodeInfo=bootstrapNode.getCurrentOperationServerNodes().get(0);
  assertNotNull(testNodeInfo.getTransports());
  assertEquals(2,testNodeInfo.getTransports().size());
  assertNotNull(testNodeInfo.getTransports().get(0));
  assertEquals(BootstrapNodeIT.HTTP_ID,testNodeInfo.getTransports().get(0).getId().intValue());
  assertEquals(BootstrapNodeIT.TCP_ID,testNodeInfo.getTransports().get(1).getId().intValue());
  assertNotNull(testNodeInfo.getTransports().get(0).getConnectionInfo());
  endpointNodeInfo.getTransports().get(0).setId(NEW_HTTP_ID);
  endpointNode.updateNodeData(endpointNodeInfo);
  timing.sleepABit();
  verify(mockListener).onNodeUpdated(endpointNodeInfo);
  assertNotNull(bootstrapNode.getCurrentOperationServerNodes());
  assertEquals(1,bootstrapNode.getCurrentOperationServerNodes().size());
  assertNotNull(bootstrapNode.getCurrentOperationServerNodes().get(0));
  testNodeInfo=bootstrapNode.getCurrentOperationServerNodes().get(0);
  assertNotNull(testNodeInfo.getTransports());
  assertEquals(NEW_HTTP_ID,testNodeInfo.getTransports().get(0).getId().intValue());
  endpointNode.close();
  timing.sleepABit();
  verify(mockListener).onNodeRemoved(endpointNodeInfo);
  Assert.assertTrue(bootstrapNode.removeListener(mockListener));
  Assert.assertFalse(bootstrapNode.removeListener(mockListener));
  bootstrapNode.close();
}
