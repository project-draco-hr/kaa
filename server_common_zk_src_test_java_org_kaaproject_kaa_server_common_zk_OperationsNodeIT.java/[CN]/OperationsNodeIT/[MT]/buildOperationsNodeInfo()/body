{
  OperationsNodeInfo nodeInfo=new OperationsNodeInfo();
  ByteBuffer testKeyData=ByteBuffer.wrap(new byte[]{10,11,12,45,34,23,67,89,66,12});
  nodeInfo.setConnectionInfo(new ConnectionInfo(ENDPOINT_NODE_HOST,1000,testKeyData));
  nodeInfo.setTimeStarted(System.currentTimeMillis());
  List<SupportedChannel> supportedChannels=new ArrayList<>();
  ZkHttpComunicationParameters httpCommunicationParameters=new ZkHttpComunicationParameters(new IpComunicationParameters(ENDPOINT_NODE_HOST,1000));
  BaseStatistics httpStatistics=new BaseStatistics(2,3,1,System.currentTimeMillis());
  ZkHttpStatistics httpChannelStatistics=new ZkHttpStatistics(httpStatistics);
  SupportedChannel channelHttp=new SupportedChannel(new ZkSupportedChannel(ZkChannelType.HTTP,true,httpCommunicationParameters,httpChannelStatistics));
  supportedChannels.add(channelHttp);
  ZkHttpLpComunicationParameters httpLpCommunicationParameters=new ZkHttpLpComunicationParameters(new IpComunicationParameters(ENDPOINT_NODE_HOST,1000));
  BaseStatistics httpLpStatistics=new BaseStatistics(2,3,1,System.currentTimeMillis());
  ZkHttpLpStatistics httpLpChannelStatistics=new ZkHttpLpStatistics(httpLpStatistics);
  SupportedChannel channelHttpLp=new SupportedChannel(new ZkSupportedChannel(ZkChannelType.HTTP_LP,true,httpLpCommunicationParameters,httpLpChannelStatistics));
  supportedChannels.add(channelHttpLp);
  ZkKaaTcpComunicationParameters tcpCommunicationParameters=new ZkKaaTcpComunicationParameters(new IpComunicationParameters(ENDPOINT_NODE_HOST,1000));
  BaseStatistics tcpStatistics=new BaseStatistics(2,3,1,System.currentTimeMillis());
  ZkKaaTcpStatistics tcpChannelStatistics=new ZkKaaTcpStatistics(tcpStatistics);
  SupportedChannel channelTcp=new SupportedChannel(new ZkSupportedChannel(ZkChannelType.KAATCP,true,tcpCommunicationParameters,tcpChannelStatistics));
  supportedChannels.add(channelTcp);
  nodeInfo.setSupportedChannelsArray(supportedChannels);
  return nodeInfo;
}
