{
  ApplicationDto application=createApplication(tenantAdminDto);
  this.loginTenantDeveloper(tenantDeveloperUser);
  CTLSchemaDto saved=this.createCTLSchema(this.ctlRandomFieldType(),CTL_DEFAULT_NAMESPACE,1,tenantDeveloperDto.getTenantId(),application.getId(),null,null);
  final CTLSchemaMetaInfoDto metaInfo=saved.getMetaInfo();
  metaInfo.setVersions(Arrays.asList(1));
  metaInfo.setTenantId(null);
  this.checkForbidden(new TestRestCall(){
    @Override public void executeRestCall() throws Exception {
      client.promoteScopeToTenant(metaInfo);
    }
  }
);
  saved=this.createCTLSchema(this.ctlRandomFieldType(),CTL_DEFAULT_NAMESPACE,1,tenantDeveloperDto.getTenantId(),null,null,null);
  final CTLSchemaMetaInfoDto metaInfo2=saved.getMetaInfo();
  metaInfo2.setVersions(Arrays.asList(1));
  Assert.assertNull(metaInfo2.getApplicationId());
  metaInfo2.setApplicationId(application.getId());
  this.checkRestErrorStatusCode(new TestRestCall(){
    @Override public void executeRestCall() throws Exception {
      client.promoteScopeToTenant(metaInfo2);
    }
  }
,HttpStatus.NOT_FOUND);
  this.loginTenantAdmin(tenantAdminUser);
  saved=this.createCTLSchema(this.ctlRandomFieldType(),CTL_DEFAULT_NAMESPACE,1,tenantAdminDto.getTenantId(),null,null,null);
  final CTLSchemaMetaInfoDto metaInfo3=saved.getMetaInfo();
  metaInfo3.setVersions(Arrays.asList(1));
  Assert.assertNull(metaInfo3.getApplicationId());
  metaInfo3.setApplicationId(application.getId());
  this.checkForbidden(new TestRestCall(){
    @Override public void executeRestCall() throws Exception {
      client.promoteScopeToTenant(metaInfo3);
    }
  }
);
}
