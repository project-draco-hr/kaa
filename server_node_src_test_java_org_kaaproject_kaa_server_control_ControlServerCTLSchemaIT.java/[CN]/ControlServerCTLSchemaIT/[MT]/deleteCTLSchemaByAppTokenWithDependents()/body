{
  this.loginTenantDeveloper(tenantDeveloperUser);
  final CTLSchemaDto dependency=this.createCTLSchema(this.ctlRandomFieldType(),CTL_DEFAULT_NAMESPACE,1,tenantDeveloperDto.getTenantId(),null,null,null);
  Set<FqnVersion> dependencies=new HashSet<>();
  dependencies.add(new FqnVersion(dependency.getMetaInfo().getFqn(),dependency.getVersion()));
  Map<String,String> fields=new HashMap<>();
  fields.put(this.ctlRandomFieldName(),dependency.getMetaInfo().getFqn());
  this.createCTLSchema(this.ctlRandomFieldName(),CTL_DEFAULT_NAMESPACE,1,tenantDeveloperDto.getTenantId(),null,dependencies,fields);
  this.checkBadRequest(new TestRestCall(){
    @Override public void executeRestCall() throws Exception {
      client.deleteCTLSchemaByFqnVersionTenantIdAndApplicationToken(dependency.getMetaInfo().getFqn(),dependency.getVersion(),tenantDeveloperDto.getTenantId(),null);
    }
  }
);
}
