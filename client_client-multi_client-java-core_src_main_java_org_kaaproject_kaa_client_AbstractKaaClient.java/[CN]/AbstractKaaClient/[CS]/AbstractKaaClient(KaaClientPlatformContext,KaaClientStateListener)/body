{
  this.context=context;
  this.stateListener=listener;
  if (context.getProperties() != null) {
    this.properties=context.getProperties();
    this.properties.setBase64(context.getBase64());
  }
 else {
    this.properties=new KaaClientProperties();
    this.properties.setBase64(context.getBase64());
  }
  Map<TransportProtocolId,List<TransportConnectionInfo>> bootstrapServers=this.properties.getBootstrapServers();
  if (bootstrapServers == null || bootstrapServers.isEmpty()) {
    throw new RuntimeException("Unable to obtain list of bootstrap servers.");
  }
  for (  Map.Entry<TransportProtocolId,List<TransportConnectionInfo>> cursor : bootstrapServers.entrySet()) {
    Collections.shuffle(cursor.getValue());
  }
  kaaClientState=new KaaClientPropertiesState(context.createPersistentStorage(),context.getBase64(),this.properties);
  TransportContext transportContext=buildTransportContext(properties,kaaClientState);
  bootstrapManager=buildBootstrapManager(properties,kaaClientState,transportContext);
  channelManager=buildChannelManager(bootstrapManager,bootstrapServers);
  failoverManager=buildFailoverManager(channelManager);
  channelManager.setFailoverManager(failoverManager);
  initializeChannels(channelManager,transportContext);
  bootstrapManager.setChannelManager(channelManager);
  bootstrapManager.setFailoverManager(failoverManager);
  profileManager=buildProfileManager(properties,kaaClientState,transportContext);
  notificationManager=buildNotificationManager(properties,kaaClientState,transportContext);
  eventManager=buildEventManager(properties,kaaClientState,transportContext);
  endpointRegistrationManager=buildRegistrationManager(properties,kaaClientState,transportContext);
  logCollector=buildLogCollector(properties,kaaClientState,transportContext);
  configurationManager=buildConfigurationManager(properties,kaaClientState,transportContext);
  transportContext.getRedirectionTransport().setBootstrapManager(bootstrapManager);
  transportContext.getBootstrapTransport().setBootstrapManager(bootstrapManager);
  transportContext.getProfileTransport().setProfileManager(profileManager);
  transportContext.getEventTransport().setEventManager(eventManager);
  transportContext.getNotificationTransport().setNotificationProcessor(notificationManager);
  transportContext.getConfigurationTransport().setConfigurationHashContainer(configurationManager.getConfigurationHashContainer());
  transportContext.getConfigurationTransport().setConfigurationProcessor(configurationManager.getConfigurationProcessor());
  transportContext.getUserTransport().setEndpointRegistrationProcessor(endpointRegistrationManager);
  transportContext.getLogTransport().setLogProcessor(logCollector);
  transportContext.initTransports(this.channelManager,this.kaaClientState);
  eventFamilyFactory=new EventFamilyFactory(eventManager,context.getExecutorContext());
}
