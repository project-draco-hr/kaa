{
  try {
    NotificationDto notificationDto=new NotificationDto();
    if (line.hasOption("s")) {
      String schemaId=line.getOptionValue("s");
      if (StringUtils.isNotBlank(schemaId)) {
        notificationDto.setSchemaId(schemaId);
      }
 else {
        errorWriter.println(INVALID_SCHEMA_ID_FOR_NOTIFICATION);
        return;
      }
    }
    if (line.hasOption("t")) {
      String topicId=line.getOptionValue("t");
      if (StringUtils.isNotBlank(topicId)) {
        notificationDto.setTopicId(topicId);
      }
 else {
        errorWriter.println(INVALID_TOPIC_ID_FOR_NOTIFICATION);
        return;
      }
    }
    if (line.hasOption("l")) {
      String ttl=line.getOptionValue("l");
      try {
        long time=System.currentTimeMillis() + (Integer.valueOf(ttl) * 1000L);
        notificationDto.setExpiredAt(new Date(time));
      }
 catch (      NumberFormatException ex) {
        errorWriter.println(INCORRECT_FORMAT_OF_TTL + ex.getMessage());
        return;
      }
    }
    if (line.hasOption("f")) {
      String schemaFile=line.getOptionValue("f");
      String schema=readFile(schemaFile,errorWriter);
      if (schema != null) {
        notificationDto.setBody(schema.getBytes(UTF8));
      }
 else {
        errorWriter.println(CANT_READ_FILE);
        return;
      }
    }
 else     if (line.hasOption("b")) {
      String body=line.getOptionValue("b");
      notificationDto.setBody(body.getBytes(UTF8));
    }
 else {
      errorWriter.println(NEED_TO_SET_BODY);
      return;
    }
    NotificationDto savedNotification=toDto(client.editNotification(toDataStruct(notificationDto)));
    writer.println("Created new Notification with id: " + savedNotification.getId());
    if (line.hasOption("o")) {
      String outFileName=line.getOptionValue("o");
      storeInfo(outFileName,savedNotification.getId(),errorWriter);
    }
  }
 catch (  TException e) {
    handleException(UNABLE_TO + CREATE + NOTIFICATION,e,errorWriter);
  }
}
