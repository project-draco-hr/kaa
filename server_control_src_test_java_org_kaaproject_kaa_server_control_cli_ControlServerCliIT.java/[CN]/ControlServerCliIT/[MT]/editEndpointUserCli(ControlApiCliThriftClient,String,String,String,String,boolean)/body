{
  cliOut.reset();
  boolean create=strIsEmpty(endpointUserId);
  int result;
  if (create) {
    if (strIsEmpty(tenantId)) {
      tenantId=editTenantCli(cli,null,tenantName,false);
      cliOut.reset();
    }
    String cmdLine=MessageFormat.format("createEndpointUser -n testEndpointUser -t {0} -e {1} -a testAccessToken",tenantId,testExternalId);
    if (createOut) {
      cmdLine+=" -o dummy.out";
    }
    result=cli.processLine(cmdLine);
  }
 else {
    String cmdLine=MessageFormat.format("editEndpointUser -n testEndpointUser2 -i {0} -e {1} -a testAccessToken",endpointUserId,testExternalId);
    result=cli.processLine(cmdLine);
  }
  Assert.assertEquals(0,result);
  String output=cliOut.toString("UTF-8");
  if (create) {
    String test=output.trim();
    logger.debug(" ---> TEST LOGS: " + test);
    String id=test.substring("Created new endpoint user with id: ".length()).trim();
    return id;
  }
 else   if (endpointUserId.equals(FAKE_ID)) {
    logger.debug(" ---> TEST LOGS: " + output.trim());
    Assert.assertTrue(output.trim().startsWith("Endpoint user with id " + FAKE_ID + " not found!"));
    return endpointUserId;
  }
 else {
    logger.debug(" ---> TEST LOGS: " + output.trim());
    Assert.assertTrue(output.trim().startsWith("Endpoint user updated."));
    return endpointUserId;
  }
}
