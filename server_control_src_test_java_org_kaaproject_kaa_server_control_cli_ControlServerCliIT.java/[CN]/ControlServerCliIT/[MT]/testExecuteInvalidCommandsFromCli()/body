{
  controlClientConnect();
  ControlApiCliThriftClient cli=new ControlApiCliThriftClient();
  testInvalidCommand(cli,"createEndpointGroup -n testEndpointGroup -a 1 -w a","Unable to parse weight option!");
  testInvalidCommand(cli,"createTopic -a  -n topic -t mandatory","Invalid application id for topic.");
  testInvalidCommand(cli,"addTopicToEndpointGroup -i fake -t fake","Incorrect endpoint group id.");
  testInvalidCommand(cli,"removeTopicFromEndpointGroup -i fake -t fake","Incorrect endpoint group id.");
  testInvalidCommand(cli,"addTopicToEndpointGroup -i " + FAKE_SQL_ID + " -t fake","Incorrect topic id.");
  testInvalidCommand(cli,"removeTopicFromEndpointGroup -i " + FAKE_ID + " -t fake","Incorrect topic id.");
  testInvalidCommand(cli,"createNotification -s fake -t fake","Invalid schema id for notification.");
  testInvalidCommand(cli,"createNotification -s " + FAKE_ID + " -t fake","Invalid topic id for notification.");
  testInvalidCommand(cli,"createNotification -s " + FAKE_ID + " -t "+ FAKE_ID+ " -l a","Incorrect format of ttl:");
  testInvalidCommand(cli,"createNotification -s " + FAKE_ID + " -t "+ FAKE_ID+ " -l 10","Need to set body or file with body for notification");
  testInvalidCommand(cli,"createNotification -s " + FAKE_ID + " -t "+ FAKE_ID+ " -l 10 -f fake","Can't read file. Please check file name.");
  testInvalidCommand(cli,"createUnicastNotification -t fake -s fake -k fake","Invalid topic id for notification.");
  testInvalidCommand(cli,"createUnicastNotification -t " + FAKE_ID + " -s fake -k fake","Invalid schema id for notification.");
  testInvalidCommand(cli,"createUnicastNotification -t " + FAKE_ID + " -s"+ FAKE_ID+ " -k ''","Empty key hash for unicast notification.");
  testInvalidCommand(cli,"createUnicastNotification -t " + FAKE_ID + " -s"+ FAKE_ID+ " -k keyhash -l a","Incorrect format of ttl:");
  testInvalidCommand(cli,"createUnicastNotification -t " + FAKE_ID + " -s"+ FAKE_ID+ " -k keyhash -l 10","Need to set body or file with body for notification");
  testInvalidCommand(cli,"createUnicastNotification -t " + FAKE_ID + " -s"+ FAKE_ID+ " -k keyhash -l 10 -f fake","Can't read file. Please check file name.");
  testInvalidCommand(cli,"createNotificationSchema -a fake -t fake","Invalid application id for notification.");
  testInvalidCommand(cli,"createNotificationSchema -a " + FAKE_ID + " -t ''","Empty type of notification");
  testInvalidCommand(cli,"createNotificationSchema -a " + FAKE_ID + " -t fake","Incorrect type of notification");
  testInvalidCommand(cli,"createNotificationSchema -a " + FAKE_ID + " -t USER","Need to set body or file with body for notification schema");
  testInvalidCommand(cli,"createNotificationSchema -a " + FAKE_ID + " -t USER -f fake","Can't read file. Please check file name.");
  testInvalidCommand(cli,"deleteConfigurationSchema -i " + FAKE_ID,"Command not supported!");
}
