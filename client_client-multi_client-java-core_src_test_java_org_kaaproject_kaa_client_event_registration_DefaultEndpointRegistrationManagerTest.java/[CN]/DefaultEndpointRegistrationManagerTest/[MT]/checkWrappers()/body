{
  String token1="token1";
  String token2="token2";
  EndpointAccessToken at1=new EndpointAccessToken(token1);
  EndpointAccessToken at1_2=new EndpointAccessToken(token1);
  EndpointAccessToken at2=new EndpointAccessToken(token2);
  assertEquals("EnndpointAccessToken != EndpointAccessToken",at1,at1);
  assertNotEquals("EndpointAccessToken should be not equal to String object",at1,token1);
  assertEquals("toString() returned different value from getToken()",at1.getToken(),at1.toString());
  assertEquals("Objects with equal tokens are not equal",at1,at1_2);
  assertNotEquals("Objects with different tokens are equal",at1,at2);
  assertEquals("Objects' hash codes with equal tokens are not equal",at1.hashCode(),at1_2.hashCode());
  assertNotEquals("Objects' hash codes with different tokens are equal",at1.hashCode(),at2.hashCode());
  at1_2.setToken(token2);
  assertEquals("Objects with equal tokens are not equal",at1_2,at2);
  assertNotEquals("Objects with different tokens are equal",at1,at1_2);
  EndpointAccessToken emptyToken1=new EndpointAccessToken(null);
  EndpointAccessToken emptyToken2=new EndpointAccessToken(null);
  assertEquals("Empty objects with are not equal",emptyToken1,emptyToken2);
  assertEquals("Objects' hash codes with empty tokens are not equal",emptyToken1.hashCode(),emptyToken1.hashCode());
  assertNotEquals("Different objects are equal",at1,emptyToken1);
  assertNotEquals("Null-equality of EndpointAccessToken",at1,null);
  String hash1="hash1";
  String hash2="hash2";
  EndpointKeyHash eoh1=new EndpointKeyHash(hash1);
  EndpointKeyHash eoh1_2=new EndpointKeyHash(hash1);
  EndpointKeyHash eoh2=new EndpointKeyHash(hash2);
  assertEquals("EndpointKeyHash != EndpointKeyHash",eoh1,eoh1);
  assertNotEquals("EndpointKeyHash should be not equal to String object",eoh1,hash1);
  assertEquals("toString() returned different value from getKeyHash()",eoh1.getKeyHash(),eoh1.toString());
  assertEquals("Objects with equal keyHashes are not equal",eoh1,eoh1_2);
  assertNotEquals("Objects with different keyHashes are equal",eoh1,eoh2);
  assertEquals("Objects' hash codes with equal keyHashes are not equal",eoh1.hashCode(),eoh1_2.hashCode());
  assertNotEquals("Objects' hash codes with different keyHashes are equal",eoh1.hashCode(),eoh2.hashCode());
  eoh1_2.setKeyHash(hash2);
  assertEquals("Objects with equal keyHashes are not equal",eoh1_2,eoh2);
  assertNotEquals("Objects with different keyHashes are equal",eoh1,eoh1_2);
  EndpointKeyHash emptyHash1=new EndpointKeyHash(null);
  EndpointKeyHash emptyHash2=new EndpointKeyHash(null);
  assertEquals("Empty objects with are not equal",emptyHash1,emptyHash2);
  assertEquals("Objects' hash codes with empty hashes are not equal",emptyHash1.hashCode(),emptyHash1.hashCode());
  assertNotEquals("Different objects are equal",eoh1,emptyHash1);
  assertNotEquals("Null-equality of EndpointKeyHash",eoh1,null);
}
