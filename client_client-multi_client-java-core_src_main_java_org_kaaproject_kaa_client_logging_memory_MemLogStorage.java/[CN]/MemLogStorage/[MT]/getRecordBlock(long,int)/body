{
  LOG.trace("Getting new record block with block size = {} and count = {}",blockSize,batchCount);
  if (blockSize > maxBucketSize || batchCount > maxBucketRecordCount) {
    LOG.warn("Resize of record block is not supported yet");
  }
  MemBucket bucketCandidate=null;
synchronized (buckets) {
    for (    MemBucket bucket : buckets.values()) {
      if (bucket.getState() == MemBucketState.FREE) {
        bucketCandidate=bucket;
      }
      if (bucket.getState() == MemBucketState.FULL) {
        bucket.setState(MemBucketState.PENDING);
        bucketCandidate=bucket;
        break;
      }
    }
  }
  LogBlock result=null;
  if (bucketCandidate != null) {
    if (bucketCandidate.getState() == MemBucketState.FREE) {
      LOG.trace("Only a bucket with state FREE found");
      bucketCandidate.setState(MemBucketState.PENDING);
    }
    if (bucketCandidate.getSize() <= blockSize && bucketCandidate.getCount() <= batchCount) {
      result=new LogBlock(bucketCandidate.getId(),bucketCandidate.getRecords());
      LOG.debug("Return record block with records count: [{}]",bucketCandidate.getCount());
    }
 else {
      LOG.debug("Shrinking bucket {} to new size: [{}] and count: [{}]",bucketCandidate,blockSize,batchCount);
      List<LogRecord> overSized=bucketCandidate.shrinkToSize(blockSize,batchCount);
      result=new LogBlock(bucketCandidate.getId(),bucketCandidate.getRecords());
      for (      LogRecord record : overSized) {
        addLogRecord(record);
      }
    }
  }
  return result;
}
