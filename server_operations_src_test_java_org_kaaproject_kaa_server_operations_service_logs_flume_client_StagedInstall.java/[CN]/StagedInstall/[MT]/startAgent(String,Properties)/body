{
  Preconditions.checkArgument(!name.isEmpty(),"agent name must not be empty");
  Preconditions.checkNotNull(properties,"properties object must not be null");
  agentName=name;
  if (process != null) {
    throw new Exception("A process is already running");
  }
  LOGGER.info("Starting process for agent: " + agentName + " using config: "+ properties);
  File configFile=createConfigurationFile(agentName,properties);
  configFilePath=configFile.getCanonicalPath();
  String configFileName=configFile.getName();
  String logFileName="flume-" + agentName + "-"+ configFileName.substring(0,configFileName.indexOf('.'))+ ".log";
  LOGGER.info("Created configuration file: " + configFilePath);
  ImmutableList.Builder<String> builder=new ImmutableList.Builder<String>();
  builder.add(launchScriptPath);
  builder.add("agent");
  builder.add("--conf",confDirPath);
  builder.add("--conf-file",configFilePath);
  builder.add("--name",agentName);
  builder.add("-D" + ENV_FLUME_LOG_DIR + "="+ logDirPath);
  builder.add("-D" + ENV_FLUME_ROOT_LOGGER + "="+ ENV_FLUME_ROOT_LOGGER_VALUE);
  builder.add("-D" + ENV_FLUME_LOG_FILE + "="+ logFileName);
  List<String> cmdArgs=builder.build();
  LOGGER.info("Using command: " + Joiner.on(" ").join(cmdArgs));
  ProcessBuilder pb=new ProcessBuilder(cmdArgs);
  Map<String,String> env=pb.environment();
  LOGGER.debug("process environment: " + env);
  pb.directory(baseDir);
  pb.redirectErrorStream(true);
  process=pb.start();
  consumer=new ProcessInputStreamConsumer(process.getInputStream());
  consumer.start();
  shutdownHook=new ProcessShutdownHook();
  Runtime.getRuntime().addShutdownHook(shutdownHook);
  Thread.sleep(3000);
}
