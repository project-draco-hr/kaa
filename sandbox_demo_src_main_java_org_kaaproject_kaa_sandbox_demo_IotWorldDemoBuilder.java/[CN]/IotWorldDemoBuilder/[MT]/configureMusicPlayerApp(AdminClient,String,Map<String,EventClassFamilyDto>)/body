{
  SdkPropertiesDto sdkProperties=createSdkProperties(client,applicationId,true);
  List<String> aefMapIds=new ArrayList<>();
  aefMapIds.add(createAefMap(client,applicationId,ecfMap.get(DEVICE_EVENT_CLASS_FAMILY),defaultDeviceAefMap));
  aefMapIds.add(createAefMap(client,applicationId,ecfMap.get(GEO_FENCING_EVENT_CLASS_FAMILY),defaultGeoFencingDeviceAefMap));
  Map<String,ApplicationEventAction> actionsMap=new HashMap<>();
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.PlayListRequest",ApplicationEventAction.SINK);
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.PlayListResponse",ApplicationEventAction.SOURCE);
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.PlayRequest",ApplicationEventAction.SINK);
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.PauseRequest",ApplicationEventAction.SINK);
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.StopRequest",ApplicationEventAction.SINK);
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.ChangeVolumeRequest",ApplicationEventAction.SINK);
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.SeekRequest",ApplicationEventAction.SINK);
  actionsMap.put("org.kaaproject.kaa.demo.iotworld.music.PlaybackStatusUpdate",ApplicationEventAction.SOURCE);
  aefMapIds.add(createAefMap(client,applicationId,ecfMap.get(MUSIC_EVENT_CLASS_FAMILY),actionsMap));
  sdkProperties.setAefMapIds(aefMapIds);
  projectsSdkMap.put(MUSICPLAYER_JAVA_ID,sdkProperties);
}
