{
  Properties props=new Properties();
  String commTimeout="1001";
  props.put(RobotEmulator.PROPERTY_NAME_COMMAND_TIMEOUT,commTimeout);
  String commTimeoutDev="101";
  props.put(RobotEmulator.PROPERTY_NAME_COMMAND_TIMEOUT_DEVIATION,commTimeoutDev);
  String pingTimeout="203";
  props.put(RobotEmulator.PROPERTY_NAME_PING_TIMEOUT,pingTimeout);
  RobotEmulator emu=new RobotEmulator(labyrinth,getInitialPosition(),getInitialDirection(),props);
  assertNotNull(emu);
  final Object obj=new Object();
  OK=false;
  emu.registerStateCallback(new StateCallback(){
    @Override public void onDisconnected(){
    }
    @Override public void onConnected(    String deviceName){
synchronized (obj) {
        OK=true;
        obj.notify();
      }
    }
  }
);
  try {
    emu.start();
  }
 catch (  Exception e) {
    Assert.assertTrue(false);
  }
synchronized (obj) {
    try {
      obj.wait(2000);
      assertEquals(true,OK);
    }
 catch (    InterruptedException e) {
      fail("Creator wait failed");
    }
  }
  assertEquals(labyrinth,emu.getLabyrinth());
  assertEquals(getInitialPosition(),emu.getCurrentPosition());
  assertEquals(getInitialDirection(),emu.getCurrentDirection());
  assertEquals(Long.parseLong(commTimeout),emu.getCommandTimeout());
  assertEquals(Integer.parseInt(commTimeoutDev),emu.getTimeoutDeviation());
  assertEquals(Integer.parseInt(pingTimeout),emu.getPingTimeout());
  emu.shutdown();
}
