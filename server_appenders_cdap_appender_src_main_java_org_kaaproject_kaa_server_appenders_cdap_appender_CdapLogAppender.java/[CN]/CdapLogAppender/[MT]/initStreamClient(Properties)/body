{
  String host=properties.getProperty(HOST,DEFAULT_HOST);
  int port=Integer.valueOf(properties.getProperty(PORT,DEFAULT_PORT));
  boolean ssl=Boolean.parseBoolean(properties.getProperty(SSL,DEFAULT_SSL));
  RestStreamClient.Builder builder=RestStreamClient.builder(host,port).ssl(ssl);
  if (properties.containsKey(WRITER_POOL_SIZE)) {
    builder.writerPoolSize(getPropertyValue(properties,WRITER_POOL_SIZE,DEFAULT_WRITER_POOL_SIZE,MAX_WRITER_POOL_SIZE));
  }
  if (properties.containsKey(VERSION)) {
    builder.version(properties.getProperty(VERSION));
  }
  if (properties.containsKey(VERIFY_SSL_CERT)) {
    builder.verifySSLCert(Boolean.parseBoolean(properties.getProperty(VERIFY_SSL_CERT)));
  }
  if (properties.containsKey(AUTH_CLIENT)) {
    AuthenticationClient authClient=(AuthenticationClient)Class.forName(properties.getProperty(AUTH_CLIENT)).getConstructor().newInstance();
    authClient.setConnectionInfo(host,port,ssl);
    if (authClient.isAuthEnabled()) {
      authClient.configure(properties);
    }
    builder.authClient(authClient);
  }
  return builder.build();
}
