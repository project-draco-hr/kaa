{
  Map<TransportProtocolId,List<TransportConnectionInfo>> bootststrapServers=getDefaultBootstrapServers();
  BootstrapManager bootstrapManager=Mockito.mock(BootstrapManager.class);
  KaaDataChannel channel=Mockito.mock(KaaDataChannel.class);
  Mockito.when(channel.getSupportedTransportTypes()).thenReturn(SUPPORTED_TYPES);
  Mockito.when(channel.getTransportProtocolId()).thenReturn(TransportProtocolIdConstants.HTTP_TRANSPORT_ID);
  Mockito.when(channel.getId()).thenReturn("mock_channel");
  KaaChannelManager channelManager=new DefaultChannelManager(bootstrapManager,bootststrapServers);
  channelManager.addChannel(channel);
  TransportConnectionInfo opServer=IPTransportInfoTest.createTestServerInfo(ServerType.OPERATIONS,TransportProtocolIdConstants.HTTP_TRANSPORT_ID,"localhost",9999,KeyUtil.generateKeyPair().getPublic());
  channelManager.onTransportConnectionInfoUpdated(opServer);
  channelManager.onServerFailed(opServer);
  Mockito.verify(bootstrapManager,Mockito.times(1)).useNextOperationsServer(TransportProtocolIdConstants.HTTP_TRANSPORT_ID);
}
