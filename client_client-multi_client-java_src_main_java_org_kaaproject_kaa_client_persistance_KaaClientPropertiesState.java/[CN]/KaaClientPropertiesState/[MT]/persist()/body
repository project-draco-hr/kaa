{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  BinaryEncoder encoder=EncoderFactory.get().binaryEncoder(baos,null);
  SpecificDatumWriter<TopicSubscriptionInfo> datumWriter=new SpecificDatumWriter<TopicSubscriptionInfo>(TopicSubscriptionInfo.class);
  try {
    for (    Map.Entry<String,TopicSubscriptionInfo> cursor : nfSubscriptions.entrySet()) {
      datumWriter.write(cursor.getValue(),encoder);
      LOG.info("Persisted {}",cursor.getValue());
    }
    encoder.flush();
    state.setProperty(NF_SUBSCRIPTIONS,baos.toString());
  }
 catch (  IOException e) {
    LOG.error("Can't persist notification subscription info",e);
  }
  try {
    new File(stateFileLocation).renameTo(new File(stateFileLocation + "_bckp"));
    File stateFile=new File(stateFileLocation);
    OutputStream os=new FileOutputStream(stateFile);
    state.store(os,null);
    os.close();
  }
 catch (  IOException e) {
    LOG.error("Can't persist state file",e);
  }
}
