{
  BufferedReader bufferedReader=null;
  String line;
  StringBuilder responseJson=new StringBuilder();
  int responseCode=0;
  HttpURLConnection connection=null;
  try {
    connection=establishConnection(url);
    connection.setRequestMethod("GET");
    responseCode=connection.getResponseCode();
    if (responseCode == 400) {
      callback.onTokenInvalid();
      return;
    }
    if (responseCode == 200) {
      bufferedReader=new BufferedReader(new InputStreamReader(connection.getInputStream()));
      while ((line=bufferedReader.readLine()) != null) {
        responseJson.append(line);
      }
      bufferedReader.close();
      ObjectMapper mapper=new ObjectMapper();
      Map<String,String> map=mapper.readValue(responseJson.toString(),Map.class);
      String userId=map.get("user_id");
      if (!userExternalId.equals(userId)) {
        LOG.trace("Input token doesn't belong to the user with {} id",userExternalId);
        callback.onVerificationFailure("User access token doesn't belong to the user");
        return;
      }
 else {
        LOG.trace("Input token is confirmed and belongs to the user with {} id",userExternalId);
        callback.onSuccess();
        return;
      }
    }
  }
 catch (  IOException e) {
    LOG.debug("message",e);
  }
 finally {
    if (null != connection) {
      connection.disconnect();
    }
    if (null != bufferedReader) {
      try {
        bufferedReader.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
  LOG.trace("Server response code: {} no data can be retrieved" + responseCode);
  callback.onVerificationFailure("Server response code:" + responseCode + ", no data can be retrieved");
}
