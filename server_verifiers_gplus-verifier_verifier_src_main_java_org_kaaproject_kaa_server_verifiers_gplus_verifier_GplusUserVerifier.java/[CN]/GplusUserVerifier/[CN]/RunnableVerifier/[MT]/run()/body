{
  HttpURLConnection connection=null;
  try {
    String responseJson="";
    int responseCode;
    connection=establishConnection(url);
    connection.setRequestMethod("GET");
    responseCode=connection.getResponseCode();
    if (responseCode == HTTP_OK) {
      responseJson=readResponse(connection.getInputStream());
      ObjectMapper mapper=new ObjectMapper();
      Map<String,String> map=mapper.readValue(responseJson.toString(),Map.class);
      String userId=String.valueOf(map.get("user_id"));
      if (!userExternalId.equals(userId)) {
        callback.onVerificationFailure("User access token doesn't belong to the user");
        LOG.trace("Input token doesn't belong to the user with {} id",userExternalId);
      }
 else {
        callback.onSuccess();
        LOG.trace("Input token is confirmed and belongs to the user with {} id",userExternalId);
      }
    }
    if (responseCode == HTTP_BAD_REQUEST) {
      callback.onTokenInvalid();
      LOG.trace("Server auth error: {}",readResponse(connection.getErrorStream()));
    }
 else {
      callback.onInternalError();
      LOG.trace("Server returned the following error code: {}",responseCode);
    }
  }
 catch (  IOException e) {
    LOG.debug("Internal error: ",e);
  }
 finally {
    if (null != connection) {
      connection.disconnect();
    }
  }
}
