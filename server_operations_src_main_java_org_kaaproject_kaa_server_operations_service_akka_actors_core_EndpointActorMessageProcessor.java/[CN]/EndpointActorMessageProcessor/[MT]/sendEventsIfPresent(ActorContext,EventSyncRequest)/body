{
  List<Event> events=request.getEvents();
  if (userId != null && events != null && !events.isEmpty()) {
    LOG.debug("[{}][{}] Processing events {} with seq number > {}",endpointKey,actorKey,events,processedEventSeqNum);
    List<Event> eventsToSend=new ArrayList<>(events.size());
    int maxSentEventSeqNum=processedEventSeqNum;
    for (    Event event : events) {
      if (event.getSeqNum() > processedEventSeqNum) {
        event.setSource(endpointKey);
        eventsToSend.add(event);
        maxSentEventSeqNum=Math.max(event.getSeqNum(),maxSentEventSeqNum);
      }
 else {
        LOG.debug("[{}][{}] Ignoring duplicate/old event {} due to seq number < {}",endpointKey,actorKey,events,processedEventSeqNum);
      }
    }
    processedEventSeqNum=maxSentEventSeqNum;
    if (!eventsToSend.isEmpty()) {
      EndpointEventSendMessage message=new EndpointEventSendMessage(userId,eventsToSend,key,appToken,context.self());
      context.parent().tell(message,context.self());
    }
  }
}
