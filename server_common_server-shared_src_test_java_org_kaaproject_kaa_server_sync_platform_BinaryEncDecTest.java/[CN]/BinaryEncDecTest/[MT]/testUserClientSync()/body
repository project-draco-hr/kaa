{
  ByteBuffer buf=ByteBuffer.wrap(new byte[4 + 4 + 8+ 4+ 4+ 8+ 4+ 4+ SHA_1_LENGTH]);
  buf.put((byte)0);
  buf.put((byte)4);
  buf.put((byte)0);
  buf.put((byte)5);
  buf.put("user".getBytes(Charset.forName("UTF-8")));
  buf.put("token".getBytes(Charset.forName("UTF-8")));
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)1);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)1);
  buf.putShort(BIG_MAGIC_NUMBER);
  buf.put((byte)0);
  buf.put((byte)6);
  buf.put("token2".getBytes(Charset.forName("UTF-8")));
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)2);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)1);
  buf.putShort((short)(BIG_MAGIC_NUMBER + 1));
  buf.put((byte)0);
  buf.put((byte)0);
  byte[] keyHash=new byte[SHA_1_LENGTH];
  keyHash[MAGIC_INDEX]=MAGIC_NUMBER;
  buf.put(keyHash);
  ClientSync sync=encDec.decode(concat(buildHeader(Constants.KAA_PLATFORM_PROTOCOL_BINARY_ID,1,2),getValidMetaData(),buildExtensionHeader(BinaryEncDec.USER_EXTENSION_ID,0,0,0,buf.array().length),buf.array()));
  Assert.assertNotNull(sync);
  Assert.assertNotNull(sync.getClientSyncMetaData());
  Assert.assertNotNull(sync.getUserSync());
  UserClientSync uSync=sync.getUserSync();
  Assert.assertNotNull(uSync.getUserAttachRequest());
  Assert.assertEquals("user",uSync.getUserAttachRequest().getUserExternalId());
  Assert.assertEquals("token",uSync.getUserAttachRequest().getUserAccessToken());
  Assert.assertNotNull(uSync.getEndpointAttachRequests());
  Assert.assertEquals(1,uSync.getEndpointAttachRequests().size());
  Assert.assertEquals(BIG_MAGIC_NUMBER,uSync.getEndpointAttachRequests().get(0).getRequestId());
  Assert.assertEquals("token2",uSync.getEndpointAttachRequests().get(0).getEndpointAccessToken());
  Assert.assertNotNull(uSync.getEndpointDetachRequests());
  Assert.assertEquals(1,uSync.getEndpointDetachRequests().size());
  Assert.assertEquals(BIG_MAGIC_NUMBER + 1,uSync.getEndpointDetachRequests().get(0).getRequestId());
  Assert.assertEquals(Base64Util.encode(keyHash),uSync.getEndpointDetachRequests().get(0).getEndpointKeyHash());
}
