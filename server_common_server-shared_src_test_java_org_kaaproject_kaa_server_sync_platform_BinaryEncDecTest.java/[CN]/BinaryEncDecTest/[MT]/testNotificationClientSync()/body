{
  ByteBuffer buf=ByteBuffer.wrap(new byte[4 + 4 + 8+ 4+ 4+ 4+ 3+ 1+ 4+ 8+ 4+ 8]);
  buf.putInt(MAGIC_NUMBER);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.putShort((short)1);
  buf.putLong(303l);
  buf.putInt(MAGIC_NUMBER);
  buf.put((byte)1);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)1);
  buf.putInt(3);
  buf.put("uid".getBytes(Charset.forName("UTF-8")));
  buf.put((byte)0);
  buf.put((byte)2);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)1);
  buf.putLong(101);
  buf.put((byte)3);
  buf.put((byte)0);
  buf.put((byte)0);
  buf.put((byte)1);
  buf.putLong(202);
  ClientSync sync=encDec.decode(concat(buildHeader(Constants.KAA_PLATFORM_PROTOCOL_BINARY_ID,1,2),getValidMetaData(),buildExtensionHeader(BinaryEncDec.NOTIFICATION_EXTENSION_ID,0,0x02,buf.array().length),buf.array()));
  Assert.assertNotNull(sync);
  Assert.assertNotNull(sync.getClientSyncMetaData());
  Assert.assertNotNull(sync.getNotificationSync());
  NotificationClientSync nSync=sync.getNotificationSync();
  Assert.assertEquals(MAGIC_NUMBER,nSync.getTopicListHash());
  Assert.assertNotNull(nSync.getAcceptedUnicastNotifications());
  Assert.assertEquals(1,nSync.getAcceptedUnicastNotifications().size());
  Assert.assertEquals("uid",nSync.getAcceptedUnicastNotifications().get(0));
  Assert.assertNotNull(nSync.getSubscriptionCommands());
  Assert.assertEquals(2,nSync.getSubscriptionCommands().size());
  Assert.assertEquals(SubscriptionCommandType.ADD,nSync.getSubscriptionCommands().get(0).getCommand());
  Assert.assertEquals("101",nSync.getSubscriptionCommands().get(0).getTopicId());
  Assert.assertEquals(SubscriptionCommandType.REMOVE,nSync.getSubscriptionCommands().get(1).getCommand());
  Assert.assertEquals("202",nSync.getSubscriptionCommands().get(1).getTopicId());
  Assert.assertNotNull(nSync.getTopicStates());
  Assert.assertEquals(1,nSync.getTopicStates().size());
  Assert.assertEquals("303",nSync.getTopicStates().get(0).getTopicId());
  Assert.assertEquals(MAGIC_NUMBER,nSync.getTopicStates().get(0).getSeqNumber());
}
