{
  CliSessionState ss=CliSessionState.get();
  ss.out.println();
  String cmdTrimmed=cmd.trim();
  int ret=0;
  if (cmdTrimmed.equalsIgnoreCase("quit") || cmdTrimmed.equalsIgnoreCase("exit")) {
    System.exit(0);
  }
 else   if (cmdTrimmed.equalsIgnoreCase("disconnect")) {
    if (ss.isRemoteMode()) {
      ss.close();
      prompt="kaa-console";
      prompt2="           ";
    }
 else {
      ss.err.println("Not connected!");
    }
  }
 else   if (ss.isRemoteMode()) {
    CliClient client=ss.getClient();
    PrintStream out=ss.out;
    PrintStream err=ss.err;
    try {
      CommandResult result=client.executeCommand(cmdTrimmed);
      out.print(result.message);
    }
 catch (    CliThriftException cliException) {
      ret=cliException.errorCode;
      if (ret != 0) {
        String errMsg=cliException.message;
        if (errMsg == null) {
          errMsg=cliException.toString();
        }
        err.println("[Thrift CLI Error]: " + errMsg);
      }
    }
catch (    TException e) {
      String errMsg=e.getMessage();
      if (errMsg == null) {
        errMsg=e.toString();
      }
      ret=-10002;
      err.println("[Thrift Error]: " + errMsg);
    }
  }
 else {
    PrintStream out=ss.out;
    PrintStream err=ss.err;
    if (cmdTrimmed.equalsIgnoreCase("help") || cmdTrimmed.equalsIgnoreCase("?")) {
      printHelp(out);
    }
 else     if (cmdTrimmed.toLowerCase().startsWith("connect")) {
      boolean parsed=false;
      String[] args=cmdTrimmed.toLowerCase().split(" ");
      if (args.length == 2) {
        String connectString=args[1];
        String[] hostPort=connectString.split(":");
        if (hostPort.length == 2) {
          String host=hostPort[0];
          String strPort=hostPort[1];
          int port=0;
          try {
            port=Integer.valueOf(strPort);
          }
 catch (          Exception e) {
            LOG.error("Unexpected exception while parsing port. Can not parse String: {} to Integer",strPort);
          }
          if (port > 0) {
            parsed=true;
            ss.host=host;
            ss.port=port;
            try {
              ss.connect();
            }
 catch (            TException e) {
              String errMsg=e.getMessage();
              if (errMsg == null) {
                errMsg=e.toString();
              }
              err.println("[Thrift Error]: " + errMsg);
            }
            if (ss.isRemoteMode()) {
              prompt="[" + ss.host + ':'+ ss.port+ "] "+ ss.remoteServerName;
              char[] spaces=new char[prompt.length()];
              Arrays.fill(spaces,' ');
              prompt2=new String(spaces);
            }
          }
        }
      }
      if (!parsed) {
        out.println("Unable to parse arguments.");
        out.println();
        out.println("Usage: connect <host:port>");
      }
    }
 else {
      out.println("Unknown command '" + cmdTrimmed + "'");
      out.println();
      printHelp(out);
    }
  }
  ss.out.println();
  return ret;
}
