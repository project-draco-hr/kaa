{
  final byte syncRequest[]=new byte[]{(byte)0xF0,0x0D,0x00,0x06,'K','a','a','t','c','p',0x01,0x00,0x05,0x15,(byte)0xFF};
  final byte syncRequest2[]=new byte[]{(byte)0xF0,0x0D,0x00,0x06,'K','a','a','t','c','p',0x01,0x00,0x05,0x15,(byte)0xFF};
  final byte syncRequest3[]=new byte[]{(byte)0xF0,0x0D,0x00,0x06,'K','a','a','t','c','p',0x01,0x00,0x05,0x15,(byte)0xFF};
  int totalLength=syncRequest.length + syncRequest2.length + syncRequest3.length;
  ByteBuffer totalBuffer=ByteBuffer.allocate(totalLength);
  totalBuffer.put(syncRequest);
  totalBuffer.put(syncRequest2);
  totalBuffer.put(syncRequest3);
  totalBuffer.position(0);
  byte[] firstBuffer=new byte[syncRequest.length - 2];
  totalBuffer.get(firstBuffer);
  byte[] secondBuffer=new byte[syncRequest2.length + 4];
  totalBuffer.get(secondBuffer);
  byte[] thirdBuffer=new byte[syncRequest3.length - 2];
  totalBuffer.get(thirdBuffer);
  MessageFactory factory=new MessageFactory();
  SyncRequestListener syncRequestListener=Mockito.spy(new SyncRequestListener(){
    @Override public void onMessage(    SyncRequest message){
      Assert.assertEquals(1,message.getAvroObject().length);
      Assert.assertEquals(0xFF,message.getAvroObject()[0] & 0xFF);
      Assert.assertEquals(5,message.getMessageId());
      Assert.assertEquals(false,message.isZipped());
      Assert.assertEquals(true,message.isEncrypted());
      Assert.assertEquals(true,message.isRequest());
    }
  }
);
  factory.registerMessageListener(syncRequestListener);
  int i=factory.getFramer().pushBytes(firstBuffer);
  Assert.assertEquals(firstBuffer.length,i);
  i=factory.getFramer().pushBytes(secondBuffer);
  Assert.assertEquals(secondBuffer.length,i);
  i=factory.getFramer().pushBytes(thirdBuffer);
  Assert.assertEquals(thirdBuffer.length,i);
  Mockito.verify(syncRequestListener,Mockito.times(3)).onMessage(Mockito.any(SyncRequest.class));
}
