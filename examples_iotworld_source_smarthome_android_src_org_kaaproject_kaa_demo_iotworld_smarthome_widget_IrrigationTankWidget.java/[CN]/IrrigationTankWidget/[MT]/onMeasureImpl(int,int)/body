{
  int rectHeight=width - getPaddingLeft();
  int rectWidth=(int)(0.9f * rectHeight);
  int top=height / 2 - (rectHeight / 2);
  int left=width / 2 - (rectWidth / 2);
  mTankRect.set(left,top,left + rectWidth,top + rectHeight);
  float backgroundTopOffset=0.1f * height;
  float strokeOffset=mStrokeWidth * 0.5f;
  mBackgroundPath.reset();
  mStrokePath.reset();
  mBackgroundPath.moveTo(mTankRect.right,mTankRect.top + backgroundTopOffset);
  mBackgroundPath.lineTo(mTankRect.right,mTankRect.bottom);
  mBackgroundPath.lineTo(mTankRect.left,mTankRect.bottom);
  mBackgroundPath.lineTo(mTankRect.left,mTankRect.top + backgroundTopOffset);
  float yDeviation=backgroundTopOffset / mWavesCount;
  float yMedian=mTankRect.top + backgroundTopOffset;
  float stepX=mTankRect.width() / mWavesCount;
  float startX=mTankRect.left;
  for (int i=0; i < mWavesCount; i++) {
    mStartPoint.set(startX + stepX * i,yMedian + yDeviation * (i % 2 == 0 ? -1f : 1f));
    mEndPoint.set(startX + stepX * (i + 1),yMedian + yDeviation * (i % 2 == 0 ? 1f : -1f));
    mMidPoint.set((mStartPoint.x + mEndPoint.x) / 2,(mStartPoint.y + mEndPoint.y) / 2);
    mBackgroundPath.quadTo((mStartPoint.x + mMidPoint.x) / 2,mStartPoint.y,mMidPoint.x,mMidPoint.y);
    mBackgroundPath.quadTo((mMidPoint.x + mEndPoint.x) / 2,mEndPoint.y,mEndPoint.x,mEndPoint.y);
  }
  mBackgroundPath.close();
  mStrokePath.moveTo(mTankRect.left + strokeOffset,mTankRect.top + strokeOffset);
  mStrokePath.lineTo(mTankRect.left + strokeOffset,mTankRect.bottom - strokeOffset);
  mStrokePath.lineTo(mTankRect.right - strokeOffset,mTankRect.bottom - strokeOffset);
  mStrokePath.lineTo(mTankRect.right - strokeOffset,mTankRect.top + strokeOffset);
}
